/*
	
	Copyright (c) 2012, Latitude Geographics Ltd.
	All rights reserved.
	       
	Redistribution is not permitted. 
	
	Use in binary form, without modification, is permitted provided that neither 
	the name of the organization nor the names of its contributors may be used 
	to endorse or promote products derived from this software without specific 
	prior written permission.
	       
	THIS SOFTWARE IS PROVIDED BY COPYRIGHT HOLDER ''AS IS'' AND ANY
	EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
	WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
	DISCLAIMED. IN NO EVENT SHALL  BE LIABLE FOR ANY
	DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
	(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
	LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
	ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
	(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
	SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

geocortex||(geocortex={});if(!geocortex.essentialsHtmlViewer)geocortex.essentialsHtmlViewer={};geocortex.essentialsHtmlViewer.version="1.1.0.0911";dojo.require("esri.layers.FeatureLayer");dojo.require("esri.layers.wms");dojo.require("esri.layers.wmts");dojo.require("esri.virtualearth.VETiledLayer");
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.tools.ToolBase",null,{constructor:function(a,b){dojo.mixin(this,b);this.app=a},app:null,name:"",isActive:false,setActive:function(a){a?(this.isActive=true,this.onActivated()):(this.isActive=false,this.onDeactivated())},onActivated:function(){},onDeactivated:function(){}});
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.search.SearchProviderBase",null,{constructor:function(a){this.app=a;this.id="SearchProvider-"+geocortex.utils.alphaNumericToken();this.supportsOffline=false;this.status=geocortex.essentialsHtmlViewer.mapping.infrastructure.search.Status.IDLE},initialize:function(a){this.inherited(arguments)},app:null,id:null,name:null,description:null,supportsOffline:null,isEnabled:null,status:null,search:function(){},cancelSearch:function(){}});
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.AttachmentInfo",null,{constructor:function(){this.id=new Observable;this.contentType=new Observable;this.size=new Observable;this.name=new Observable;this.url=new Observable},id:null,contentType:null,size:null,name:null,url:null});dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.AuthenticationEventArgs",null,{result:null,username:null,token:null});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.Feature");
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.Feature",null,{_graphic:null,_isAttachmentInfosLoaded:false,_defaultFieldFormatString:null,layer:null,featureSet:null,labelFormat:null,minScale:null,maxScale:null,zoomScale:null,zoomFactor:null,zoomExtent:null,borderColor:null,fillColor:null,id:null,attributes:null,label:null,description:null,descriptionFormat:null,longDescription:null,longDescriptionFormat:null,hyperlinks:null,extendedProperties:null,attachmentInfos:null,attachmentInfosInitialized:null,
hasAttachments:null,hasRelationships:null,hasGeometry:null,esriFeature:null,iconUri:null,_allowUnsafeContent:null,constructor:function(a){var b=this,c=null,d=false;if(a&&a.hasOwnProperty("graphic"))this._graphic=a.graphic;if(a&&a.hasOwnProperty("layer"))c=a.layer;if(a&&a.hasOwnProperty("resolveLayerFields"))d=a.resolveLayerFields;this._allowUnsafeContent=a&&a.hasOwnProperty("allowUnsafeContent")?a.allowUnsafeContent:false;this.esriFeature=new Observable(this._graphic);this.hasAttachments=new Observable(false);
this.hasRelationships=new Observable(false);this.hasVisibleRelationships=new Observable(false);this.hasGeometry=new Observable(false);this.hasGeometry.get=function(){return b._hasGeometryGet()};this.hyperlinks=new ObservableCollection;this._defaultFieldFormatString="{0}: {1}";this.attributes=new ObservableCollection;this.id=new Observable;this.id.get=function(){return b._idGet()};this.label=new Observable;this.label.get=function(){return b._labelGet()};this.labelFormat=new Observable;this.labelFormat.get=
function(){return b._labelFormatGet()};this.borderColor=new Observable;this.borderColor.get=function(){return b._borderColorGet()};this.fillColor=new Observable;this.fillColor.get=function(){return b._fillColorGet()};this.description=new Observable;this.description.get=function(){return b._descriptionGet()};this.descriptionFormat=new Observable;this.descriptionFormat.get=function(){return b._descriptionFormatGet()};this.longDescription=new Observable;this.longDescription.get=function(){return b._longDescriptionGet()};
this.longDescriptionFormat=new Observable;this.longDescriptionFormat.get=function(){return b._longDescriptionFormatGet()};this.minScale=new Observable;this.minScale.get=function(){return b._minScaleGet()};this.maxScale=new Observable;this.maxScale.get=function(){return b._maxScaleGet()};this.iconUri=new Observable;this.iconUri.get=function(){return b._iconUriGet()};this.zoomScale=new Observable;this.zoomScale.get=function(){return b._zoomScaleGet()};this.zoomExtent=new Observable;this.zoomFactor=
new Observable;this.zoomFactor.get=function(){return b._zoomFactorGet()};this.attachmentInfosInitialized=new Observable(false);this.extendedProperties=new ObservableCollection;if(c){this.layer=c;this.hasAttachments.set(this.layer.hasAttachments);if(this.layer.relationships&&this.layer.relationships.length>0){this.hasRelationships.set(true);for(a=0;a<this.layer.relationships.length;a++)if(this.layer.relationships[a].visible){this.hasVisibleRelationships.set(true);break}}c.FeatureHyperlinks!=null&&
this.hyperlinks.addItems(c.featureHyperlinks)}this.loadAttributes(d);this._prepAttachmentInfos()},withinScaleRange:function(a){return this.maxScale.get()==0&&this.minScale.get()==Infinity||isNaN(this.maxScale.get())&&isNaN(this.minScale.get())?true:!a?false:this.maxScale.get()<a&&a<this.minScale.get()},calculateScaleToMakeVisible:function(a){return this.withinScaleRange(a)?a:a>this.minScale.get()?this.minScale.get():this.maxScale.get()+1},_iconUriGet:function(){return this.iconUri.value?this.iconUri.value:
this.layer&&this.layer.iconUri?this.layer.iconUri:this.featureSet&&this.featureSet.iconUri&&this.featureSet.iconUri.value?this.featureSet.iconUri.value:null},_labelFormatGet:function(){return this.labelFormat.value?this.labelFormat.value:this.layer&&this.layer.featureLabel?this.layer.featureLabel:this.featureSet&&this.featureSet.esriFeatureSet&&this.featureSet.esriFeatureSet.displayFieldName?"{"+this.featureSet.esriFeatureSet.displayFieldName+"}":""},_idGet:function(){if(this.id.value)return this.id.value;
else{var a="";if(this._graphic&&this.layer){var b=null;this.layer&&(b=this.layer.getObjectIdFieldName());b&&this._graphic.attributes&&this._graphic.attributes.hasOwnProperty(b)&&(a=this._graphic.attributes[b])}return this.id.value=a}},_minScaleGet:function(){return this.minScale.value?this.minScale.value:this.layer&&!isNaN(this.layer.minScale)?this.layer.minScale:Infinity},_maxScaleGet:function(){return this.maxScale.value?this.maxScale.value:this.layer&&!isNaN(this.layer.maxScale)?this.layer.maxScale:
null},_zoomScaleGet:function(){return this.zoomScale.value?this.zoomScale.value:this.layer&&this.layer.featureZoomScale?this.layer.featureZoomScale:null},_zoomFactorGet:function(){return this.zoomFactor.value?this.zoomFactor.value:this.layer&&this.layer.featureZoomFactor?this.layer.featureZoomFactor:null},_borderColorGet:function(){return this.borderColor.value?this.borderColor.value:this.layer&&this.layer.featureBorderColor?this.layer.featureBorderColor:null},_getDefaultFieldValue:function(){var a=
"",b=this.esriFeature.get();b&&this.layer&&this.layer.displayField&&(a=b.attributes[this.layer.displayField.name]);if(!a&&b&&b.attributes)for(var c in b.attributes)if(b.attributes[c]){a=b.attributes[c];break}return a},_labelGet:function(){var a=null;this.label.value?a=this.label.value:(a=this._formatTemplateString(this.labelFormat.get()),a||(a=this._getDefaultFieldValue(),this.layer&&(a=this.layer.displayName+(a?": "+a:""))));return a?String.escapeHtml(a.toString()):""},_hasGeometryGet:function(){return this._graphic&&
this._graphic.geometry?true:false},_fillColorGet:function(){return this.fillColor.value?this.fillColor.value:this.layer&&this.layer.featureFillColor?this.layer.featureFillColor:null},_descriptionGet:function(){var a=null,a=this.description.value?this.description.value:this._formatTemplateString(this.descriptionFormat.get());this._allowUnsafeContent||(a=a?String.escapeHtml(a.toString()):"");return a},_longDescriptionGet:function(){var a=null,a=this.longDescription.value?this.longDescription.value:
this._formatTemplateString(this.longDescriptionFormat.get());this._allowUnsafeContent||(a=a?String.escapeHtml(a.toString()):"");return a},_descriptionFormatGet:function(){return this.descriptionFormat.value?this.descriptionFormat.value:this.layer&&this.layer.featureDescription?this.layer.featureDescription:null},_longDescriptionFormatGet:function(){return this.longDescriptionFormat.value?this.longDescriptionFormat.value:this.layer&&this.layer.featureLongDescription?this.layer.featureLongDescription:
this.descriptionFormat.get()},_prepAttachmentInfos:function(){var a=this,b=new ObservableCollection,c=b.get;b.get=function(){a._isAttachmentInfosLoaded||a._loadAttachmentsInfos();return c.call(b)};var d=b.getItems;b.getItems=function(){a._isAttachmentInfosLoaded||a._loadAttachmentsInfos();return d.call(b)};var e=b.getAt;b.getAt=function(c){a._isAttachmentInfosLoaded||a._loadAttachmentsInfos();return e.call(b,c)};this.attachmentInfos=b},loadAttributes:function(a){this.attributes.clear();this.attributes.addItems(this.getAttributes(a))},
getAttributes:function(a){var b=[];if(a!==false&&this.layer&&this.layer.fields)for(var c in this.layer.fields){var a=this.layer.fields[c],d;this._graphic&&this._graphic.attributes&&!String.isNullOrEmpty(a.name)&&(d=this._graphic.attributes[a.name]);a&&a.visible!==false&&(d?b.push(new FeatureAttribute(d,!String.isNullOrEmpty(a.name)?a.name:"",!String.isNullOrEmpty(a.alias)?a.alias:"",!String.isNullOrEmpty(a.displayName)?a.displayName:"",a.visible)):b.push(new FeatureAttribute("",!String.isNullOrEmpty(a.name)?
a.name:"",!String.isNullOrEmpty(a.alias)?a.alias:"",!String.isNullOrEmpty(a.displayName)?a.displayName:"",a.visible)))}else if(this.featureSet&&this.featureSet.attributes.length()>0&&this._graphic&&this._graphic.attributes)for(c=0;c<this.featureSet.attributes.length();c++)d=this.featureSet.attributes.getAt(c),a=d.name.get(),this._graphic.attributes.hasOwnProperty(a)&&b.push(new FeatureAttribute(this._graphic.attributes[a],a,d.alias.get(),d.displayName.get(),d.visible.get()));else if(this._graphic&&
this._graphic.attributes)for(c in this._graphic.attributes)b.push(new FeatureAttribute(this._graphic.attributes[c],c));return b},getPrimaryKeyValue:function(){var a=null;if(this.layer&&this.layer.primaryKeyField){var b=this.layer.primaryKeyField;b&&(a=this._graphic.attributes[b.name])}return a},getFeatureUrl:function(){var a=null,b=this.layer.getLayerUrl(),c=this.getPrimaryKeyValue();b&&c&&(a=b+"/"+c);return a},equals:function(a){if(!a||!a.declaredClass||a.declaredClass!="geocortex.essentialsHtmlViewer.mapping.infrastructure.Feature")return false;
if(this===a)return true;if(this._graphic===a._graphic)return true;if(!this._graphic||!a._graphic)return false;if(!(this.id===a.id||this.id&&a.id&&this.id==a.id))return false;if(!(this.layer===a.layer||this.layer&&a.layer&&this.layer.id==a.layer.id))return false;if(!(this.layer===a.layer||this.layer&&a.layer&&this.layer.mapservice===a.layer.mapservice||this.layer&&a.layer&&this.layer.mapservice&&a.layer.mapservice&&this.layer.mapservice.id==a.layer.mapservice.id))return false;if(!(this._graphic.attributes===
a._graphic.attributes||this._graphic.attributes&&a._graphic.attributes&&this._graphic.attributes.length==a._graphic.attributes.length))return false;if(this._graphic.attributes!==a._graphic.attributes){for(var b in this._graphic.attributes)if(!a._graphic.attributes[b]||a._graphic.attributes[b]!=this._graphic.attributes[b])return false;for(b in a._graphic.attributes)if(!this._graphic.attributes[b]||this._graphic.attributes[b]!=a._graphic.attributes[b])return false}if(!(this._graphic.geometry===a._graphic.geometry||
this._graphic.geometry&&a._graphic.geometry&&this._graphic.geometry.declaredClass==a._graphic.geometry.declaredClass))return false;b=function(a,b){return a===b||a[0]==b[0]&&a[1]==b[1]};switch(this._graphic.geometry.declaredClass){case "esri.geometry.MapPoint":return b(this._graphic.geometry,a._graphic.geometry);case "esri.geometry.MultiPoint":if(this._graphic.geometry.points.length!=a._graphic.geometry.points.length)return false;for(var c in this._graphic.geometry.points)if(!b(this._graphic.geometry.points[c],
a._graphic.geometry.points[c]))return false;break;case "esri.geometry.Polyline":if(this._graphic.geometry.paths.length!=a._graphic.geometry.paths.length)return false;for(var d in this._graphic.geometry.paths){if(this._graphic.geometry.paths[d].length!=a._graphic.geometry.paths[d].length)return false;for(c in this._graphic.geometry.paths[d])if(!b(this._graphic.geometry.points[d][c],a._graphic.geometry.points[d][c]))return false}break;case "esri.geometry.Polygon":if(this._graphic.geometry.rings.length!=
a._graphic.geometry.rings.length)return false;for(var e in this._graphic.geometry.rings){if(this._graphic.geometry.rings[e].length!=a._graphic.geometry.rings[e].length)return false;for(c in this._graphic.geometry.rings[e])if(!b(this._graphic.geometry.rings[e][c],a._graphic.geometry.rings[e][c]))return false}break;default:return false}return true},_loadAttachmentsInfos:function(){var a=this;this._isAttachmentInfosLoaded=true;var b=a.getFeatureUrl()+"/attachments";esri.request({url:b+"?f=json&ts="+
(new Date).getTime(),handleAs:"json"}).then(function(c){if(c&&c.attachmentInfos&&c.attachmentInfos.length>0){var d;for(d=0;d<c.attachmentInfos.length;d++){var e=c.attachmentInfos[d],f=new geocortex.essentialsHtmlViewer.mapping.infrastructure.AttachmentInfo;f.id.set(e.id);f.contentType.set(e.contentType);f.size.set(e.size);f.name.set(e.name);f.url.set(b+"/"+e.id);a.attachmentInfos.addItem(f)}}a.attachmentInfosInitialized.set(true)},function(){a.attachmentInfosInitialized.set(true)})},_formatTemplateString:function(a){if(!a)return"";
var b=this;return a.replace(/{.+?}/g,function(a){a=a.substring(1,a.length-1);return(a=b.esriFeature.get().attributes[a])?a:""})}});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureAttribute");
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureAttribute",null,{name:null,alias:null,displayName:null,value:null,visible:null,constructor:function(a,b,c,d,e){this.value=new Observable(a===void 0?"":a);this.name=new Observable(b===void 0?"":b);this.alias=new Observable(c===void 0?"":c);this.displayName=new Observable(d===void 0?"":d);this.visible=new Observable(e===void 0?true:e)}});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSet");
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSet",null,{id:null,esriFeatureSet:null,layer:null,uniqueId:null,displayName:null,features:null,attributes:null,iconUri:null,extendedProperties:null,isSelectedInCollection:null,_allowUnsafeContent:null,constructor:function(a){var b=null,c=null;if(a&&a.hasOwnProperty("esriFeatureSet"))b=a.esriFeatureSet;if(a&&a.hasOwnProperty("layer"))c=a.layer;this._allowUnsafeContent=a&&a.hasOwnProperty("allowUnsafeContent")?a.allowUnsafeContent:
false;var d=this;this.uniqueId="fs_"+geocortex.framework.utils.alphaNumericToken();this.id="";this.esriFeatureSet=b;if(c)this.layer=c;this.displayName=new Observable;this.displayName.get=function(){return d._displayNameGet()};this.iconUri=new Observable;this.iconUri.get=function(){return d._iconUriGet()};this.features=new ObservableCollection;this.attributes=new ObservableCollection;this.isSelectedInCollection=new Observable(false);this.extendedProperties=new ObservableCollection;this.loadFeatures();
this.loadAttributes()},addFeature:function(a){if(!a)throw Error("Feature cannot be null.");a.featureSet=this;this.features.addItem(a);this.esriFeatureSet&&this.esriFeatureSet.features&&this.esriFeatureSet.features.push(a.esriFeature)},loadGeometries:function(a,b){var c=this,d=new dojo.Deferred;if(!this.layer){var e=Error("loadGeometries: Layer must be present.");geocortex.deferredReject(d,e);typeof callbackErrors=="function"&&callbackErrors(e);return d}if(!this.layer.primaryKeyField)return e=Error("loadGeometries: Layer must have a PrimaryKeyField to load geometries."),
geocortex.deferredReject(d,e),typeof callbackErrors=="function"&&callbackErrors(e),d;var f=this.layer.primaryKeyField.name;a||(a=this.features.getItems());var g=[];if(a){var h;for(h=0;h<a.length;h++)feature=a[h],feature.hasGeometry.get()||(e=feature.esriFeature.get())&&e.attributes[f]&&g.push(feature)}if(g.length>0){e=[];for(h=0;h<g.length;h++)e.push(g[h].esriFeature.get().attributes[f]);h=new esri.tasks.QueryTask(this.layer.getLayerUrl());var i=new esri.tasks.Query;i.objectIds=e;i.returnGeometry=
true;i.outFields=[f];if(this.layer&&this.layer.mapService&&this.layer.mapService.essentialsMap&&this.layer.mapService.essentialsMap.site&&this.layer.mapService.essentialsMap.site.getMap())i.outSpatialReference=this.layer.mapService.essentialsMap.site.getMap().spatialReference;h.execute(i).then(function(a){if(a&&a.features&&a.features.length>0){var e;for(e=0;e<a.features.length;e++){var h=a.features[e],i=c._findFeature(h.attributes[f],f,g);if(i)i.esriFeature.get().geometry=h.geometry}}geocortex.deferredResolve(d);
typeof b=="function"&&b()},function(a){a=Error("loadGeometries: Query error: "+a.message);geocortex.deferredReject(d,a);typeof callbackErrors=="function"&&callbackErrors(a)})}else geocortex.deferredResolve(d),typeof b=="function"&&b();return d},_findFeature:function(a,b,c){var d=null,e,f;if(c&&c.length>0)for(e=0;e<c.length;e++)if((f=c[e].esriFeature.get())&&f.attributes&&f.attributes[b]==a){d=c[e];break}return d},_displayNameGet:function(){return this.displayName.value?this.displayName.value:this.layer&&
this.layer.displayName?this.layer.displayName:""},_iconUriGet:function(){return this.iconUri.value?this.iconUri.value:this.layer&&this.layer.iconUri?this.layer.iconUri:""},loadFeatures:function(){this.features.clear();var a=[],b;if(this.esriFeatureSet&&this.esriFeatureSet.features)for(var c=0;c<this.esriFeatureSet.features.length;++c)b=new Feature({graphic:this.esriFeatureSet.features[c],layer:this.layer,resolveLayerFields:true,allowUnsafeContent:this._allowUnsafeContent}),b.featureSet=this,a.push(b);
this.features.useThrottling=false;this.features.addItems(a);this.features.bind(this,this.featureSetChanged)},loadAttributes:function(){this.attributes.clear();var a=[];if(this.layer&&this.layer.fields)for(var b in this.layer.fields){var c=this.layer.fields[b];c&&c.visible!==false&&a.push(new FeatureAttribute("",!String.isNullOrEmpty(c.name)?c.name:"",!String.isNullOrEmpty(c.alias)?c.alias:"",!String.isNullOrEmpty(c.displayName)?c.displayName:"",c.visible))}else if(this.esriFeatureSet&&this.esriFeatureSet.features&&
this.esriFeatureSet.features.length>0)for(b in c=this.esriFeatureSet.features[0],c.attributes)c.attributes.hasOwnProperty(b)&&a.push(new FeatureAttribute("",b,b,b));this.attributes.addItems(a)},featureSetChanged:function(a){if(a.type=="append"||a.type=="insert")for(var b=a.rangeStart;b<=a.rangeEnd;b++)this.features.getAt(b).featureSet=this;if(a.type=="remove"||a.type=="clear")for(b=a.rangeStart;b<=a.rangeEnd;b++)this.features.getAt(b).featureSet=null},append:function(a){for(var b={},c=0;c<this.features.length();c++){var d=
this.features.getAt(c),e;if(this.layer&&this.layer.primaryKeyField)e=this.layer.primaryKeyField.name;if(e){var f=d.esriFeature.get().attributes[e];b[f]=d}}for(c=0;c<a.features.length();c++){d=a.features.getAt(c);if(a.layer&&a.layer.primaryKeyField)e=a.layer.primaryKeyField.name;e?(f=d.esriFeature.get().attributes[e],b[f]||this.features.addItem(d)):this.features.addItem(d)}}});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetCollection");
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetCollection",null,{id:null,displayName:null,featureSets:null,sourceName:null,tag:null,extendedProperties:null,constructor:function(){this.id="FSC-{0}".format(geocortex.framework.utils.alphaNumericToken());this.displayName=new Observable("");this.featureSets=new ObservableCollection;this.extendedProperties=new ObservableCollection;this.featureSets.useThrottling=false},getFeatureSetById:function(a){for(var b=0;b<this.featureSets.getLength();++b){var c=
this.featureSets.value[b];if(c.id==a)return c}return null},firstFeature:function(){for(var a=0;a<this.featureSets.value.length;a++){var b=this.featureSets.value[a];if(b.features.value.length>0)return b.features.value[0]}return null},clear:function(){for(var a=0;a<this.featureSets.getLength();a++)this.featureSets.getAt(a).features.clear();this.featureSets.clear()}});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetManager");
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetManager",null,{app:null,featureSetCollections:null,_featureSetCollectionsMap:null,_collectionChangedEventMap:null,_collectionOpenCount:null,constructor:function(a){this.app=a;this.featureSetCollections=new ObservableCollection;this._featureSetCollectionsMap={};this._collectionChangedEventMap={};this._collectionOpenCount={};this._registerCommands()},_registerCommands:function(){this.app.commandRegistry.command("OpenFeatureSetCollection").register(this,
this.openCollection);this.app.commandRegistry.command("CloseFeatureSetCollection").register(this,this.closeCollection);this.app.commandRegistry.command("RemoveCollection").register(this,this.removeCollection);this.app.commandRegistry.command("RemoveCollectionById").register(this,this.removeCollectionById)},openCollection:function(a){if(!this._featureSetCollectionsMap.hasOwnProperty(a))return this.app.trace.warning("Cannot open feature set collection '{0}': No feature set collection with matching ID found.".format(a)),
null;this._collectionOpenCount.hasOwnProperty(a)||(this._collectionOpenCount[a]=0);++this._collectionOpenCount[a];if(this._collectionOpenCount[a]==1){var b=new geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetManagerEventArgs({sender:this,featureSetCollection:this._featureSetCollectionsMap[a],featureSetCollectionId:a});this.app.eventRegistry.event("FSMCollectionOpenedEvent").publish(b)}return this._featureSetCollectionsMap[a]},closeCollection:function(a){if(!this._featureSetCollectionsMap.hasOwnProperty(a))return this.app.trace.warning("Cannot close feature set collection '{0}': No feature set collection with matching ID found.".format(a)),
false;if(!this._collectionOpenCount.hasOwnProperty(a)||this._collectionOpenCount[a]==0)return this.app.trace.warning("Attempted to close an already-closed FeatureSetCollection."),false;--this._collectionOpenCount[a];this._collectionOpenCount[a]==0&&(a=new geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetManagerEventArgs({sender:this,featureSetCollection:this._featureSetCollectionsMap[a],featureSetCollectionId:a}),this.app.eventRegistry.event("FSMCollectionClosedEvent").publish(a));
return true},tryCloseCollection:function(a){return this.isCollectionOpen(a)?this.closeCollection(a):true},isCollectionOpen:function(a){return!this._featureSetCollectionsMap.hasOwnProperty(a)?(this.app.trace.warning("Cannot check open state of feature set collection '{0}': No feature set collection with matching ID found.".format(a)),false):this._collectionOpenCount.hasOwnProperty(a)&&this._collectionOpenCount[a]>0},addCollection:function(a){return this._addCollectionImpl(a,false)},_addCollectionImpl:function(a){if(this._featureSetCollectionsMap.hasOwnProperty(a.id))return this.app.trace.warning("Cannot add feature set collection '{0}': A feature set collection with that ID already exists.".format(a.id)),
false;this._featureSetCollectionsMap[a.id]=a;this.featureSetCollections.addItem(a);var b=a.featureSets.bind(this,this.handleCollectionChanged);this._collectionChangedEventMap[a]=b;a=new geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetManagerEventArgs({sender:this,featureSetCollection:this._featureSetCollectionsMap[a.id],featureSetCollectionId:a.id});this.app.eventRegistry.event("FSMCollectionAddedEvent").publish(a);return true},handleCollectionChanged:function(a){var b=null,b=a.isObservable?
a:a.sender;b!=null&&this.getCollectionById(b.id)&&(a=new geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetManagerEventArgs({sender:this,featureSetCollection:b,featureSetCollectionId:b.id,collectionChangedEventArgs:a}),this.app.eventRegistry.event("FSMCollectionChangedEvent").publish(a))},removeCollection:function(a){return this.canRemoveCollection(a)?(this.removeCollectionById(a.id),true):false},removeCollectionById:function(a){if(!this._featureSetCollectionsMap.hasOwnProperty(a))return this.app.trace.warning("Cannot remove feature set collection '{0}': Collection not found.".format(a)),
false;this.isCollectionOpen(a)&&this.closeCollection(a);var b=this._featureSetCollectionsMap[a];b.featureSets.unbind(this._collectionChangedEventMap[b]);this.featureSetCollections.removeItem(this._featureSetCollectionsMap[a]);Array.removeItem(this._collectionOpenCount,this._collectionOpenCount[a]);b=new geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetManagerEventArgs({sender:this,featureSetCollection:this._featureSetCollectionsMap[a],featureSetCollectionId:a});this.app.eventRegistry.event("FSMCollectionRemovedEvent").publish(b);
Array.removeItem(this._featureSetCollectionsMap,this._featureSetCollectionsMap[a]);return true},canRemoveCollection:function(a){return a!=null&&this.getCollectionById(a.id)!=null},getCollectionById:function(a){return this._featureSetCollectionsMap[a]}});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetManagerEventArgs");
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetManagerEventArgs",null,{sender:null,featureSetCollection:null,featureSetCollectionId:null,constructor:function(a){dojo.safeMixin(this,a)}});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.GeometryUtils");dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.GeometryUtils",null,{});
dojo.mixin(geocortex.essentialsHtmlViewer.mapping.infrastructure.GeometryUtils,{getMiddle:function(a){if(!a||!a.type)return null;if(a.type=="point")return a;else if(a.type=="multipoint"){var b=Math.floor(a.points.length/2),b=a.points[b];return new esri.geometry.Point(b[0],b[1],a.spatialReference)}else if(a.type=="polyline")return b=Math.floor(a.paths[0].length/2),b=a.paths[0][b],new esri.geometry.Point(b[0],b[1],a.spatialReference);else if(a.type=="polygon")return a.getExtent().getCenter();else if(a.type==
"extent")return a.getCenter();return null},_getGeometryService:function(a){var b=null;if(this._geometryService)return this._geometryService;else if(a&&a.configuration&&a.configuration.geometryServiceUrl)b=this._geometryService=new esri.tasks.GeometryService(a.configuration.geometryServiceUrl);return b},project:function(a,b,c,d){if(!a||!a.isInstanceOf(esri.tasks.ProjectParameters))c&&dojo.isFunction(c)&&c(Error("projectParameters required."));else if(!b||!dojo.isFunction(b))c&&dojo.isFunction(c)&&
c(Error("projectParameters required."));else if(a.outSR){var e=a.geometries,f=false;e&&e.length>0&&(geocortex.essentials.GeometryUtilities.spatialRefsAreEqual(e[0].spatialReference,a.outSR,false)||(f=true));f?(d=this._getGeometryService(d))?d.project(a,b,c):c&&dojo.isFunction(c)&&c(Error("Unable to get the geometry service. Make sure a geometry service url is configured in the application.")):b(e)}else c&&dojo.isFunction(c)&&c(Error("output spatial reference is required."))},createCircle:function(a,
b,c,d){for(var e=[],f=null,d=d||40,a=new esri.geometry.Polygon(a),f=360/d,g=1;g<=d;g++){var h=g*f*Math.PI/180;e.push([b.x+c*Math.cos(h),b.y+c*Math.sin(h)])}e.push(e[0]);a.addRing(e);return a}});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.GraphicUtils");dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.GraphicUtils",null,{});
dojo.mixin(geocortex.essentialsHtmlViewer.mapping.infrastructure.GraphicUtils,{_layerIDMap:{},sanitizeAttributeNames:function(a,b){var c;if(this._layerIDMap[b.id])c=this._layerIDMap[b.id];else{c={};for(var d=0;d<b.fields.length;d++){var e=b.fields[d];c[e.alias]=e.name}this._layerIDMap[b.id]=c}var d=[],f;for(f in a.attributes)a.attributes[f]==="Null"&&(a.attributes[f]=null),e={alias:f,name:c[f],value:a.attributes[f]},e.alias!=e.name&&d.push(e);for(c=0;c<d.length;c++)f=d[c],Array.removeItem(a.attributes,
a.attributes[f.alias]),a.attributes[f.name]=f.value}});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.MapUtils");dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.MapUtils",null,{});
dojo.mixin(geocortex.essentialsHtmlViewer.mapping.infrastructure.MapUtils,{stepZoom:function(a,b,c){if(c==null)c=a.extent;b=geocortex.essentials.GeometryUtilities.scaleEnvelopeWithoutTranslation(c,1/b);a.setExtent(b);return b},getExtent:function(a){return a?a.type=="point"?new esri.geometry.Extent(a.x,a.y,a.x,a.y,a.spatialReference):a.getExtent():null}});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.ShowMapElementArgs");
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.ShowMapElementArgs",null,{elementID:null,mapPoint:null,content:null,title:null,delay:0,constructor:function(a,b,c,d){this.elementID=a;this.mapPoint=b;this.content=c;this.title=d},getNode:function(){if(this.content){if(this.contentIsView())return this.content.root;if(this.content.nodeName)return this.content;if(typeof this.content==="string"){var a=dojo.create("div");$(a).html(this.content);return a}}return null},contentIsView:function(){return this.content&&
typeof this.content.isInstanceOf=="function"&&this.content.isInstanceOf(geocortex.framework.ui.ViewBase)}});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.commandArgs.AddStatusArgs");
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.commandArgs.AddStatusArgs",null,{text:null,imageUri:null,userClosedCallback:null,imageClass:null,id:null,timeoutMS:null,showBusyIcon:null,constructor:function(a,b,c,d,e,f,g){this.text=a;this.imageUri=b;this.userClosedCallback=c;this.imageClass=d;this.id=e;this.timeoutMS=f?f:3E4;this.showBusyIcon=g}});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.commandArgs.ProjectArgs");
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.commandArgs.ProjectArgs",null,{constructor:function(a,b,c,d,e){this.geometries=a;this.outputSpatialReference=d;this.callback=b;this.errback=c;this.transformation=e},outputSpatialReference:null,geometries:null,transformation:null,callback:null,errback:null});dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.eventArgs.GeolocationEventArgs",null,{mapPoint:null,constructor:function(){}});
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.eventArgs.MapExtentEventArgs",null,{centerLatLon:null,currentScale:null,currentResolution:null,constructor:function(){}});
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.menus.BatchItemBase",null,{constructor:function(a,b){this.app=a;b&&b.command?(this.command=new Observable(b.command),this.commandParameter=b.commandParameter?new Observable(b.commandParameter):new Observable):(this.command=new Observable,this.commandParameter=new Observable)},app:null,commandParameter:null,command:null});
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.menus.MenuBase",null,{constructor:function(a,b){if(b)this.app=a,this.id=new Observable(b.id),this.moduleId=new Observable(b.moduleId),this.description=new Observable(b.description),this.items=this.getMenuItems(b.items),this.defaultIconUri=new Observable(b.defaultIconUri);else throw Error("Menu item properties cannot be null");},getMenuItems:function(a){var b=this,c=new ObservableCollection;dojo.forEach(a,function(a){if((a=new geocortex.essentialsHtmlViewer.mapping.infrastructure.menus.MenuItemBase(b.app,
a))&&a.text)c.addItem(a);else throw Error("Failed to create menu items");});return c},app:null,id:null,items:null,moduleId:null,description:null,defaultIconUri:null,setId:function(a){this.id.set(a)},setModuleId:function(a){this.moduleId.set(a)},setMenuItems:function(a){this.items=new ObservableCollection;this.items.clear();this.items.addItems(a)}});
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.menus.MenuItemBase",null,{constructor:function(a,b){if(b){this.app=a;this.text=new Observable(b.text);this.description=new Observable(b.description);this.hideOnDisable=new Observable(b.hideOnDisable);this.iconUri=new Observable(b.iconUri);this.batchItems=new ObservableCollection;if(b.command)this.command=new Observable(b.command),this.commandParameter=b.commandParameter?new Observable(b.commandParameter):new Observable;b.batch&&this._setBatchItems(b.batch)}else throw Error("Menu cannot be null");
},app:null,text:null,description:null,batchItems:null,hideOnDisable:null,iconUri:null,command:null,commandParameter:null,_setBatchItems:function(a){var b=this;dojo.forEach(a,function(a){var d=dojo.getObject("geocortex.essentialsHtmlViewer.mapping.infrastructure.menus.BatchItemBase");if(d)if(a=new d(b.app,a))b.batchItems.addItems(a);else throw Error("Failed to create batch items");})},execute:function(a){var b=this;if(b.command){var c=b.commandParameter.get();c==null&&(c=a);b.app.commandRegistry.command(b.command.get()).execute(c)}b.batchItems.isEmpty()||
dojo.forEach(b.batchItems.get(),function(c){var e=c.commandParameter.get();e==null&&(e=a);b.app.commandRegistry.command(c.command.get()).execute(e)})}});
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.menus.MenuRegistry",null,{constructor:function(a){this._app=a;this.menusList=new ObservableCollection;this._menuConfig=[]},_app:null,menusList:null,_menuConfig:null,getMenu:function(a){this._loadMenuFromConfig(a);for(var b=[],c=0;c<this.menusList.getLength();c++)this.menusList.getAt(c).id.get()==a&&(b=b.concat(this.menusList.getAt(c).items.get()));return b},getDefaultIconUri:function(a){for(var b=0;b<this.menusList.getLength();b++)if(this.menusList.getAt(b).id.get()==
a)return a=this.menusList.getAt(b).defaultIconUri.get();return null},getMenuByModuleId:function(a){for(var b=[],c=0;c<this.menusList.getLength();c++)this.menusList.getAt(c).moduleId.get()==a&&(b=b.concat(this.menusList.getAt(c).items.get()));return b},getMenuIndex:function(a,b){if(!this.menusList.isEmpty())for(var c=0;c<this.menusList.getLength();c++)if(this.menusList.getAt(c).id.get()==a&&this.menusList.getAt(c).moduleId.get()==b)return c;return null},getMenuConfigIndices:function(a){for(var b=[],
c=0;c<this._menuConfig.length;c++)this._menuConfig[c].id==a&&b.push(c);return b},loadMenus:function(a){var b=this;a.menus&&dojo.forEach(a.menus,function(a){b._menuConfig.push(a);b._loadMenuFromConfig(a.id)})},_loadMenuFromConfig:function(a){a=this.getMenuConfigIndices(a);if(a.length>0)for(var b=0;b<a.length;b++){var c=new geocortex.essentialsHtmlViewer.mapping.infrastructure.menus.MenuBase(this._app,this._menuConfig[a[b]]);if(c)this.register(c);else throw Error("Failed to create the menu: ");}},register:function(a){var b=
a.id;a&&b&&(this.unregister(a.id.get(),a.moduleId.get()),this.menusList.addItems(a))},unregister:function(a,b){var c=this.getMenuIndex(a,b);c!=null&&this.menusList.get().splice(c,1)},enumMenus:function(){return this.menusList.get()}});
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.search.SearchManager",null,{constructor:function(a){this.app=a;this._searchProviders=[];this._registerCommands();this.app.eventRegistry.event("SearchInProgressEvent").subscribe(this,this._searchProgress)},app:null,_searchProviders:null,_fscRootID:"SearchResultsCollection",_fsc:null,_count:0,_fscSourceName:"Search",_resetFeatureSetCollection:function(){this._fsc?(this._fsc.clear(),this.app.featureSetManager.tryCloseCollection(this._fsc.id)):
(this._fsc=new FeatureSetCollection,this._fsc.id=this._fscRootID,this._fsc.sourceName=this._fscSourceName,this.app.featureSetManager.addCollection(this._fsc))},_registerCommands:function(){this.app.commandRegistry.command("RegisterSearchProvider").register(this,this._registerProvider);this.app.commandRegistry.command("Search").register(this,this._search);this.app.commandRegistry.command("GlobalSearch").register(this,this._search);this.app.commandRegistry.command("CancelSearch").register(this,this._cancelSearch)},
_registerProvider:function(a){if(!a)throw Error("Search Provider cannot be null.");for(var b=0;b<this._searchProviders.length;b++)if(this._searchProviders[b].id==a.id)throw Error("Search Provider '{0}' already registered.".format(a.name));this._searchProviders.push(a)},_enabledProviders:function(){for(var a=[],b=0;b<this._searchProviders.length;b++){var c=this._searchProviders[b];c.isEnabled&&(this.app.isOffline.get()===true?c.supportsOffline&&a.push(c):a.push(c))}return a},_isSearching:function(){for(var a=
0;a<this._searchProviders.length;a++)if(this._searchProviders[a].status==geocortex.essentialsHtmlViewer.mapping.infrastructure.search.Status.SEARCHING)return true;return false},_cancelSearch:function(){if(this._isSearching())for(var a=0;a<this._searchProviders.length;a++){var b=this._searchProviders[a];b.status==geocortex.essentialsHtmlViewer.mapping.infrastructure.search.Status.SEARCHING&&b.cancelSearch()}},_search:function(a){this._isSearching()&&this._cancelSearch();this._resetFeatureSetCollection();
if(!a||a.replace(/ /g,"")=="")this.app.trace.warning("Cannot perform search without search text.");else{var b=this._enabledProviders();if(b.length==0)this.app.trace.warning("No search provider enabled.");else{this._fsc.displayName.set(this.app.getResource("Mapping","language-search-fsc-display-name").format(a));this.app.featureSetManager.isCollectionOpen(this._fsc.id)||this.app.featureSetManager.openCollection(this._fsc.id);for(var c=0;c<b.length;c++)b[c].search(this._fsc,a)}}},_searchProgress:function(a){var b=
true;if(a.status!=geocortex.essentialsHtmlViewer.mapping.infrastructure.search.Status.SEARCHING){for(var c=0;c<this._searchProviders.length;c++)this._searchProviders[c].status==geocortex.essentialsHtmlViewer.mapping.infrastructure.search.Status.SEARCHING&&(b=false);b&&this.app.featureSetManager.tryCloseCollection(a.results.id)}}});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.search.Status");
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.search.Status",null,{});dojo.mixin(geocortex.essentialsHtmlViewer.mapping.infrastructure.search.Status,{IDLE:"Idle",SEARCHING:"Searching",ERROR:"Error"});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.search.SearchProgressEventArgs");dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.search.SearchProgressEventArgs",null,{constructor:function(){},status:null,error:null,message:null,results:null});
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.tools.MapTool",geocortex.essentialsHtmlViewer.mapping.infrastructure.tools.ToolBase,{constructor:function(){},_draw:null,_drawIsActive:false,command:null,drawMode:null,isSticky:false,onActivated:function(){this.inherited(arguments);if(!this._draw)this._draw=new esri.toolbars.Draw(this.app.map),this._draw.markerSymbol=new esri.symbol.SimpleMarkerSymbol(esri.symbol.SimpleMarkerSymbol.STYLE_CIRCLE,10,new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID,
new dojo.Color([0,0,0,0.8]),2),new dojo.Color([0,0,0,0.8])),this._draw.fillSymbol=new esri.symbol.SimpleFillSymbol(esri.symbol.SimpleFillSymbol.STYLE_SOLID,new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID,new dojo.Color([0,0,0,0.8]),2),new dojo.Color([0,0,0,0.25])),this._draw.lineSymbol=new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID,new dojo.Color([0,0,0,0.8]),2),dojo.connect(this._draw,"onDrawEnd",this,this.onDrawEnd);if(this._drawIsActive)this._draw.deactivate(),
this._drawIsActive=false;if(this.drawMode=="CURRENT_EXTENT")this.onDrawEnd(this.app.map.extent);else this._draw.activate(esri.toolbars.Draw[this.drawMode]),this._drawIsActive=true;this.app.eventRegistry.event("MapMouseDownEvent").subscribe(this,function(a){if(a.which===3&&this._draw)this._deactivateToolbar(),this._draw=null,this.app.commandRegistry.command("RemoveStatus").execute()})},onDeactivated:function(){this.inherited(arguments);this._deactivateToolbar()},_deactivateToolbar:function(){if(this._draw&&
this._drawIsActive)this._draw.deactivate(),this._drawIsActive=false},onDrawEnd:function(a){if(this.command){var b=this.app.commandRegistry.command(this.command);b.canExecute(a)?b.execute(a):this.app.trace.warning("Could not invoke command '{0}' for tool '{1}'.".format(this.name,this.command))}this.isSticky||this.setActive(false)}});
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.tools.ToolRegistry",null,{constructor:function(a){this._app=a;this.tools={};this._subscriptions={};this._registerCommands()},_app:null,tools:null,_subscriptions:null,_registerCommands:function(){var a=this;this._app.commandRegistry.command("SetActiveTool").register(this,function(b){a.setActiveTool(b)},function(b){return a.tool(b)?true:false});this._app.commandRegistry.command("ClearActiveTool").register(this,function(){a.clearActiveTool()},
function(){return a.getActiveTool()?true:false})},clearActiveTool:function(){for(var a in this.tools){var b=this.tools[a];b&&b.isActive&&b.setActive(false)}},getActiveTool:function(){for(var a in this.tools){var b=this.tools[a];if(b&&b.isActive)return b}return null},setActiveTool:function(a){this.clearActiveTool();if(a){var b=this.tool(a);b?b.setActive(true):this._app.trace.warning("Could not activate tool '{0}'. The tool does not exist in the registry.".format(a))}},tool:function(a){return this.tools[a]},
register:function(a){this.unregister(a);if(a&&a.name){this.tools[a.name]=a;var b=this;this._subscriptions[a.name]=dojo.connect(a,"setActive",function(c){if(c===true){for(var d in b.tools)(c=b.tools[d])&&c!=a&&c.isActive&&c.setActive(false);b._app.eventRegistry.event("ActiveToolChanged").publish({tool:a,previousTool:null});b._app.eventRegistry.event("ActiveToolChangedEvent").publish({tool:a,previousTool:null})}else b.getActiveTool()||(b._app.eventRegistry.event("ActiveToolChanged").publish({tool:null,
previousTool:a}),b._app.eventRegistry.event("ActiveToolChangedEvent").publish({tool:null,previousTool:a}))})}},unregister:function(a){if(a&&a.name&&this.tools[a.name]==a){this.tools[a.name]=null;var b=this._subscriptions[a.name];b&&(dojo.disconnect(b),this._subscriptions[a.name]=null)}},clear:function(){for(var a in this.tools){var b=this.tools[a];b&&this.unregister(b)}},createTools:function(a,b){var c=[],d=this;a&&dojo.forEach(a,function(e){var f=dojo.getObject(a.typeName?a.typeName:"geocortex.essentialsHtmlViewer.mapping.infrastructure.tools.MapTool");
f?(e=new f(d._app,e),c.push(e),b&&d.register(e)):d.app.trace.warning("Could not create tool '{0}' from type name '{1}'.".format(a.name,a.typeName))});return c}});dojo.declare("geocortex.essentialsHtmlViewer.infrastructure.ui.ViewContainer.ButtonTabStripView",geocortex.framework.ui.ViewBase,{handleClickTab:function(a,b,c){(a=c.view)&&this.app.viewManager.activateView(a)}});
dojo.declare("geocortex.essentialsHtmlViewer.infrastructure.ui.ViewContainer.ViewContainerView",geocortex.framework.ui.ViewBase,{headerInsertDomElement:null,footerInsertDomElement:null,scrollContainerTop:null,scrollContainerBottom:null,_hasAttached:false,_active:false,constructor:function(){this.headerInsertDomElement=new Observable(null);this.footerInsertDomElement=new Observable(null);this.scrollContainerTop=new Observable(0);this.scrollContainerBottom=new Observable(0);this.app.eventRegistry.event("ViewActivatedInContainerEvent").subscribe(this,
function(a){this.resize();var b=null;if(this.viewModel&&(b=this.viewModel.getDescriptorForActiveView(a))){this.app.viewManager.activateView(this);var c=b.scrollTop===void 0?0:b.scrollTop;setTimeout(dojo.hitch(this,function(){dojo.setStyle(this.scrollRegionElement,"scrollTop",c);this.scrollRegionElement.scrollTop=c}),0)}});this.app.eventRegistry.event("RegionActivatedEvent").subscribe(this,this.handleRegionActivatedEvent);this.app.eventRegistry.event("RegionDeactivatedEvent").subscribe(this,this.handleRegionDeactivatedEvent);
this.app.eventRegistry.event("ViewDimensionsChangedEvent").subscribe(this,this.resize)},attach:function(){this.inherited(arguments);this.title.sync(this.viewModel.viewTitle);if(this.root&&!this._hasAttached)this._hasAttached=true,this.app.viewManager.discoverRegions(this.root,this);this.headerInsertDomElement.sync(this.viewModel.headerInsertDomElement);this.footerInsertDomElement.sync(this.viewModel.footerInsertDomElement);this.resize()},resize:function(){if(this.headerElement&&this.scrollRegionElement&&
this.containerElement){var a=this.footerElement,b=this.scrollRegionElement,c=dojo.position(this.headerElement),a=dojo.position(a),c=c?c.h:0,a=a?a.h:0;dojo.style(b,"position")!=="relative"&&dojo.style(b,"top",c+"px");dojo.style(b,"bottom",a+"px")}},activated:function(){this.inherited(arguments);if(!this._active&&this.viewModel){var a=this.viewModel.viewDescriptors.getAt(0);a&&this.app.viewManager.activateView(a.view)}this.viewModel&&this.viewModel.showOrHideCloseButtons()},activateContainer:function(){this._active=
true;this.app.viewManager.activateView(this)},deactivateContainer:function(){this._active=false;this.app.viewManager.deactivateView(this)},handleScrollChange:function(a,b,c){if(c)c.getDescriptorForActiveView(c.currentView).scrollTop=b.scrollTop},handleRegionActivatedEvent:function(a){this.viewModel&&a.name===this.viewModel.regionName.get()&&this.activateContainer()},handleRegionDeactivatedEvent:function(a){this.viewModel&&a.name===this.viewModel.regionName.get()&&this.deactivateContainer()},handleClickBack:function(a,
b,c){if(c)a=c.currentView,this._closeCurrentView(c),this._broadcastClosedEvent(a,false,true)},handleClickClose:function(a,b,c){if(c)a=c.currentView,this._closeCurrentView(c),this._broadcastClosedEvent(a,true,false)},handleClickTab:function(a,b,c){(a=c.view)&&this.app.commandRegistry.command("ActivateView").execute(a.id)},handleClickCloseTab:function(a,b,c){(a=c.view)&&this.app.viewManager.destroyView(a)},_closeCurrentView:function(a){a.closeCurrentView()},_broadcastClosedEvent:function(a,b,c){a=new geocortex.essentialsHtmlViewer.mapping.infrastructure.ViewContainer.ViewContainerViewClosedEventArgs(this.id,
a.id,b,c);this.app.eventRegistry.event("ViewContainerViewClosedEvent").publish(a)}});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.ViewContainer.ViewContainerViewClosedEventArgs");
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.ViewContainer.ViewContainerViewClosedEventArgs",null,{containerViewId:null,viewId:null,xButtonClicked:null,backButtonClicked:null,constructor:function(a,b,c,d){this.containerViewId=a;this.viewId=b;this.xButtonClicked=c;this.backButtonClicked=d}});
dojo.declare("geocortex.essentialsHtmlViewer.infrastructure.ui.ViewContainer.ViewContainerViewModel",geocortex.framework.ui.ViewModelBase,{regionName:null,headerIsVisible:null,hasCustomHeaderComponent:null,hasCustomFooterComponent:null,showingBackButton:null,showBusyIndicator:null,showingXButton:null,containerTitle:null,viewTitle:null,fullTitle:null,viewDescriptors:null,activeViewDescriptors:null,currentView:null,headerInsertDomElement:null,footerInsertDomElement:null,_activeViews:null,_ordering:{},
_backButtonOnRootView:true,_showBackButton:true,_showBackButtonAsX:true,_fullTitleFormatString:"{0} - {1}",_defaultViewIconUri:null,constructor:function(){this.regionName=new Observable("");this.containerTitle=new Observable("");this.viewTitle=new Observable("");this.fullTitle=new Observable("");this.headerIsVisible=new Observable(true);this.hasCustomHeaderComponent=new Observable(false);this.hasCustomFooterComponent=new Observable(false);this.showingBackButton=new Observable(true);this.showBusyIndicator=
new Observable(false);this.showingXButton=new Observable(true);this.headerInsertDomElement=new Observable(null);this.footerInsertDomElement=new Observable(null);this.viewDescriptors=new ObservableCollection([]);this.activeViewDescriptors=new ObservableCollection([]);this._activeViews={};var a=this.app.viewManager.getExistingRegionByName(this.regionName.get());if(a)for(var b=0;b<a.views.length;++b){var c=a.views[b];this._addOrderedView({view:c,iconUri:c.iconUri.get()?c.iconUri:new Observable(this._defaultViewIconUri),
title:c.title,isBusy:c.isBusy,isActive:new Observable(false),cssClass:new Observable("tab-inactive")})}this.app.eventRegistry.event("ViewHostedEvent").subscribe(this,this.handleViewHosted);this.app.eventRegistry.event("ViewUnhostedEvent").subscribe(this,this.handleViewUnhosted);this.app.eventRegistry.event("ViewActivatedEvent").subscribe(this,this.handleViewActivatedEvent);this.app.eventRegistry.event("ViewDeactivatedEvent").subscribe(this,this.handleViewDeactivatedEvent)},initialize:function(a){this.regionName.set(a.containerRegionName);
this.containerTitle.set(a.containerTitle||null);this._defaultViewIconUri=a.defaultViewIcon||null;this._ordering=a.ordering||{};this._backButtonOnRootView=a.backButtonOnRootView;this._showBackButtonAsX=a.showBackButtonAsX;var b=function(b,d){if(a["{0}InsertMarkup".format(b)])try{var e=this.app.viewManager.createView({markup:a["{0}InsertMarkup".format(b)],type:a["{0}InsertType".format(b)]});e.attach(this);d.set(e.root)}catch(f){this.app.trace.error("Could not create view {0} container insert: {1}".format(b,
f.toString()))}};b.apply(this,["header",this.headerInsertDomElement]);b.apply(this,["footer",this.footerInsertDomElement])},getDescriptorForView:function(a){for(var b=0;b<this.viewDescriptors.getLength();++b){var c=this.viewDescriptors.getAt(b);if(c.view===a)return c}return null},getDescriptorForActiveView:function(a){for(var b=0;b<this.activeViewDescriptors.getLength();++b){var c=this.activeViewDescriptors.getAt(b);if(c.view===a)return c}return null},handleViewHosted:function(a){var b=a.region,a=
a.view;b&&b.name===this.regionName.get()&&(this.getDescriptorForView(a)||this._addOrderedView({view:a,iconUri:a.iconUri.get()?a.iconUri:new Observable(this._defaultViewIconUri),title:a.title,isBusy:a.isBusy,isActive:new Observable(false),cssClass:new Observable("tab-inactive")}))},handleViewUnhosted:function(a){var b=a.region,a=a.view;if(b&&b.name===this.regionName.get()&&(b=this.getDescriptorForView(a)))this.viewDescriptors.removeItem(b),this.activeViewDescriptors.removeItem(b)},handleViewActivatedEvent:function(a){var b=
this.app.viewManager.getRegionForViewId(a.id);b&&b.name===this.regionName.get()&&(b=this.getDescriptorForView(a),b||(b={view:a,iconUri:a.iconUri.get()?a.iconUri:new Observable(this._defaultViewIconUri),title:a.title,isBusy:a.isBusy,isActive:new Observable(false),cssClass:new Observable("tab-inactive")},this._addOrderedView(b)),this._activeViews[a.id]=true,this.app.trace.debug("--- Activated view {0}".format(a.id)),this.activateViewInContainer(a))},handleViewDeactivatedEvent:function(a){var b=this.app.viewManager.getRegionForViewId(a.id);
if(b&&b.name===this.regionName.get()){this._activeViews[a.id]=false;if(b=this.getDescriptorForView(a))this.viewDescriptors.removeItem(b),this.activeViewDescriptors.removeItem(b);this.app.trace.debug("--- Deactivated view {0}".format(a.id));this.deactivateViewInContainer(a)}},activateViewInContainer:function(a){this.deactivateViews();this.currentView=a;var b=this.getDescriptorForView(a);b?(b.isActive.set(true),b.cssClass.set("tab-active")):a.isManaged&&(b={view:a,iconUri:a.iconUri.get()?a.iconUri:
new Observable(this._defaultViewIconUri),title:a.title,isBusy:a.isBusy,isActive:new Observable(true),cssClass:new Observable("tab-active")},this._addOrderedView(b));this.getDescriptorForActiveView(a)||this.activeViewDescriptors.addItem(b);this.app.eventRegistry.event("ViewActivatedInContainerEvent").publish(a);this.showOrHideCloseButtons();this.viewTitle.sync(a.title);this.showBusyIndicator.sync(a.isBusy)},showOrHideCloseButtons:function(){var a=this.viewDescriptors.getAt(0);a&&(this.currentView===
a.view?this._backButtonOnRootView?(this.showingXButton.set(this._showBackButtonAsX),this.showingBackButton.set(!this._showBackButtonAsX)):(this.showingBackButton.set(false),this.showingXButton.set(false)):(this.showingXButton.set(this._showBackButtonAsX),this.showingBackButton.set(!this._showBackButtonAsX)))},deactivateViewInContainer:function(a){if(a=this.getDescriptorForView(a))a.isActive.set(false),a.cssClass.set("tab-inactive"),this.activeViewDescriptors.removeItem(a);this.showOrHideCloseButtons()},
closeCurrentView:function(){var a=this.getDescriptorForView(this.currentView);a&&(this.viewDescriptors.removeItem(a),this.activeViewDescriptors.removeItem(a));this.deactivateCurrentView(this.currentView)},deactivateCurrentView:function(){this.currentView&&this.app.viewManager.deactivateView(this.currentView)},deactivateViews:function(){for(var a=0;a<this.viewDescriptors.getLength();++a){var b=this.viewDescriptors.getAt(a);b.isActive.set(false);b.cssClass.set("tab-inactive")}},_addOrderedView:function(a){var b=
a.view,c=this.getDescriptorForActiveView(b);if(this._ordering){var d=b.id;if(d)if(d=this._ordering.hasOwnProperty(d)?parseInt(this._ordering[d]):null,d===null||d===void 0)this.viewDescriptors.addItem(a),b.isActive&&!c&&this.activeViewDescriptors.addItem(a);else{for(var e=false,f=0;f<this.viewDescriptors.getLength();++f){var g=this.viewDescriptors.getAt(f).view,g=this._ordering.hasOwnProperty(g.id)?parseInt(this._ordering[g.id]):null;if(g===null||d<=g){e=true;this.viewDescriptors.insertItem(f,a);b.isActive&&
this.activeViewDescriptors.insertItem(f,a);break}}e||(this.viewDescriptors.addItem(a),b.isActive&&!c&&this.activeViewDescriptors.addItem(a))}else this.viewDescriptors.addItem(a),b.isActive&&!c&&this.activeViewDescriptors.addItem(a)}else this.viewDescriptors.addItem(a),b.isActive&&!c&&this.activeViewDescriptors.addItem(a)}});var Feature=null,FeatureSet=null,FeatureSetCollection=null;
dojo.ready(function(){FeatureAttribute=dojo.getObject("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureAttribute");Feature=dojo.getObject("geocortex.essentialsHtmlViewer.mapping.infrastructure.Feature");FeatureSet=dojo.getObject("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSet");FeatureSetCollection=dojo.getObject("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetCollection")});dojo.provide("geocortex.essentialsHtmlViewer.ViewerApplication");
dojo.declare("geocortex.essentialsHtmlViewer.ViewerApplication",geocortex.framework.application.Application,{version:geocortex.essentialsHtmlViewer.version,map:null,site:null,featureSetManager:null,menuRegistry:null,modalRegionSingleton:null,searchManager:null,toolRegistry:null,_workflowActivityDispatcher:null,_activityTypeHandlerQueue:null,_activityIdHandlerQueue:null,constructor:function(){this.___uaIsiPad=!!navigator.userAgent.match(/iPad/i);this._activityTypeHandlerQueue=[];this._activityIdHandlerQueue=
[];this.featureSetManager=new geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetManager(this);this.toolRegistry=new geocortex.essentialsHtmlViewer.mapping.infrastructure.tools.ToolRegistry(this);this.menuRegistry=new geocortex.essentialsHtmlViewer.mapping.infrastructure.menus.MenuRegistry(this);this.searchManager=new geocortex.essentialsHtmlViewer.mapping.infrastructure.search.SearchManager(this)},initialize:function(){if(document.all&&!document.querySelector)this.debugMode=true;this.inherited(arguments)},
registerActivityTypeHandler:function(a,b){this._workflowActivityDispatcher?this._activityTypeHandlerQueue.push({typeName:a,handler:b}):this._workflowActivityDispatcher.registerActivityHandler(a,b)},registerActivityIdHandler:function(a,b){this._workflowActivityDispatcher?this._activityIdHandlerQueue.push({id:a,handler:b}):this._workflowActivityDispatcher.registerExternalIdHandler(a,b)},getWorkflowActivityDispatcher:function(){return this._workflowActivityDispatcher},setWorkflowActivityDispatcher:function(a){this._workflowActivityDispatcher=
a;for(a=0;a<this._activityTypeHandlerQueue.length;++a){var b=this._activityTypeHandlerQueue[a];this._workflowActivityDispatcher.registerActivityHandler(b.typeName,b.handler)}this._activityTypeHandlerQueue=[];for(a=0;a<this._activityIdHandlerQueue.length;++a)b=this._activityIdHandlerQueue[a],this._workflowActivityDispatcher.registerExternalIdHandler(b.id,b.handler);this._activityIdHandlerQueue=[]},shutdown:function(a){this.toolRegistry.clear();this.inherited(arguments)}});
