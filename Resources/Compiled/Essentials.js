/*
	
	Copyright (c) 2012, Latitude Geographics Ltd.
	All rights reserved.
	       
	Redistribution is not permitted. 
	
	Use in binary form, without modification, is permitted provided that neither 
	the name of the organization nor the names of its contributors may be used 
	to endorse or promote products derived from this software without specific 
	prior written permission.
	       
	THIS SOFTWARE IS PROVIDED BY COPYRIGHT HOLDER ''AS IS'' AND ANY
	EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
	WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
	DISCLAIMED. IN NO EVENT SHALL  BE LIABLE FOR ANY
	DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
	(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
	LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
	ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
	(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
	SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

dojo.provide("geocortex.essentials.AsyncInitializable");
dojo.declare("geocortex.essentials.AsyncInitializable",null,{constructor:function(a){if(!dojo.isString(a)||a.length===0)throw Error("Invalid url supplied to AsyncInitializable: "+a);this.url=a;this._initializedHandler=dojo.hitch(this,this._initializedHandler);this._initializationFailedHandler=dojo.hitch(this,this._initializationFailedHandler);this._restLoadHandler=dojo.hitch(this,this._restLoadHandler);this._restErrorHandler=dojo.hitch(this,this._restErrorHandler);this.onInitialized=function(){};
this.onInitializationFailed=function(){}},initializationFailure:null,isInitialized:false,url:null,_initializing:false,initialize:function(a){if(!this.isInitialized&&!this._initializing){var b=!(geocortex.isUndefined(a)||a===null);b?this._restLoadHandler(true,a):(this._initializing=true,geocortex.request({url:this.url,content:{f:"json"},load:dojo.hitch(this,this._restLoadHandler,b),error:this._restErrorHandler,callbackParamName:"CallBack"}))}},onInitializationFailed:null,onInitialized:null,_configureObject:function(){},
_initializationFailedHandler:function(a){this.initializationFailure=a;if(this.onInitializationFailed)this.onInitializationFailed(a)},_initializedHandler:function(a){this.isInitialized=true;if(this.onInitialized)this.onInitialized(a);this._initializing=false},_restErrorHandler:function(a){this._initializationFailedHandler(a);this._initializedHandler(this)},_restLoadHandler:function(a,b){this._configureObject(b,a);this._initializedHandler(this)}});dojo.provide("geocortex.essentials.LayerType");
dojo.declare("geocortex.essentials.LayerType",null,{});dojo.mixin(geocortex.essentials.LayerType,{UNKNOWN:0,FEATURE_LAYER:1,RASTER_LAYER:2,GROUP_LAYER:3,GEO_RSS_LAYER:4});dojo.provide("geocortex.essentials.MapService");
dojo.declare("geocortex.essentials.MapService",geocortex.essentials.AsyncInitializable,{constructor:function(){this.layers=[];this.properties=[];this.extensions=[];this._layerKeys={}},bingProperties:null,configuredOpacity:1,configuredVisible:false,description:null,displayName:null,essentialsMap:null,extensions:null,iconUri:null,id:null,imageFormat:null,includeInLayerList:true,isExpanded:true,serverVersion:null,operationalSpatialReference:null,layers:null,mapServiceFunction:null,mapServiceType:null,
tileMatrixSet:null,tileInfo:null,requestEncoding:null,properties:null,serviceLayer:null,serviceToken:null,serviceUrl:null,proxyUrl:null,mapUrl:null,geometryServiceUrl:null,isServiceLayerLoaded:false,_drawingBehavior:null,_layerKeys:null,getConfiguredVisibleLayers:function(){var a=[],b=0,c;for(c in this.layers){var d=this.layers[c];if(d.configuredVisible&&(d.subLayerIds===null||d.subLayerIds.length===0))if(d.parentLayerId!==null){if(this._layerKeys[d.parentLayerId].configuredVisible)a[b]=d.id,b++}else a[b]=
d.id,b++}return a},isVisible:function(){var a=false;if(this.serviceLayer&&typeof this.serviceLayer.visible==="boolean")a=this.serviceLayer.visible;return a},isTiled:function(){var a=false;this.serviceLayer&&(a=this.serviceLayer.isInstanceOf(esri.layers.TiledMapServiceLayer));return a},setVisibility:function(a){this.serviceLayer!==null&&(a?this.serviceLayer.show():this.serviceLayer.hide())},findLayerByName:function(a){for(var b=0;b<this.layers.length;b++){var c=this.layers[b];if(c.name==a||c.displayName==
a)return c}return null},findLayerById:function(a){for(var b=0;b<this.layers.length;b++){var c=this.layers[b];if(c.id==a)return c}return null},_configureLayers:function(a,b){for(var c in a)this.layers[c]=new geocortex.essentials.Layer(this.url+"/layers/"+a[c].id),this.layers[c].mapService=this,this.layers[c]._configureObject(a[c],b),this._layerKeys[a[c].id]=this.layers[c];this._createServiceLayer()},_configureObject:function(a,b){if(geocortex.isAnyUndefined([a,a.id,a.displayName,a.serviceType,a.connectionString]))throw Error("Incorrect map service object returned from initialization");
var c=geocortex.isUndefined;this.id=a.id;this.mapServiceType=a.serviceType;this.mapServiceFunction=c(a.serviceFunction)?this.mapServiceFunction:a.serviceFunction;this.displayName=a.displayName;this.description=c(a.description)?this.description:a.description;this.configuredVisible=!!a.visible;this.configuredOpacity=c(a.opacity)||a.opacity===null?this.configuredOpacity:a.opacity;this.imageFormat=c(a.format)?this.imageFormat:a.format;this.isExpanded=c(a.isExpanded)?this.isExpanded:a.isExpanded;this.serverVersion=
a.serverVersion;this.tileMatrixSet=a.tileMatrixSet;this.requestEncoding=a.requestEncoding;this.operationalSpatialReference=a.operationalSpatialReference;if(a.tileInfo&&(this.tileInfo=dojo.clone(a.tileInfo),this.tileInfo.spatialReference))this.tileInfo.spatialReference=new esri.SpatialReference(this.tileInfo.spatialReference.wkid?this.tileInfo.spatialReference.wkid:this.tileInfo.spatialReference.wkt);if(a.iconUri){var d=null;if(this.essentialsMap)d=this.essentialsMap.site;this.iconUri=geocortex.essentials.RestHelper.processClientSideTokens(d,
a.iconUri)}if(typeof a.includeInLayerList==="boolean")this.includeInLayerList=a.includeInLayerList;this._drawingBehavior=c(a.drawingBehavior)?this._drawingBehavior:a.drawingBehavior;this._processConnectionString(a.connectionString);this._configureLayers(a.layers,b);if(b)this.isInitialized=true;this.properties=geocortex._getProperties(a.properties);this.extensions=geocortex._getExtensions(a.extensions)},_updateServiceToken:function(a){this.serviceToken=a;if(this.serviceLayer&&this.serviceLayer._url&&
this.serviceLayer._url.query)this.serviceLayer._url.query.token=a,a=dojo.objectToQuery(this.serviceLayer._url.query),this.serviceLayer.url=this.serviceLayer._url.path+(a?"?"+a:"")},_createServiceLayer:function(){if(this.serviceLayer==null){var a=this.serviceUrl;this.serviceToken!==null&&(a=a+(a.indexOf("?")>-1?"&token=":"?token=")+this.serviceToken);if(this._drawingBehavior==="MapService"){var b=this.configuredVisible,c=function(){};if(this.essentialsMap!==null&&this.essentialsMap.site!==null&&dojo.isFunction(this.essentialsMap.site.onLayerLoadError))c=
this.essentialsMap.site.onLayerLoadError;switch(this.mapServiceType){case geocortex.essentials.MapServiceType.DYNAMIC:a=new esri.layers.ArcGISDynamicMapServiceLayer(a,{id:this.id});a.setVisibleLayers(this.getConfiguredVisibleLayers());a.setOpacity(this.configuredOpacity);a.setImageFormat(this._getAgsDynamicImageFormat(this.imageFormat));dojo.connect(a,"onError",c);dojo.connect(a,"onLoad",dojo.hitch(this,this._handleServiceLayerLoaded));b&&a.visibleLayers.length>0?a.show():a.hide();this.serviceLayer=
a;break;case geocortex.essentials.MapServiceType.TILED:a=new esri.layers.ArcGISTiledMapServiceLayer(a,{id:this.id});a.setOpacity(this.configuredOpacity);dojo.connect(a,"onError",c);dojo.connect(a,"onLoad",dojo.hitch(this,this._handleServiceLayerLoaded));b?a.show():a.hide();this.serviceLayer=a;break;case geocortex.essentials.MapServiceType.IMAGE:a=new esri.layers.ArcGISImageServiceLayer(a,{id:this.id});a.setOpacity(this.configuredOpacity);a.setImageFormat(this._getAgsImageServiceImageFormat(this.imageFormat));
dojo.connect(a,"onError",c);dojo.connect(a,"onLoad",dojo.hitch(this,this._handleServiceLayerLoaded));b?a.show():a.hide();this.serviceLayer=a;break;case geocortex.essentials.MapServiceType.BING:a=new esri.virtualearth.VETiledLayer(this.bingProperties);a.setOpacity(this.configuredOpacity);dojo.connect(a,"onError",c);dojo.connect(a,"onLoad",dojo.hitch(this,this._handleServiceLayerLoaded));b?a.show():a.hide();this.serviceLayer=a;break;case geocortex.essentials.MapServiceType.WMS:if(!dojo.isObject(esri.layers.WMSLayer))throw Error("This Javascript application must // dojo.require the esri.layers.wms package in order to use a site with a WMS service.");
for(var d=false,e=0;e<this.layers.length;e++)if(this.layers[e].wmsLayerName){d=true;break}d?(d={extent:this.essentialsMap.initialExtent,layerInfos:this._constructWmsLayerInfos(),version:this.serverVersion},d=new esri.layers.WMSLayer(a,{resourceInfo:d,visibleLayers:this._getWmsVisibleLayers()}),this.operationalSpatialReference!=null&&(e=parseInt(this.operationalSpatialReference.replace(/^.*:/,"")),d.spatialReferences.push(e)),dojo.connect(d,"onLoad",dojo.hitch(this,this._handleServiceLayerLoaded))):
(d=new esri.layers.WMSLayer(a),dojo.connect(d,"onLoad",dojo.hitch(this,this._finishWmsLayerConfiguration)));d.getMapURL=this.mapUrl?this._prefixProxy(this.mapUrl):this._prefixProxy(a);d.setImageFormat(this._getEsriWmsImageFormat());d.setOpacity(this.configuredOpacity);dojo.connect(d,"onError",c);b?d.show():d.hide();this.serviceLayer=d;break;case geocortex.essentials.MapServiceType.WMTS:if(!dojo.isObject(esri.layers.WMTSLayer))throw Error("This JavaScript application must // dojo.require the esri.layers.wmts package in order to use a site with WMTS service.");
if(this.layers.length==0)throw Error("You must include at least one layer in your WMTS. Service "+this.displayName+" has 0 layers.");d=geocortex.essentials.GeometryUtilities.scaleEnvelopeWithoutTranslation(this.layers[0].fullExtent,1.1);d==null&&(d=geocortex.essentials.GeometryUtilities.scaleEnvelopeWithoutTranslation(this.essentialsMap.fullExtent,1.1));e=new esri.layers.WMTSLayerInfo({tileInfo:this.tileInfo,fullExtent:d,initialExtent:d,identifier:this.layers.length>0?this.layers[0].name:null,tileMatrixSet:this.tileMatrixSet,
format:this._getEsriOgcImageFormat(),style:this.layers[0].styleName});d={version:this.serverVersion,layerInfos:[e],getTileUrl:this._prefixProxy(this.mapUrl)};a=new esri.layers.WMTSLayer(a,{serviceMode:"KVP",resourceInfo:d,layerInfo:e});if(a._url){var f=0;a._url=a._url.replace(/\?/g,function(){f++;return f==1?"?":""})}a.setOpacity(this.configuredOpacity);dojo.connect(a,"onError",c);dojo.connect(a,"onLoad",dojo.hitch(this,this._handleServiceLayerLoaded));b?a.show():a.hide();this.serviceLayer=a}}}},
_prefixProxy:function(a){return this.proxyUrl?this.proxyUrl+"?"+a:a},_constructWmsLayerInfos:function(){for(var a=[],b=0;b<this.layers.length;b++){var c=this.layers[b];c.wmsLayerName!=null&&(c=new esri.layers.WMSLayerInfo({name:c.wmsLayerName,title:c.name}),a.push(c))}return a},_getWmsVisibleLayers:function(){for(var a=[],b=0;b<this.layers.length;b++){var c=this.layers[b];c.isVisible()&&c.areAllAncestorsVisible()&&c.wmsLayerName!=null&&c.subLayerIds.length==0&&a.push(c.wmsLayerName)}return a},_applyWmsLayerVisibility:function(){this.serviceLayer.setVisibleLayers(this._getVisibleLayers())},
_getEsriWmsImageFormat:function(){var a=this._getEsriOgcImageFormat();a=="jpeg"&&(a="jpg");return a},_getEsriOgcImageFormat:function(){return this.imageFormat!=null?this.imageFormat.replace(/^image\//,""):null},_findWMSLayerName:function(a,b){for(var c in a){var d=a[c];if(d.title===b)return d.name;if(d.subLayers!==null&&d.subLayers.length>0&&(d=this._findWMSLayerName(d.subLayers,b),d!==null))return d}return null},_finishWmsLayerConfiguration:function(){var a=[],b=0,c,d;for(d in this.layers){var e=
this.layers[d];if(e.configuredVisible&&(e.subLayerIds===null||e.subLayerIds.length===0))if(e.parentLayerId!==null){if(this._layerKeys[e.parentLayerId].configuredVisible)c=this._getWMSLayerNameFromTitle(e.name),e.wmsLayerName=c,c!==null&&c!==""&&(a[b]=c,b++)}else c=this._getWMSLayerNameFromTitle(e.name),e.wmsLayerName=c,c!==null&&c!==""&&(a[b]=c,b++)}this.serviceLayer.setVisibleLayers(a);this._handleServiceLayerLoaded(e)},_handleServiceLayerLoaded:function(a){this.isServiceLayerLoaded=true;if(this.essentialsMap!==
null&&this.essentialsMap.site!==null&&dojo.isFunction(this.essentialsMap.site.onLayerLoad))this.essentialsMap.site.onLayerLoad(a)},_getAgsDynamicImageFormat:function(a){if(typeof a=="undefined"||a===null||a.length<1)return"png8";a=a.toLowerCase();switch(a){case "png8":case "png24":case "png32":case "jpg":case "gif":return a;default:return"png8"}},_getAgsImageServiceImageFormat:function(a){if(typeof a=="undefined"||a===null||a.length<1)return null;a=a.toLowerCase();switch(a){case "jpgpng":case "png8":case "png24":case "jpg":case "gif":return a;
default:return null}},_getVisibleGroupLayers:function(a,b,c){if(a.isVisible())for(var d in a.subLayerIds){var e=this._layerKeys[a.subLayerIds[d]];if(e.isVisible())if(e.subLayerIds!==null&&e.subLayerIds.length>0)c=this._getVisibleGroupLayers(e,b,c);else if(dojo.indexOf(b,e.id)<0)b[c]=e.id,c++}return c},_getWMSLayerNameFromTitle:function(a){return this.serviceLayer instanceof esri.layers.WMSLayer?this._findWMSLayerName(this.serviceLayer.layerInfos,a):null},_processConnectionString:function(a){var b=
geocortex.essentials.ServiceHelper.extractConnectionStringValue;if(this.mapServiceType==geocortex.essentials.MapServiceType.BING){this.bingProperties={};var c;if((c=b(a,"mapStyle"))&&c.length>0)this.bingProperties.mapStyle=c;if((c=b(a,"culture"))&&c.length>0)this.bingProperties.culture=c;if((c=b(a,"key"))&&c.length>0)this.bingProperties.bingMapsKey=c}else{c=b(a,"url");if(c.length>0)this.serviceUrl=c.replace(/%3d/g,"=").replace(/%3D/g,"=");c=b(a,"geometryServiceUrl");if(c.length>0)this.geometryServiceUrl=
c;c=b(a,"token");if(c.length>0)this.serviceToken=c;c=b(a,"proxy");if(c.length>0)try{this.proxyUrl=esri.config.defaults.io.proxyUrl=c,esri.config.defaults.io.alwaysUseProxy=true}catch(d){}a=b(a,"mapUrl");if(a.length>0)this.mapUrl=a.replace(/%3d/g,"=").replace(/%3D/g,"=")}},_setVisibility:function(a,b,c){geocortex.isUndefined(c)&&(c=false);var d;switch(this.mapServiceType){case geocortex.essentials.MapServiceType.DYNAMIC:if(this.serviceLayer!==null){if(!this.serviceLayer.visibleLayers)break;for(var e=
[],b=a=0;b<this.layers.length;b++)if(d=this.layers[b],d.isVisible()&&d.parentLayerId===null)d.subLayerIds===null||d.subLayerIds.length===0?e[a++]=d.id:a=this._getVisibleGroupLayers(d,e,a);e.length===0?this.serviceLayer.setVisibleLayers&&this.serviceLayer.setVisibleLayers([-1],c):this.serviceLayer.setVisibleLayers&&this.serviceLayer.setVisibleLayers(e,c)}else this.serviceLayer.setVisibleLayers&&this.serviceLayer.setVisibleLayers([-1],c);break;case geocortex.essentials.MapServiceType.FEATURE:case geocortex.essentials.MapServiceType.GEORSS:case geocortex.essentials.MapServiceType.BING:case geocortex.essentials.MapServiceType.TILED:case geocortex.essentials.MapServiceType.IMAGE:this.serviceLayer!==
null&&(b?this.serviceLayer.show():this.serviceLayer.hide());break;case geocortex.essentials.MapServiceType.WMS:if(this.serviceLayer!==null){e=[];for(b=a=0;b<this.layers.length;b++)if(d=this.layers[b],d.isVisible()&&(d.subLayerIds===null||d.subLayerIds.length===0)&&d.areAllAncestorsVisible())d=d.wmsLayerName,d!==null&&d!==""&&(e[a]=d,a++);e.length===0&&(e=[]);this.serviceLayer.setVisibleLayers&&this.serviceLayer.setVisibleLayers(e,c)}else this.serviceLayer.setVisibleLayers&&this.serviceLayer.setVisibleLayers([],
c)}}});dojo.provide("geocortex.essentials.MapServiceType");dojo.declare("geocortex.essentials.MapServiceType",null,{});dojo.mixin(geocortex.essentials.MapServiceType,{DYNAMIC:"Dynamic",TILED:"Tiled",IMAGE:"Image",BING:"Bing",FEATURE:"Feature",WMS:"WMS",WMTS:"WMTS",GEORSS:"GeoRss"});dojo.provide("geocortex.essentials.MapServiceFunction");dojo.declare("geocortex.essentials.MapServiceFunction",null,{});dojo.mixin(geocortex.essentials.MapServiceFunction,{OPERATIONAL:"Operational",BASE:"Base"});dojo.provide("geocortex.essentials.DrawingBehavior");
dojo.declare("geocortex.essentials.DrawingBehavior",null,{});dojo.mixin(geocortex.essentials.DrawingBehavior,{MAP_SERVICE:"MapService",FEATURE_LAYER:"FeatureLayer",GeoRSS_LAYER:"GeoRssLayer"});dojo.provide("geocortex.essentials.ReportType");dojo.declare("geocortex.essentials.ReportType",null,{});dojo.mixin(geocortex.essentials.ReportType,{LAYER_TEMPLATE_REPORT:"Layer Template Report",MAP_TEMPLATE_REPORT:"Map Template Report"});dojo.provide("geocortex.essentials.xmlUtils");
geocortex.essentials.xmlUtils={};
geocortex.essentials.xmlUtils.parseObject=function(a){if(a)try{if(a.nodeType===3||a.nodeType===4){var b=dojo.string.trim(a.nodeValue);return b.length===0?null:b}else if(a.nodeType===1){var c={},d=0;dojo.forEach(a.attributes,function(a){c[a.nodeName]=a.nodeValue});dojo.forEach(a.childNodes,function(a){var b=geocortex.essentials.xmlUtils.parseObject(a);b&&(d++,c[a.nodeName]?(dojo.isArray(c[a.nodeName])===false&&(c[a.nodeName]=[c[a.nodeName]]),c[a.nodeName].push(b)):c[a.nodeName]=b)});return d===1&&
c["#text"]?c["#text"]:d===1&&c["#cdata-section"]?c["#cdata-section"]:c}}catch(e){}return null};geocortex.essentials.xmlUtils.getAllNodes=function(a){var b=new dojo.NodeList;if(dojo.isIE)for(var a=a.childNodes,c=0;c<a.length;c++)b.push(a[c]);else b=dojo.query("*",a);return b};
geocortex.essentials.xmlUtils.getNodes=function(a,b,c){var d=new dojo.NodeList;dojo.isIE?(a=c.getElementsByTagName(a),dojo.forEach(a,function(a){a=a.getElementsByTagName(b);dojo.forEach(a,function(a){d.push(a)})})):d=dojo.query(a+" > "+b,c);return d};geocortex.essentials.xmlUtils.getValue=function(a,b){if(a){var c=a;dojo.isString(a)&&(c=a.split(" > "),c=this.getNodes(c[0],c[1],b)[0]);return c.firstChild&&c.firstChild.nodeValue?c.firstChild.nodeValue:"Node not valid"}return"No Value"};
geocortex.essentials.xmlUtils.getAttribute=function(a,b){if(a)if(dojo.isIE){for(var c=0;c<a.attributes.length;c++)if(a.attributes[c].nodeName==b)return a.attributes[c].nodeValue;return null}else return a.getAttribute(b);return"No Value"};dojo.provide("geocortex.workflow.ArgumentInfo");
dojo.declare("geocortex.workflow.ArgumentInfo",null,{constructor:function(a,b,c,d){this.name=a;this.typeName=b;this.isRequired=c;this.value=d},name:null,typeName:null,runtimeTypeName:null,isRequired:false,value:null,_configureObject:function(a){if(typeof a.name=="undefined"||typeof a.typeName=="undefined")throw Error("Incorrect argument info object returned from initialization");this.name=a.name;this.typeName=a.typeName;this.isRequired=a.isRequired;this.value=a.value;this.runtimeTypeName=a.runtimeTypeName},
_internalClone:function(){var a=new geocortex.workflow.ArgumentInfo;a.name=this.name;a.typeName=this.typeName;a.isRequired=this.isRequired;a.value=dojo.clone(this.value);a.runtimeTypeName=dojo.clone(this.runtimeTypeName);return a}});dojo.provide("geocortex.workflow.ExternalActivityInfo");
dojo.declare("geocortex.workflow.ExternalActivityInfo",null,{constructor:function(a,b,c,d,e,f,g,j,h){this.id=a;this.displayName=b;this.typeName=c;this.instanceId=d;this.externalId=e;this.syncToken=f;this.isComplete=g;this.inputs=j;this.outputs=h},id:null,displayName:null,typeName:null,instanceId:null,externalId:null,debug:false,syncToken:null,isComplete:false,inputs:[],outputs:[],_configureObject:function(a){if(typeof a.id=="undefined"||typeof a.displayName=="undefined"||typeof a.typeName=="undefined"||
typeof a.instanceId=="undefined")throw Error("Incorrect external activity info object returned from initialization");this.id=a.id;this.displayName=a.displayName;this.typeName=a.typeName;this.instanceId=a.instanceId;this.externalId=a.externalId;this.syncToken=a.syncToken;this.isComplete=a.isComplete;if(a.debug)this.debug=a.debug;this.inputs=[];this.outputs=[];if(a.inputs!=null)for(var b in a.inputs){var c=a.inputs[b],d=new geocortex.workflow.ArgumentInfo;d._configureObject(c);this.inputs[b]=d}if(a.outputs!=
null)for(b in a.outputs)c=a.outputs[b],d=new geocortex.workflow.ArgumentInfo,d._configureObject(c),this.outputs[b]=d}});dojo.provide("geocortex.workflow.ActivityContext");
dojo.declare("geocortex.workflow.ActivityContext",null,{constructor:function(a,b,c,d){this._dispatcher=a;this._pendingIndex=b;this._workflow=c;this._workflowState=d},_dispatcher:null,_workflow:false,_pendingIndex:-1,_workflowState:null,activityComplete:null,dispatcher:function(){return this._dispatcher},workflow:function(){return this._workflow},getDisplayName:function(){return this._workflowState?this._workflowState.pendingExternalActivities[this._pendingIndex].displayName:""},getInputNames:function(){var a=
[];if(this._workflowState)for(var b=this._workflowState.pendingExternalActivities[this._pendingIndex].inputs,c=0;c<b.length;c++)a.push(b[c].name);return a},getInputNamesByType:function(a){var b=[];if(this._workflowState)for(var c=this._workflowState.pendingExternalActivities[this._pendingIndex].inputs,d=0;d<c.length;d++)c[d].typeName.indexOf(a)===0&&b.push(c[d].name);return b},getOutputNames:function(){var a=[];if(this._workflowState)for(var b=this._workflowState.pendingExternalActivities[this._pendingIndex].outputs,
c=0;c<b.length;c++)a.push(b[c].name);return a},getOutputNamesByType:function(a){var b=[];if(this._workflowState)for(var c=this._workflowState.pendingExternalActivities[this._pendingIndex].outputs,d=0;d<c.length;d++)c[d].typeName.indexOf(a)===0&&b.push(c[d].name);return b},getSite:function(){return this._workflow!=null?this._workflow.site:null},getEsriMap:function(){return this._workflow!=null&&this._workflow.site!=null?this._workflow.site._getEsriMap():null},getValue:function(a){if(this._workflowState)for(var b=
this._workflowState.pendingExternalActivities[this._pendingIndex].inputs,c=0;c<b.length;c++)if(b[c].name==a)return b[c].value;return null},getOutputValue:function(a){if(this._workflowState)for(var b=this._workflowState.pendingExternalActivities[this._pendingIndex].outputs,c=0;c<b.length;c++)if(b[c].name==a)return b[c].value;return null},getJsonValue:function(a){for(var b=this._workflowState.pendingExternalActivities[this._pendingIndex].inputs,c=0;c<b.length;c++)if(b[c].name==a)return dojo.toJson(b[c].value);
return null},getOutputJsonValue:function(a){if(this._workflowState)for(var b=this._workflowState.pendingExternalActivities[this._pendingIndex].outputs,c=0;c<b.length;c++)if(b[c].name==a)return(a=b[c].value)&&a.length===1&&(a=a[0]),dojo.toJson(a);return null},setValue:function(a,b,c){var d=false;if(this._workflowState){for(var e=this._workflowState.pendingExternalActivities[this._pendingIndex].outputs,f=this._getRuntimeType(b),g=0;g<e.length;g++)if(e[g].name==a){d=true;if(e=e[g])if(e.value=b,f!=null)e.runtimeTypeName=
f;break}if(!d&&c)f||(f="System.Object"),e=new geocortex.workflow.ArgumentInfo,e.isRequired=false,e.name=a,e.value=b,e.typeName=f,e.runtimeTypeName=f,this._workflowState.pendingExternalActivities[this._pendingIndex].outputs.push(e)}},getActivityTypeName:function(){return this._workflowState?this._workflowState.pendingExternalActivities[this._pendingIndex].typeName:""},getActivityExternalId:function(){return this._workflowState?this._workflowState.pendingExternalActivities[this._pendingIndex].externalId:
""},getInputArgumentTypeName:function(a){if(this._workflowState)for(var b=this._workflowState.pendingExternalActivities[this._pendingIndex].inputs,c=0;c<b.length;c++)if(b[c].name==a)return b[c].typeName;return""},getInputArgumentRuntimeTypeName:function(a){for(var b=this._workflowState.pendingExternalActivities[this._pendingIndex].inputs,c=0;c<b.length;c++)if(b[c].name==a)return b[c].runtimeTypeName;return""},completeActivity:function(){if(this._workflowState){var a=this._workflowState.pendingExternalActivities[this._pendingIndex];
if(!a.isComplete){var b=this;this.getActivityExternalId()=="debugger"||a&&a.debug?geocortex.workflow.DefaultActivityHandlers.showDebug(this,false,function(){b._completeActivityInternal()}):this._completeActivityInternal()}}},_completeActivityInternal:function(){if(this._workflowState){var a=this._workflowState.pendingExternalActivities[this._pendingIndex];a.isComplete=true;this._dispatcher!=null&&this._dispatcher.activityComplete(this);a.inputs=null;var a=this._workflowState.pendingExternalActivities[this._pendingIndex].syncToken,
b=true;if(a!="")for(var c=this._workflowState.pendingExternalActivities,d=0;d<c.length;d++)if(c[d].syncToken==a&&!c[d].isComplete){b=false;break}b&&(geocortex.workflow.WorkflowControllerProxy._executeWorkflow(this._workflow,this._dispatcher,this._workflowState,null,this),dojo.isFunction(this.activityComplete)&&this.activityComplete(this))}},_getRuntimeType:function(a){var b="System.Object";a&&(typeof a.isInstanceOf=="function"?a.isInstanceOf(esri.geometry.Extent)?b="ESRI.ArcGIS.Client.Geometry.Envelope":
a.isInstanceOf(esri.geometry.Extent)?b="ESRI.ArcGIS.Client.Geometry.Envelope":a.isInstanceOf(esri.geometry.Point)?b="ESRI.ArcGIS.Client.Geometry.MapPoint":a.isInstanceOf(esri.geometry.Multipoint)?b="ESRI.ArcGIS.Client.Geometry.MultiPoint":a.isInstanceOf(esri.geometry.Polygon)?b="ESRI.ArcGIS.Client.Geometry.Polygon":a.isInstanceOf(esri.geometry.Polyline)?b="ESRI.ArcGIS.Client.Geometry.Polyline":a.isInstanceOf(esri.geometry.Geometry)&&(b="ESRI.ArcGIS.Client.Geometry.Geometry"):typeof a=="string"?b=
"System.String":typeof a=="number"?b="System.Double":typeof a=="boolean"?b="System.Boolean":typeof a=="object"&&(b=typeof a.getMonth=="function"?"System.DateTime":"System.Object"));return b}});dojo.provide("geocortex.workflow._WorkflowState");
dojo.declare("geocortex.workflow._WorkflowState",null,{constructor:function(a,b,c,d,e,f){this.instanceId=a;this.status=b;this.pendingExternalActivities=c;this.outputs=d;this.workflowData=e;this.instanceData=f},instanceId:null,status:null,pendingExternalActivities:null,outputs:null,workflowData:null,instanceData:null});dojo.provide("geocortex.workflow.SimpleActivityDispatcher");
dojo.declare("geocortex.workflow.SimpleActivityDispatcher",null,{constructor:function(a,b,c,d,e){this._defaultActivityDispatcher=new geocortex.workflow.DefaultActivityDispatcher;this._dispatchFunction=a;this._handleErrorFunction=b;this._activityBeginFunction=c;this._activityCompleteFunction=d;this._workflowCompleteFunction=e},isBusy:null,_defaultActivityDispatcher:null,_dispatchFunction:null,_handleErrorFunction:null,_activityBeginFunction:null,_activityCompleteFunction:null,_workflowCompleteFunction:null,
dispatch:function(a){this._defaultActivityDispatcher.canHandleActivity(a)?this._defaultActivityDispatcher.dispatch(a):this._dispatchFunction!=null&&this._dispatchFunction(a)},handleError:function(a,b){this._handleErrorFunction!=null&&this._handleErrorFunction(a,b)},activityBegin:function(a){this._activityBeginFunction!=null&&this._activityBeginFunction(a)},activityComplete:function(a){this._activityCompleteFunction!=null&&this._activityCompleteFunction(a)},workflowComplete:function(a,b){this._workflowCompleteFunction!=
null&&this._workflowCompleteFunction(a,b)}});dojo.provide("geocortex.workflow.DefaultActivityHandlers");dojo.declare("geocortex.workflow.DefaultActivityHandlers",null,{});geocortex.workflow.DefaultActivityHandlers.handleAlert=function(a){a.getValue("Title");var b=a.getValue("Text");alert(b);a.completeActivity()};geocortex.workflow.DefaultActivityHandlers.handleConfirm=function(a){var b=a.getValue("Text"),b=confirm(b);b==null&&(b=false);a.setValue("Result",b);a.completeActivity()};
geocortex.workflow.DefaultActivityHandlers.handleExportMap=function(a){geocortex.workflow.MapActivityHandlers.handleExportMap(a)};geocortex.workflow.DefaultActivityHandlers.handlePrintMap=function(a){geocortex.workflow.MapActivityHandlers.handlePrintMap(a)};geocortex.workflow.DefaultActivityHandlers.handleIntersectLayers=function(a){geocortex.workflow.MapActivityHandlers.handleIntersectLayers(a)};
geocortex.workflow.DefaultActivityHandlers.handleReport=function(a){var b=a.getValue("MapServiceId"),c=a.getValue("LayerId"),d=a.getValue("LayerName"),e=a.getValue("ReportId"),f=null,g=a.getSite();if(g&&b&&(c||d)&&e)if(b=g.essentialsMap.findMapServiceById(b))g=null,c?g=b.findLayerById(c):d&&(g=b.findLayerByName(d)),g!=null&&(f=g.findReportById(e));if(f){c=new esri.tasks.Query;d=new geocortex.essentials.ReportParameters;a.getValue("ShowOpenReport");var e=a.getValue("Geometry"),b=a.getValue("OutSpatialReference"),
g=a.getValue("Text"),j=a.getValue("Where"),h=a.getValue("OutputFormat"),k=a.getValue("Resolution"),l=a.getValue("CustomExtent"),m=a.getValue("SpatialRelationship"),o=a.getValue("ReportExtentType"),q=a.getValue("TextFields"),r=function(a){var b=null;if(q&&a)for(var c=0;c<q.length;c++)if(q[c].Key==a){b=q[c];break}return b};if(!o)o=geocortex.essentials.ReportParameters.CURRENT_EXTENT;d.extentType=o;if(h)d.outputFormat=h;if(f.textFields)for(var s in f.textFields)f.textFields.hasOwnProperty(s)&&(field=
f.textFields[s],h=r(field.displayName),h!=null?d.fields.push(new geocortex.essentials.TextField(field.id,field.displayName,h.Value,field.multiline)):d.fields.push(field));if(k)d.resolution=k;if(l)d.customExtent=l;c.spatialRelationship=geocortex.essentials.RestHelper._convertSpatialRelationshipFromDotnetIndex(m);if(e)c.geometry=e;if(b)c.outSpatialReference=b;if(g)c.text=g;if(j)c.where=j;f.run(c,d,function(b){(reportHref=b?b.href:null)&&reportHref.length>0&&window.open(reportHref);a.setValue("ResultUrl",
reportHref);a.completeActivity()},function(b,c){a.dispatcher().handleError(Error("Error running report '"+c.message+"'"),a.workflow)})}else a.dispatcher().handleError(Error("Cannot find report '"+e+"'"),a.workflow)};
geocortex.workflow.DefaultActivityHandlers.showDebug=function(a,b,c){var d=new geocortex.forms.FormDefinition;d.maxHeight.set(600);d.maxWidth.set(500);var e;b?(d.title.set("Debug - Input Arguments for "+a.getDisplayName()),d.containerFormItem.description.set("Input Arguments:"),e=a.getInputNames()):(d.title.set("Debug - Output Arguments for "+a.getDisplayName()),d.containerFormItem.description.set("Output Arguments:"),e=a.getOutputNames());if(e!=null&&e.length>0)for(var f in e){var g=e[f],j;(j=b?
a.getValue(g):a.getOutputValue(g))&&typeof j=="object"&&(j=b?a.getJsonValue(g):a.getOutputJsonValue(g));var h;!j||String(j).length<100&&String(j).indexOf("\n")==-1?h=new geocortex.forms.items.TextBoxFormItem(null,d):(h=new geocortex.forms.items.TextAreaFormItem(null,d),h.textboxHeight.set(100));h.label=new geocortex.forms.items.LabelFormItem(null,d);h.text.set(j);h.textboxWidth.set(300);h.label.text.set(g);h.readOnly.set(true);d.containerFormItem.formItems.addItem(h)}(a=a.dispatcher())&&typeof a._showDebugHandler==
"function"?a._showDebugHandler(d,c):c&&c()};geocortex.workflow.DefaultActivityHandlers.handlePrompt=function(a){var b=a.getValue("Description"),c=a.getValue("DefaultText"),b=prompt(b,c);a.setValue("Result",b);a.completeActivity()};
geocortex.workflow.DefaultActivityHandlers.handleCaptureGeometry=function(a){var b=a.getValue("CaptureType"),c=a.getEsriMap();if(c!=null){if(typeof esri.toolbars.draw!="object"||typeof esri.toolbars.Draw!="function")throw Error(500,'dojo.require("esri.toolbars.draw") must be added to your client code to use CaptureGeometry activity.');var d=new esri.toolbars.Draw(c),e=dojo.connect(d,"onDrawEnd",dojo.hitch(e,function(b){var c=e;d.deactivate();dojo.disconnect(c);a.setValue("Result",b);a.completeActivity()})),
b=geocortex.workflow.DefaultActivityHandlers.getDrawType(b);d.activate(b)}else throw Error(500,"Capture Geometry: No map available.");};
geocortex.workflow.DefaultActivityHandlers.getDrawType=function(a){var b;switch(a){case 0:b=esri.toolbars.Draw.EXTENT;break;case 1:b=esri.toolbars.Draw.FREEHAND_POLYGON;break;case 2:b=esri.toolbars.Draw.FREEHAND_POLYLINE;break;case 3:b=esri.toolbars.Draw.LINE;break;case 4:b=esri.toolbars.Draw.POINT;break;case 5:b=esri.toolbars.Draw.MULTI_POINT;break;case 6:b=esri.toolbars.Draw.POLYGON;break;case 7:b=esri.toolbars.Draw.POLYLINE;break;case 8:completeActivity(map.extent,drawEvent,toolbar);drawRequired=
false;break;default:b=esri.toolbars.Draw.EXTENT}return b};
geocortex.workflow.DefaultActivityHandlers.handleRefreshMap=function(a){var b=a.getValue("MapServiceId");if(a.getEsriMap()!=null)for(var c in a._workflow.site.essentialsMap.mapServices){var d=a._workflow.site.essentialsMap.mapServices[c];if(d!=null&&d.serviceLayer!=null&&(b==null||b==d.id)&&typeof d.serviceLayer.refresh=="function")if(typeof d.serviceLayer.disableClientCaching=="boolean"){var e=d.serviceLayer.disableClientCaching;d.serviceLayer.disableClientCaching=true;d.serviceLayer.refresh();d.serviceLayer.disableClientCaching=
e}else d.serviceLayer.refresh()}else throw Error(500,"Refresh Map: no map available.");a.completeActivity()};
geocortex.workflow.DefaultActivityHandlers.handleGetCurrentPosition=function(a){if(navigator.geolocation){var b={};b.enableHighAccuracy=a.getValue("EnableHighAccuracy");b.timeout=a.getValue("Timeout");b.maximumAge=a.getValue("MaximumAge");navigator.geolocation.getCurrentPosition(function(b){a.setValue("Latitude",b.coords.latitude);a.setValue("Longitude",b.coords.longitude);a.setValue("Altitude",b.coords.altitude);a.setValue("Accuracy",b.coords.accuracy);a.setValue("AltitudeAccuracy",b.coords.altitudeAccuracy);
a.setValue("Heading",b.coords.heading);a.setValue("Speed",b.coords.speed);a.setValue("Timestamp",b.timestamp);a.completeActivity()},function(b){a.setValue("ErrorCode",b.code);a.setValue("ErrorMessage",b.message);a.completeActivity()},b)}else a.setValue("ErrorCode",2),a.setValue("ErrorMessage","Geolocation is not supported."),a.completeActivity()};
geocortex.workflow.DefaultActivityHandlers.handleGetMapExtent=function(a){var b=a.getEsriMap();if(b==null)throw Error(500,"Get Map Extent: No map available.");a.setValue("Extent",b.extent);a.completeActivity()};
geocortex.workflow.DefaultActivityHandlers.handleGetMapInfo=function(a){var b=a.getEsriMap();if(b==null)throw Error(500,"Get Map Info: No map available.");a.setValue("Extent",b.extent);a.setValue("Scale",esri.geometry.getScale(b));a.setValue("SpatialReference",b.spatialReference);a.setValue("Height",b.height);a.setValue("Width",b.width);a.completeActivity()};
geocortex.workflow.DefaultActivityHandlers.handleGetPhoto=function(a){if(navigator.camera){var b={};b.quality=a.getValue("Quality");b.destinationType=a.getValue("DestinationType");b.sourceType=a.getValue("SourceType");b.allowEdit=a.getValue("AllowEdit");b.encodingType=a.getValue("EncodingType");b.targetWidth=a.getValue("TargetWidth");b.targetHeight=a.getValue("TargetHeight");navigator.camera.getPicture(function(b){a.setValue("ImageData",b);a.completeActivity()},function(b){a.setValue("Message",b);
a.completeActivity()},b)}else a.setValue("Message","camera is not supported."),a.completeActivity()};
geocortex.workflow.DefaultActivityHandlers.handleSetMapExtent=function(a){var b=a.getValue("Extent");if(b!=null){var c=a.getEsriMap();if(c!=null){if(!b.spatialReference||!b.spatialReference.wkid&&!b.spatialReference.wkt)b.spatialReference=c.spatialReference;c.setExtent(b)}else throw Error(500,"Set Map Extent: No map available.");}else throw Error(500,"Set Map Extent: required Extent argument was not supplied.");a.completeActivity()};
geocortex.workflow.DefaultActivityHandlers.handleExternalDelay=function(a){var b=a.getValue("Milliseconds");if(b!=null)setTimeout(function(){a.completeActivity()},b);else throw Error(500,"External Delay: required Milliseconds argument was not supplied.");};
geocortex.workflow.DefaultActivityHandlers.handleWaitForGeoprocessorJobComplete=function(a){var b=a.getValue("GeoprocessorUrl");a.getValue("Token");a.getValue("ProxyURL");var c=a.getValue("UpdateDelay"),d=a.getValue("JobId"),e=false;if(!b)throw Error("GeoprocessorUrl parameter is missing.");if(!d)throw Error("JobId parameter is missing.");var f=new esri.tasks.Geoprocessor(b);c>0&&f.setUpdateDelay(c);dojo.connect(f,"onError",function(){a.setValue("Result",geocortex.workflow.DefaultActivityHandlers._getJobStatusCode(esri.tasks.JobInfo.STATUS_FAILED));
a.completeActivity()});dojo.connect(f,"onStatusUpdate",function(b){if(!e)b=b.jobStatus,b==esri.tasks.JobInfo.STATUS_CANCELLED||b==esri.tasks.JobInfo.STATUS_DELETED||b==esri.tasks.JobInfo.STATUS_FAILED||b==esri.tasks.JobInfo.STATUS_SUCCEEDED||b==esri.tasks.JobInfo.STATUS_TIMED_OUT?(e=true,a.setValue("Result",geocortex.workflow.DefaultActivityHandlers._getJobStatusCode(b)),a.completeActivity()):window.setTimeout(function(){f.checkJobStatus(d)},c)});f.checkJobStatus(d)};
geocortex.workflow.DefaultActivityHandlers._getJobStatusCode=function(a){switch(a){case "esriJobNew":return 0;case "esriJobSubmitted":return 1;case "esriJobWaiting":return 2;case "esriJobExecuting":return 3;case "esriJobSucceeded":return 4;case "esriJobFailed":return 5;case "esriJobTimedOut":return 6;case "esriJobCancelling":return 7;case "esriJobCancelled":return 8;case "esriJobDeleting":return 9;case "esriJobDeleted":return 10;default:return-1}};
geocortex.workflow.DefaultActivityHandlers.handleSetLayerDefinition=function(a){var b=a.getValue("MapServiceId"),c=a.getValue("LayerId"),d=a.getValue("LayerName"),e=a.getValue("Definition");if(!b)throw Error("Set Layer Definition: required MapServiceId argument was not supplied.");if(!c&&!d)throw Error("Set Layer Definition: a LayerId or a LayerName argument must be supplied.");var f=a.getSite();if(!f)throw Error("Set Layer Visibility: No site available.");var g=null,j;for(j in f.essentialsMap.mapServices){var h=
f.essentialsMap.mapServices[j];if(h&&b===h.id){g=h;break}}if(!g)throw Error("Set Layer Definition: Unable to find map service with ID '"+b+"'");if(!g.serviceLayer||!(g.serviceLayer instanceof esri.layers.ArcGISDynamicMapServiceLayer))throw Error("Set Layer Definition: Unable to find map service with ID '"+b+"' or map service type does not support layer definitions.");if(!g.serviceLayer.layerDefinitions)g.serviceLayer.layerDefinitions=[];if(!c&&d)if(b=g.findLayerByName(d))c=b.id;else throw Error("Set Layer Definition: Unable to find layer with Name '"+
d+"'.");g.serviceLayer.layerDefinitions[parseInt(c)]=e;g.serviceLayer.setLayerDefinitions(g.serviceLayer.layerDefinitions,true);a.completeActivity()};
geocortex.workflow.DefaultActivityHandlers.handleSetLayerVisibility=function(a){var b=a.getValue("MapServiceId"),c=a.getValue("LayerId"),d=a.getValue("LayerName"),e=a.getValue("Visible");if(!b)throw Error("Set Layer Visibility: required MapServiceId argument was not supplied.");if(!c&&!d)throw Error("Set Layer Visibility: a LayerId or a LayerName argument must be supplied.");if(e===null)throw Error("Set Layer Visibility: required Visible argument was not supplied.");var f=a.getSite();if(!f)throw Error("Set Layer Visibility: No site available.");
var g=null,j;for(j in f.essentialsMap.mapServices){var h=f.essentialsMap.mapServices[j];if(h&&b===h.id){g=h;break}}if(!g)throw Error("Set Layer Visibility: Unable to find map service with ID '"+b+"'");f=null;c?f=g.findLayerById(c):d&&(f=g.findLayerByName(d));if(!f)throw Error("Set Layer Visibility: Unable to find layer with ID '"+c+"' in map service with ID '"+b+"'");f.setVisibility(e);a.completeActivity()};
geocortex.workflow.DefaultActivityHandlers.handleSetMapServiceVisibility=function(a){var b=a.getValue("MapServiceId"),c=a.getValue("Visible");if(b==null)throw Error(500,"Set Map Service Visibility: required MapServiceId argument was not supplied.");if(c==null)throw Error(500,"Set Map Service Visibility: required Visible argument was not supplied.");var d=a.getEsriMap();if(d==null)throw Error(500,"Set Map Service Visibility: No map available.");var e=null;if(d.layerIds!=null)for(var f=0;f<d.layerIds.length;f++){var g=
d.getLayer(d.layerIds[f]);if(g!=null&&b==g.id){e=g;break}}if(e==null)throw Error(500,"Set Map Service Visibility: Unable to find map service with ID '"+b+"'");e.setVisibility(c);a.completeActivity()};
geocortex.workflow.DefaultActivityHandlers.handleGetMapServiceInfo=function(a){var b=a.getValue("MapServiceId"),c=a.getValue("LayerName"),d=null,e=null,f=null;if(b==null)throw Error(500,"Get Map Service Info: required MapServiceId argument was not supplied.");var g=a.getEsriMap();if(g==null)throw Error(500,"Get Map Service Info: No map available.");var j=a.getSite(),h=null;if(j!=null&&j.essentialsMap!=null&&(j=j.essentialsMap.findMapServiceById(b),j!=null))h=j.serviceLayer,d=j.serviceUrl,e=j.serviceToken;
if(h==null&&g.layerIds!=null)for(j=0;j<g.layerIds.length;j++){var k=g.getLayer(g.layerIds[j]);if(k!=null&&b==k.id){h=k;d=h.url;break}}if(h==null)throw Error(500,"Get Map Service Info: Unable to find map service with ID '"+b+"'");if(c!=null&&h.layerInfos){b=h.layerInfos;for(j=0;j<b.length;j++)if(g=b[j],g!=null&&g.id!=null&&g.name==c){f=g.id;break}}a.setValue("MapServiceUrl",d);a.setValue("Token",e);a.setValue("LayerId",f);a.completeActivity()};dojo.provide("geocortex.workflow.DefaultActivityDispatcher");
dojo.declare("geocortex.workflow.DefaultActivityDispatcher",null,{constructor:function(a,b,c,d){this._handleErrorFunction=a;this._activityBeginFunction=b;this._activityCompleteFunction=c;this._workflowCompleteFunction=d;this.defaultFormContainerId="form-container-outer";this.defaultFormContentId="form-container";this._registeredActivityHandlers={};this._registeredExternalIdHandlers={};this.registerDefaultHandlers()},registerDefaultHandlers:function(){this.registerActivityHandler("Geocortex.Workflow.Activities.Alert",
geocortex.workflow.DefaultActivityHandlers.handleAlert);this.registerActivityHandler("Geocortex.Workflow.Activities.Confirm",geocortex.workflow.DefaultActivityHandlers.handleConfirm);this.registerActivityHandler("Geocortex.Workflow.Activities.DisplayForm",geocortex.workflow.DefaultActivityHandlers.handleForm);this.registerActivityHandler("Geocortex.Workflow.Activities.Prompt",geocortex.workflow.DefaultActivityHandlers.handlePrompt);this.registerActivityHandler("Geocortex.Workflow.Activities.CaptureGeometry",
geocortex.workflow.DefaultActivityHandlers.handleCaptureGeometry);this.registerActivityHandler("Geocortex.Workflow.Activities.GetMapExtent",geocortex.workflow.DefaultActivityHandlers.handleGetMapExtent);this.registerActivityHandler("Geocortex.Workflow.Activities.SetMapExtent",geocortex.workflow.DefaultActivityHandlers.handleSetMapExtent);this.registerActivityHandler("Geocortex.Workflow.Activities.RefreshMap",geocortex.workflow.DefaultActivityHandlers.handleRefreshMap);this.registerActivityHandler("Geocortex.Workflow.Activities.ExternalDelay",
geocortex.workflow.DefaultActivityHandlers.handleExternalDelay);this.registerActivityHandler("Geocortex.Workflow.Activities.SetLayerDefinition",geocortex.workflow.DefaultActivityHandlers.handleSetLayerDefinition);this.registerActivityHandler("Geocortex.Workflow.Activities.SetLayerVisibility",geocortex.workflow.DefaultActivityHandlers.handleSetLayerVisibility);this.registerActivityHandler("Geocortex.Workflow.Activities.SetMapServiceVisibility",geocortex.workflow.DefaultActivityHandlers.handleSetMapServiceVisibility);
this.registerActivityHandler("Geocortex.Workflow.Activities.GetMapServiceInfo",geocortex.workflow.DefaultActivityHandlers.handleGetMapServiceInfo);this.registerActivityHandler("Geocortex.Workflow.Activities.WaitForGeoprocessorJobComplete",geocortex.workflow.DefaultActivityHandlers.handleWaitForGeoprocessorJobComplete);this.registerActivityHandler("Geocortex.Workflow.Activities.Report",geocortex.workflow.DefaultActivityHandlers.handleReport);this.registerActivityHandler("Geocortex.Workflow.Activities.PrintMap",
geocortex.workflow.DefaultActivityHandlers.handlePrintMap);this.registerActivityHandler("Geocortex.Workflow.Activities.ExportMap",geocortex.workflow.DefaultActivityHandlers.handleExportMap);this.registerActivityHandler("Geocortex.Workflow.Activities.GetMapInfo",geocortex.workflow.DefaultActivityHandlers.handleGetMapInfo);this.registerActivityHandler("Geocortex.Workflow.Activities.GetCurrentPosition",geocortex.workflow.DefaultActivityHandlers.handleGetCurrentPosition);this.registerActivityHandler("Geocortex.Workflow.Activities.GetPhoto",
geocortex.workflow.DefaultActivityHandlers.handleGetPhoto);this.registerExternalIdHandler("IntersectLayers",geocortex.workflow.DefaultActivityHandlers.handleIntersectLayers);this.registerExternalIdHandler("GetPhoto",geocortex.workflow.DefaultActivityHandlers.handleGetPhoto)},isBusy:null,_registeredActivityHandlers:null,_registeredExternalIdHandlers:null,_handleErrorFunction:null,_activityBeginFunction:null,_activityCompleteFunction:null,_workflowCompleteFunction:null,canHandleActivity:function(a){if(!a){var b=
Error();b.message="Null ActivityContext passed to canHandleActivity.";this.handleError(b,a)}return a.getActivityExternalId()!=null&&this._registeredExternalIdHandlers[a.getActivityExternalId()]!=null?true:a.getActivityTypeName()!=null&&this._registeredActivityHandlers[a.getActivityTypeName()]?true:false},registerExternalIdHandler:function(a,b){if(a==null||b==null){var c=Error();c.message="Null externalId or handler passed to registerExternalIdHandler.";this.handleError(c,null)}else this._registeredExternalIdHandlers[a]=
b},registerActivityHandler:function(a,b){if(a==null||b==null){var c=Error();c.message="Null activityTypeName or handler passed to registerActivityHandler.";this.handleError(c,null)}else this._registeredActivityHandlers[a]=b},dispatch:function(a){if(a==null){var b=Error();b.message="Null ActivityContext passed to dispatch.";this.handleError(b,a)}else this.canHandleActivity(a)?(a.getActivityExternalId()!=null&&this._registeredExternalIdHandlers[a.getActivityExternalId()]!=null&&(b=this._registeredExternalIdHandlers[a.getActivityExternalId()],
b(a,this)),a.getActivityTypeName()!=null&&this._registeredActivityHandlers[a.getActivityTypeName()]&&(b=this._registeredActivityHandlers[a.getActivityTypeName()],b(a,this))):(b=Error(),b.message="Unknown activity type '"+a.getActivityTypeName()+"' or external ID '"+a.getActivityExternalId()+"' encountered.",this.handleError(b,a))},handleError:function(a,b){this._handleErrorFunction!=null&&this._handleErrorFunction(a,b)},activityBegin:function(a){this._activityBeginFunction!=null&&this._activityBeginFunction(a)},
activityComplete:function(a){this._activityCompleteFunction!=null&&this._activityCompleteFunction(a)},workflowComplete:function(a,b){this._workflowCompleteFunction!=null&&this._workflowCompleteFunction(a,b)}});dojo.provide("geocortex.workflow.WorkflowControllerProxy");geocortex.workflow.WorkflowControllerProxy.startWorkflow=function(a,b,c){geocortex.workflow.WorkflowControllerProxy._executeWorkflow(a,b,null,c)};
geocortex.workflow.WorkflowControllerProxy._executeWorkflow=function(a,b,c,d,e){var f={};if(a==null)if(c=Error(500,"workflow cannot be null"),b!=null){b.handleError(c,null);return}else throw c;var g=a.url+"/run";if(d)geocortex.workflow.WorkflowControllerProxy._preProcessArguments(d),f.inargs=dojo.toJson(d);if(c!=null){for(var d=c.pendingExternalActivities,j=0;j<d.length;j++)geocortex.workflow.WorkflowControllerProxy._preProcessArguments(d[j].outputs);f.workflow=dojo.toJson(c)}f=geocortex.encodeJson(dojo.mixin({f:"json"},
f));if(b!=null)b.isBusy=true;geocortex.request({url:g,content:f,load:dojo.hitch(this,function(c){geocortex.workflow.WorkflowControllerProxy._processWorkflowResults(c,a,b)}),error:dojo.hitch(this,function(a){if(b!=null)b.isBusy=false,b.handleError(a,e);else throw a;}),callbackParamName:"CallBack"})};
geocortex.workflow.WorkflowControllerProxy._processWorkflowResults=function(a,b,c){if(c!=null)c.isBusy=false;if(a)if(a.error)geocortex.workflow.WorkflowControllerProxy._handleErrorInternal(c,Error(500,"Error running workflow: "+a.error.message));else if(a=new geocortex.workflow._WorkflowState(a.instanceId,a.status,geocortex.workflow.WorkflowControllerProxy._getExternalActivities(a.pendingExternalActivities),geocortex.workflow.WorkflowControllerProxy._getArguments(a.outputs),a.workflowData,a.instanceData),
a.status=="Completed")c!=null&&c.workflowComplete(a.outputs,b);else if(a.status=="WaitingForExternalActivities"){var d=a.pendingExternalActivities;if(d!=null)for(var e=0;e<d.length;e++){var f=new geocortex.workflow.ActivityContext(c,e,b,a);c!=null&&c.activityBegin(f);var g=d[e];geocortex.workflow.WorkflowControllerProxy._preProcessArguments(g.inputs);try{f.getActivityExternalId()=="debugger"||g&&g.debug?geocortex.workflow.DefaultActivityHandlers.showDebug(f,true,function(){geocortex.workflow.WorkflowControllerProxy._dispatch(f)}):
geocortex.workflow.WorkflowControllerProxy._dispatch(f)}catch(j){geocortex.workflow.WorkflowControllerProxy._handleErrorInternal(c,j,f)}}}};geocortex.workflow.WorkflowControllerProxy._handleErrorInternal=function(a,b,c){if(a!=null)a.handleError(b,c);else throw b;};
geocortex.workflow.WorkflowControllerProxy._preProcessArguments=function(a){if(a!=null)for(var b=0;b<a.length;b++){var c=function(a){var b=a,c=a.indexOf(",");c>0&&(b=a.substring(0,c));return b},d=c(a[b].runtimeTypeName);a[b].value=geocortex.workflow.WorkflowControllerProxy._getObjectFromJsonWithType(a[b].value,d);if(a[b].value==null)c=c(a[b].typeName),a[b].value=geocortex.workflow.WorkflowControllerProxy._getObjectFromJsonWithType(a[b].value,c)}};
geocortex.workflow.WorkflowControllerProxy._getObjectFromJsonWithType=function(a,b){var c=a;switch(b){case "ESRI.ArcGIS.Client.Tasks.FeatureSet":a!=null&&(c=new esri.tasks.FeatureSet(a));break;case "ESRI.ArcGIS.Client.Geometry.Geometry":case "ESRI.ArcGIS.Client.Geometry.Envelope":case "ESRI.ArcGIS.Client.Geometry.MapPoint":case "ESRI.ArcGIS.Client.Geometry.MultiPoint":case "ESRI.ArcGIS.Client.Geometry.Polygon":case "ESRI.ArcGIS.Client.Geometry.Polyline":a!=null&&(c=esri.geometry.fromJson(a));break;
case "ESRI.ArcGIS.Client.Geometry.SpatialReference":a!=null&&(c=new esri.SpatialReference(a));break;case "System.DateTime":a instanceof Date&&(c="/Date("+a.getTime()+")/")}return c};geocortex.workflow.WorkflowControllerProxy._getExternalActivities=function(a){var b=[];if(a!=null)for(var c in a){var d=a[c],e=new geocortex.workflow.ExternalActivityInfo;e._configureObject(d);b[c]=e}return b};
geocortex.workflow.WorkflowControllerProxy._getArguments=function(a){arguments=[];if(a!=null)for(var b in a){var c=a[b],d=new geocortex.workflow.ArgumentInfo;d._configureObject(c);arguments[b]=d}return arguments};geocortex.workflow.WorkflowControllerProxy._dispatch=function(a){if(a._dispatcher!=null)a._dispatcher.dispatch(a);else throw Error("Unhandled activity: "+a.getActivityTypeName());};dojo.provide("geocortex.forms.items.LabelContainer");
dojo.declare("geocortex.forms.items.LabelContainer",null,{constructor:function(a){a?(this.label=new geocortex.forms.items.LabelFormItem(geocortex.forms.getElement(a,"Label")),this.label.toolTip.get()==""&&this.toolTip!=null&&this.label.toolTip.set(this.toolTip.get())):this.label=new geocortex.forms.items.LabelFormItem(null)},label:null,_render:function(){return geocortes.forms.renderFormItem(this)}});dojo.provide("geocortex.forms.items.FormItem");
dojo.declare("geocortex.forms.items.FormItem",null,{constructor:function(a,b){this.formDefinition=b;this._xmlDoc=a;this._dijits=[];this.validationItems=[];this.isValid=new Observable(true);this.isRequired=new Observable(false);if(a){this.toolTip=new Observable(geocortex.forms.getElementText(this._xmlDoc,"ToolTip"));this.itemID=new Observable(geocortex.forms.getElementText(this._xmlDoc,"ItemID"));this.argumentName=new Observable(geocortex.forms.getElementText(this._xmlDoc,"ArgumentName"));var c=geocortex.forms.getElement(this._xmlDoc,
"ValidationItems");if(c!=null)for(var d=0;d<c.childNodes.length;d++){var e=geocortex.forms.items._processValidationItem(c.childNodes[d]);e.isInstanceOf(geocortex.forms.items.validation.RequiredValidationItem)&&this.isRequired.set(true);e!=null&&this.validationItems.push(e)}}else this.toolTip=new Observable(""),this.itemID=new Observable(null),this.argumentName=new Observable(null)},formDefinition:null,toolTip:null,itemID:null,isRequired:null,isValid:null,argumentName:null,validationItems:null,_xmlDoc:null,
getResult:function(){return null},validate:function(){var a=[];this.isValid.set(true);if(this.validationItems!=null)for(var b=0;b<this.validationItems.length;b++){var c=this.getResult();if(c!=null)c=c.value;c=this.validationItems[b].validate(c);c.isValid||(this.isValid.set(false),a.push(c))}return a},_render:function(){return document.createTextNode(this.itemID.get())},_destroy:function(){}});dojo.provide("geocortex.forms.items.TextBoxFormItem");
dojo.declare("geocortex.forms.items.TextBoxFormItem",[geocortex.forms.items.LabelContainer,geocortex.forms.items.FormItem],{constructor:function(a){a?(a=geocortex.forms.getElementText(this._xmlDoc,"DefaultText"),this.defaultText=new Observable(a),this.text=new Observable(a),this.inputScope=new Observable(geocortex.forms.getElementText(this._xmlDoc,"InputScope")),this.textboxWidth=new Observable(parseInt(geocortex.forms.getElementText(this._xmlDoc,"TextboxWidth")))):(this.defaultText=new Observable(""),
this.text=new Observable(""),this.inputScope=new Observable("Default"),this.textboxWidth=new Observable(NaN),this.readOnly=new Observable(false))},defaultText:null,inputScope:null,textboxWidth:null,readOnly:null,getResult:function(){return new geocortex.forms.items.FormItemResult(this.argumentName.get(),this.text.get())},_render:function(){return geocortex.forms.renderFormItem(this)},_destroy:function(){this.inherited("_destroy",arguments)}});dojo.provide("geocortex.forms.items.DataItemsFormItem");
dojo.declare("geocortex.forms.items.DataItemsFormItem",geocortex.forms.items.FormItem,{constructor:function(a){this.dataItems=new geocortex.framework.events.ObservableCollection;if(a){var b=geocortex.forms.getElement(this._xmlDoc,"DataItems");if(b!=null){for(var c=[],a=0;a<b.childNodes.length;a++){var d=b.childNodes[a],d=geocortex.forms.DataItem(geocortex.forms.getElementText(d,"Display"),geocortex.forms.getElementText(d,"Value"),geocortex.forms.getElementText(d,"TypeName"));if(d!=null)d.index=a,
c.push(d)}this.dataItems.addItems(c)}}if(this.formDefinition&&(a=this.formDefinition.inputData)&&a.hasOwnProperty(this.itemID.get())){b=a[this.itemID.get()];for(a=0;a<b.length;++a)this.addDataItem(b[a])}},dataItems:null,addDataItem:function(a){if(a!=null&&a.isInstanceOf(geocortex.forms.DataItem)){var b=this.dataItems.getLength();a.index=b;this.dataItems.addItem(a)}},loadDataItems:function(a){if(a!=null)for(var b=0;b<a.length;b++)this.addDataItem(a[b])},clearDataItems:function(){this.dataItems.clear()},
getDataItem:function(a){return a!=null&&a===parseInt(a)&&this.dataItems!=null&&this.dataItems.getLength()>a?this.dataItems.getAt(a):null}});dojo.provide("geocortex.forms.items.QueryTaskFormItem");
dojo.declare("geocortex.forms.items.QueryTaskFormItem",[geocortex.forms.items.DataItemsFormItem,geocortex.forms.items.FormItem],{constructor:function(a){a?(this.queryDisplayOutputField=new Observable(geocortex.forms.getElementText(this._xmlDoc,"QueryDisplayOutputField")),this.queryValueOutputField=new Observable(geocortex.forms.getElementText(this._xmlDoc,"QueryValueOutputField")),this.queryServiceUrl=new Observable(geocortex.forms.getElementText(this._xmlDoc,"QueryServiceUrl")),this.queryWhereClause=
new Observable(geocortex.forms.getElementText(this._xmlDoc,"QueryWhereClause")),this.filterByInputGeometry=new Observable(geocortex.forms._parseBoolean(geocortex.forms.getElementText(this._xmlDoc,"FilterByInputGeometry"))),this.queryCascadingID=new Observable(geocortex.forms.getElementText(this._xmlDoc,"QueryCascadingID")),this.proxyUrl=new Observable(geocortex.forms.getElementText(this._xmlDoc,"ProxyUrl")),this.token=new Observable(geocortex.forms.getElementText(this._xmlDoc,"Token"))):(this.queryDisplayOutputField=
new Observable(null),this.queryValueOutputField=new Observable(null),this.queryServiceUrl=new Observable(null),this.queryWhereClause=new Observable(null),this.filterByInputGeometry=new Observable(false),this.queryCascadingID=new Observable(null),this.proxyUrl=new Observable(null),this.token=new Observable(null));this.cascadingEvent=new geocortex.framework.events.Event;this.isBusy=new Observable(false);this.formDefinition.map(this);a=this.queryCascadingID.get();a!=null&&a!=""&&this.formDefinition.addCascading(a,
this,function(a){a?this.performQuery(a):(this.clearDataItems(),this.triggerCascading(null))})},cascadingEvent:null,isBusy:null,queryDisplayOutputField:null,queryValueOutputField:null,queryServiceUrl:null,queryWhereClause:null,queryCascadingID:null,proxyUrl:null,token:null,filterByInputGeometry:null,_queryId:0,triggerCascading:function(a){this.cascadingEvent.publish(a)},prepareForResults:function(){},performQuery:function(a,b){var c=this;if(!(c.queryServiceUrl.get()==null||dojo.trim(c.queryServiceUrl.get())===
""||c.queryWhereClause.get()==null||dojo.trim(c.queryWhereClause.get())===""||c.queryDisplayOutputField.get()==null||dojo.trim(c.queryDisplayOutputField.get())===""))if(c.clearDataItems(),a!=null){var d=null;if(c.filterByInputGeometry.get()&&c.formDefinition!=null&&c.formDefinition.inputGeometry)d=c.formDefinition.inputGeometry;var e=c.queryServiceUrl.get();this.token&&this.token.get()&&(e+=(dojo.indexOf(e,"?")>=0?"&":"?")+"token="+this.token.get());queryTask=new esri.tasks.QueryTask(e);query=new esri.tasks.Query;
query.returnGeometry=false;query.geometry=d;query.outFields=[];query.where=c.queryWhereClause.get().format(a||"");query.outFields.push(c.queryDisplayOutputField.get());c.queryValueOutputField.get()!=null&&dojo.trim(c.queryValueOutputField.get())!=""&&c.queryValueOutputField.get()!=c.queryDisplayOutputField.get()&&query.outFields.push(c.queryValueOutputField.get());this.isBusy.set(true);++this._queryId;(function(){var a=c._queryId;queryTask.execute(query,function(d){var e=[];if(a==c._queryId){for(var h=
0;h<d.features.length;++h){var k=d.features[h].attributes,l=k[c.queryDisplayOutputField.get()],k=c.queryValueOutputField.get()!=null&&dojo.trim(c.queryValueOutputField.get())!=""&&c.queryValueOutputField.get()!=c.queryDisplayOutputField.get()?k[c.queryValueOutputField.get()]:l;e.push(new geocortex.forms.DataItem(l,k,null))}e.sort(function(a,b){return a.display<b.display?-1:1});c.prepareForResults();d={};l=[];for(h=k=0;h<e.length;++h){var m=e[h],o=m.display+"-"+m.value;if(!d.hasOwnProperty(o))m.index=
k++,d[o]=true,l.push(m)}c.dataItems.addItems(l);c.isBusy.set(false);e=null;c.dataItems.getLength()>0&&(e=c.dataItems.getAt(0));b===true&&c.triggerCascading(e==null?null:e.value,b)}})})()}}});dojo.provide("geocortex.forms.items.validation.ValidationItem");dojo.declare("geocortex.forms.items.validation.ValidationItem",null,{constructor:function(a){this._xmlDoc=a;this.message=geocortex.forms.getElementText(this._xmlDoc,"Message")},message:null});dojo.provide("geocortex.essentials");
geocortex.essentials=geocortex.essentials;geocortex.config={baseUrl:"http://localhost/",io:{errorHandler:function(a){dojo.publish("geocortex.Error",[a])},postLength:2E3,timeout:6E4},REST_version:"3.0",authenticationDialogId:null};geocortex.deferredResolve=function(a,b){a&&a.fired==-1&&a.resolve(b)};geocortex.deferredReject=function(a,b){a&&a.fired==-1&&a.reject(b)};
geocortex.encodeJson=function(a){var a=geocortex.encodeJsonInternal(a),b={},c;for(c in a)b[c]=dojo.isArray(a[c])||typeof a[c]==="object"?dojo.toJson(a[c]):a[c];return b};
geocortex.encodeJsonInternal=function(a){var b,c,d={};typeof a.toJson==="function"&&(d=a.toJson());for(var e in a)if(e!="declaredClass"&&geocortex.isUndefined(d[e])&&(b=a[e],c=typeof b,b!==null&&b!==void 0&&c!=="function"))if(dojo.isArray(b)){d[e]=[];c=0;for(var f=b.length;c<f;c++)d[e][c]=geocortex.encodeJsonInternal(b[c])}else c==="object"?typeof b.toJson==="function"&&(d[e]=b.toJson()):d[e]=b;return d};
geocortex.request=function(a,b){b||(b={});if(!b.gcx)b.gcx={};a.preventCache=geocortex.isUndefined(b.gcx.preventCache)?true:b.gcx.preventCache?true:false;a.content=geocortex.encodeJson(dojo.mixin({v:geocortex.config.REST_version},a.content));a.timeout=a.timeout||geocortex.config.io.timeout;a.handleAs=a.handleAs||"json";var c=geocortex.requiresProxy(a),d=geocortex.hasProxy();if(c&&!d)return c=Error("Cross-domain or large requests require a proxy."),dojo.isFunction(a.error)&&a.error(c),d=new dojo.Deferred,
d.errback(c),d;delete a.gcx;b.useProxy=c;return(new geocortex.essentials.RestHelperHTTPService(a,b)).send()};geocortex.hasProxy=function(){var a=false;try{a=esri._getProxyUrl()}catch(b){}return a};
geocortex.requiresProxy=function(a){var b=false;try{var c=a.url.length;a.content&&(c+=dojo.objectToQuery(a.content).length);var d=new dojo._Url(a.url),e=window.location;if(!d.scheme&&!d.host&&!d.port)return false;var f=e.protocol+"//"+e.hostname+(e.port?":"+e.port:"")!==d.scheme+"://"+d.host+(d.port?":"+d.port:""),b=c>geocortex.config.io.postLength&&f}catch(g){}return b};geocortex.urlToQueryObject=function(a){var b=a.indexOf("?");return b===-1?null:dojo.queryToObject(a.substring(b+1))};
geocortex._getExtensions=function(a){var b=[];if(a)for(var c in a)b[c]=new geocortex.essentials.Extension(a[c].className,a[c].instance);return b};geocortex._getProperties=function(a){var b=[];if(a)for(var c in a)b[a[c].name]=a[c].value;return b};geocortex.isUndefined=function(a){return typeof a==="undefined"};geocortex.isAnyUndefined=function(a){if(dojo.isArray(a)){for(var b in a)if(geocortex.isUndefined(a[b]))return true;return false}else return geocortex.isUndefined(a)};dojo.provide("geocortex.forms");
geocortex.forms=geocortex.forms;geocortex.forms.renderFormItem=function(){return null};geocortex.forms.items=geocortex.forms.items;geocortex.forms.items.validation=geocortex.forms.items.validation;
geocortex.forms.getElement=function(a,b){var c=null,c=a.getElementsByTagName(b);if(c.length>=1)for(var d=0;d<c.length;d++){if(c[d].parentNode===a)return c[d]}else if(a.childNodes.length>0&&(c=a.childNodes[0].prefix,c!=""&&(c=a.getElementsByTagName(c+":"+b),c.length>=1)))for(d=0;d<c.length;d++)if(c[d].parentNode===a)return c[d];return null};geocortex.forms.getElementText=function(a,b){var c=geocortex.forms.getElement(a,b);return c?dojox.xml.parser.textContent(c):null};
geocortex.forms.getAttributeValue=function(a,b){if(a!=null)for(var c=0;c<a.attributes.length;c++)if(a.attributes[c].name==b)return a.attributes[c].value;return null};
geocortex.forms.items._processFormItem=function(a,b){var c=null;switch(geocortex.forms.items._getType(a)){case "AutoCompleteBoxFormItem":c=new geocortex.forms.items.AutoCompleteBoxFormItem(a,b);break;case "CheckBoxFormItem":c=new geocortex.forms.items.CheckBoxFormItem(a,b);break;case "ContainerFormItem":c=new geocortex.forms.items.ContainerFormItem(a,b);break;case "ComboBoxFormItem":c=new geocortex.forms.items.ComboBoxFormItem(a,b);break;case "DatePickerFormItem":c=new geocortex.forms.items.DatePickerFormItem(a,
b);break;case "GroupBoxFormItem":c=new geocortex.forms.items.GroupBoxFormItem(a,b);break;case "HyperlinkFormItem":c=new geocortex.forms.items.HyperlinkFormItem(a,b);break;case "ImageFormItem":c=new geocortex.forms.items.ImageFormItem(a,b);break;case "ListBoxFormItem":c=new geocortex.forms.items.ListBoxFormItem(a,b);break;case "RadioButtonFormItem":c=new geocortex.forms.items.RadioButtonFormItem(a,b);break;case "TextAreaFormItem":c=new geocortex.forms.items.TextAreaFormItem(a,b);break;case "TextBoxFormItem":c=
new geocortex.forms.items.TextBoxFormItem(a,b);break;case "TimePickerFormItem":c=new geocortex.forms.items.TimePickerFormItem(a,b)}c.isInstanceOf(geocortex.forms.items.DataItemsFormItem)&&b!=null&&b.inputData!=null&&b.inputData.hasOwnProperty(c.itemID)&&c.loadDataItems(b.inputData.item(c.itemID));return c};
geocortex.forms.items._processValidationItem=function(a){var b=null;switch(geocortex.forms.items._getType(a)){case "NumericRangeValidationItem":b=new geocortex.forms.items.validation.NumericRangeValidationItem(a);break;case "RequiredValidationItem":b=new geocortex.forms.items.validation.RequiredValidationItem(a);break;case "RegexValidationItem":b=new geocortex.forms.items.validation.RegexValidationItem(a)}return b};
geocortex.forms.items._getType=function(a){var b="";if(a!=null&&a.attributes!=null)for(var c=0;c<a.attributes.length;c++)if(String(a.attributes[c].nodeName).indexOf("type")>=0){a=a.attributes[c].nodeValue;b=a.indexOf(":");b>=0&&b+1<a.length&&(a=a.substr(b+1));b=a;break}return b};geocortex.forms._parseBoolean=function(a){if(a!=null)switch(a.toLowerCase()){case "true":case "yes":case "1":return true;case "false":case "no":case "0":case null:break;default:return Boolean(string)}return false};dojo.provide("geocortex.workflow");
geocortex.workflow=geocortex.workflow;geocortex.workflow.WorkflowControllerProxy=geocortex.workflow.WorkflowControllerProxy;dojo.provide("geocortex.essentials.AuthenticationControlBlock");dojo.declare("geocortex.essentials.AuthenticationControlBlock",null,{constructor:function(){this.pendingCalls=[]},messageFromServer:null,password:null,pendingCalls:null,tokenService:null,tokenRootUri:null,targetRootUri:null,token:null,username:null});dojo.provide("geocortex.essentials.AuthenticationControlBlockStore");
dojo.declare("geocortex.essentials.AuthenticationControlBlockStore",null,{constructor:function(){this._authenticationControlBlocks=[]},_authenticationControlBlocks:null,add:function(a){this.find(a.tokenRootUri)===null&&this._authenticationControlBlocks.push(a)},find:function(a){for(var b=0;b<this._authenticationControlBlocks.length;b++){var c=this._authenticationControlBlocks[b],d=c.tokenRootUri,e=c.targetRootUri;if(a.toLowerCase().indexOf(d.toLowerCase())===0||a.toLowerCase().indexOf(e.toLowerCase())===
0)return c}return null},removeAt:function(a){this._authenticationControlBlocks.splice(a,1)}});dojo.provide("geocortex.essentials.DataLink");dojo.provide("geocortex.essentials.DataLinkParameter");
dojo.declare("geocortex.essentials.DataLink",geocortex.essentials.AsyncInitializable,{constructor:function(){this.parameters=[];this.properties=[];this.extensions=[];this._onDataLinkingComplete=function(){};this._onDataLinkingError=function(){}},displayName:null,extensions:null,id:null,visible:null,isOneToOne:false,layer:null,parameters:null,properties:null,_dataLinking:false,isDataLinking:function(){return this._dataLinking},performDataLinking:function(a,b,c){if(this.isDataLinking())geocortex.essentials.RestHelper.executeCallbacks(this,
b,c,Error(400,"Currently performing data linking"));else if(!a||!this.parameters||this.parameters.length===0)geocortex.essentials.RestHelper.executeCallbacks(this,b,c,Error(400,"Null feature set or null parameters"));else{try{this._dataLinking=true;this._onDataLinkingComplete=dojo.hitch(this,b);this._onDataLinkingError=dojo.hitch(this,c);var d=this.url+"/link",e={},f;for(f in this.parameters){var g=this.parameters[f];if(!a.fieldAliases[g.featureField]){geocortex.essentials.RestHelper.executeCallbacks(this,
b,c,Error(400,"Missing feature field"));return}var j="",h;for(h in a.features)j+=(j.length===0?"":",")+this._prepParamValue(a.features[h].attributes[g.featureField]);j.length>0&&(e[g.id]=j)}var k=geocortex.encodeJson(dojo.mixin({f:"json"},e))}catch(l){this._dataLinkRestError(l);return}geocortex.request({url:d,content:k,load:dojo.hitch(this,this._dataLinkingRestComplete),error:dojo.hitch(this,this._dataLinkRestError),callbackParamName:"CallBack"})}},_onDataLinkingComplete:null,_onDataLinkingError:null,
_configureObject:function(a,b){if(geocortex.isAnyUndefined([a,a.displayName,a.parameters]))throw Error("Incorrect data link object returned from initialization");var c=geocortex.isUndefined;this.displayName=a.displayName;this.id=a.id;this.visible=c(a.visible)?true:a.visible;this.isOneToOne=!!a.isOneToOne;this.parameters=a.parameters;if(b)this.isInitialized=true;this.properties=geocortex._getProperties(a.properties);this.extensions=geocortex._getExtensions(a.extensions)},_dataLinkingRestComplete:function(a){this._dataLinking=
false;var b=null;if(a){if(a.error)b=a.error}else b=Error("Unexpected Error");geocortex.essentials.RestHelper.executeCallbacks(this,this._onDataLinkingComplete,this._onDataLinkingError,b,a)},_dataLinkRestError:function(a){this._dataLinking=false;geocortex.essentials.RestHelper.executeCallbacks(this,this._onDataLinkingComplete,this._onDataLinkingError,a)},_prepParamValue:function(a){var b="";a&&(b=a.replace(/,/g,"\\,"));return escape(b)}});
dojo.declare("geocortex.essentials.DataLinkParameter",null,{constructor:function(){},featureField:null,id:null,name:null,type:null});dojo.provide("geocortex.essentials.DistanceUnit");dojo.declare("geocortex.essentials.DistanceUnit",null,{constructor:function(a,b){this.name=a;this.type=b},name:null,type:null});dojo.provide("geocortex.essentials.DistanceUnitType");dojo.declare("geocortex.essentials.DistanceUnitType",null,{});
dojo.mixin(geocortex.essentials.DistanceUnitType,{OTHER:"Other",INCHES:"Inches",FEET:"Feet",US_SURVEY_FEET:"USSurveyFeet",YARDS:"Yards",MILES:"Miles",NAUTICAL_MILES:"NauticalMiles",MILLIMETERS:"Millimeters",CENTIMETERS:"Centimeters",DECIMETERS:"Decimeters",METERS:"Meters",KILOMETERS:"Kilometers",DEGREES:"Degrees",RADIANS:"Radians",GRADS:"Grads"});dojo.provide("geocortex.essentials.Extension");
dojo.declare("geocortex.essentials.Extension",null,{constructor:function(a,b){this.className=a;this.instance=b},className:null,instance:null});dojo.provide("geocortex.essentials.FeatureHyperlink");
dojo.declare("geocortex.essentials.FeatureHyperlink",null,{constructor:function(a,b){this.encodeUriReplacementValues=a.encodeUriReplacementValues;this.target=a.target;this.text=a.text;this.toolTip=a.toolTip;this.uri=a.uri;var c=null;if(b&&b.mapService&&b.mapService.essentialsMap)c=b.mapService.essentialsMap.site;this.iconUri=geocortex.essentials.RestHelper.processClientSideTokens(c,a.iconUri);this.layer=b},encodeUriReplacementValues:null,iconUri:null,layer:null,target:null,text:null,toolTip:null,
uri:null});dojo.provide("geocortex.essentials.FeatureLayerService");
dojo.declare("geocortex.essentials.FeatureLayerService",geocortex.essentials.MapService,{constructor:function(a){this.objectIds=[];this.outFields=[];this.color=[255,0,0];this.selectionColor=[0,255,255];this._onlineRelatedFeatureLayer={};this.serviceUrl=a;this.queryMode=esri.layers.FeatureLayer.MODE_ONDEMAND},color:null,disableClientCaching:false,onDemandCacheSize:1E3,outFields:null,queryMode:0,selectionColor:null,where:null,canUpate:null,canAdd:null,canDelete:null,canEdit:null,canAddAttachments:null,
getEmptyFeatureCollection:function(){return dojo.fromJson(this._initialFeatureCollection)},restoreFeatureLayer:function(){if(!this._serviceLayer._mode)switch(this._serviceLayer.mode){case esri.layers.FeatureLayer.MODE_SNAPSHOT:this._serviceLayer._mode=new esri.layers._SnapshotMode(this._serviceLayer);break;case esri.layers.FeatureLayer.MODE_ONDEMAND:this._serviceLayer._mode=new esri.layers._OnDemandMode(this._serviceLayer);break;case esri.layers.FeatureLayer.MODE_SELECTION:this._serviceLayer._mode=
new esri.layers._SelectionMode(this._serviceLayer)}this.replaceFeatureLayer(this._serviceLayer);this.serviceLayer.resume()},replaceFeatureLayer:function(a,b,c,d){var e=this.serviceLayer;if(!a)throw Error("featureLayer cannot be null in order to replace the feature layer.");var f=this._getEsriMap();if(!f)throw Error("Unable to get access to the Esri map object to perform the Feature Layer replace.");if(!this.serviceLayer)throw Error("ServiceLayer not present. Can't replace the the FeatureLayer");if(b)a.visible=
e.visible;if(c)a.opacity=e.opacity;d&&a.setRenderer(e.renderer);b=dojo.indexOf(f.graphicsLayerIds,e.id);this.serviceLayer=a;e.suspend();f.removeLayer(e);f.addLayer(a,b);e.url||this._cleanUpLayer(e)},_cleanUpLayer:function(a){a.clear();if(a._essentialsMetadata)for(var a=a._essentialsMetadata.eventHandlers,b=0,b=0;b<a.length;b++)dojo.disconnect(a[b])},queryCount:function(a,b,c){this.isServiceLayerLoaded&&this.serviceLayer&&this.serviceLayer.queryCount(a,function(a){b&&b(a)},function(a){c&&c(a)})},queryFeatures:function(a,
b,c){if(this.isServiceLayerLoaded&&this.serviceLayer)return this.serviceLayer.queryFeatures(a,b,c);else c&&c(Error("Esri layer has not finished loading"))},queryIds:function(a,b,c){if(this.isServiceLayerLoaded&&this.serviceLayer)return this.serviceLayer.queryIds(a,b,c);else c&&c(Error("Esri layer has not finished loading"))},queryRelatedFeatures:function(a,b,c){if(this.isServiceLayerLoaded&&this.serviceLayer)return this.serviceLayer.queryRelatedFeatures(a,b,c);else c&&c(Error("Esri layer has not finished loading"))},
_colorSet:false,_initialFeatureCollection:null,_serviceLayer:null,_onlineRelatedFeatureLayer:null,_getEsriMap:function(){var a=null;this.essentialsMap!==null&&this.essentialsMap.site!==null&&(a=this.essentialsMap.site.getMap());return a},_configureObject:function(a,b){if(geocortex.isAnyUndefined([a,a.outFields,a.queryMode,a.where]))throw Error("Incorrect map service object returned from initialization");var c=geocortex.isUndefined;this.disableClientCaching=!!a.disableClientCaching;this.autoSave=a.AutoSave;
this.onDemandCacheSize=c(a.onDemandCacheSize)||a.onDemandCacheSize===null?this.onDemandCacheSize:a.onDemandCacheSize;if(!a.outFields)a.outFields="*";this.outFields=a.outFields;this.where=a.where;if(c(a.queryMode))this.queryMode=esri.layers.FeatureLayer.MODE_ONDEMAND;else switch(a.queryMode){case "Selection":case "SelectionOnly":this.queryMode=esri.layers.FeatureLayer.MODE_SELECTION;break;case "Snapshot":this.queryMode=esri.layers.FeatureLayer.MODE_SNAPSHOT;break;default:this.queryMode=esri.layers.FeatureLayer.MODE_ONDEMAND}if(a.selectionColor)this.selectionColor=
a.selectionColor;if(a.color)this.color=a.color,this._colorSet=true,this.color.length>3&&(this.color[3]/=255);this.inherited(arguments)},_createServiceLayer:function(){this.inherited(arguments);var a=this.serviceUrl;this.serviceToken!==null&&(a=a+"?token="+this.serviceToken);var b=function(){};if(this.essentialsMap!==null&&this.essentialsMap.site!==null&&dojo.isFunction(this.essentialsMap.site.onLayerLoadError))b=this.essentialsMap.site.onLayerLoadError;var c={};c.id=this.id;c.opacity=this.configuredOpacity;
c.visible=this.configuredVisible;if(this.outFields!==null&&this.outFields.length>0)c.outFields=this.outFields.split(",");if(this.queryMode!==null)c.mode=this.queryMode;this._serviceLayer=this.serviceLayer=new esri.layers.FeatureLayer(a,c);this.where&&this.serviceLayer.setDefinitionExpression(this.where);dojo.connect(this.serviceLayer,"onError",b);dojo.connect(this.serviceLayer,"onLoad",dojo.hitch(this,function(a){if(this.serviceLayer.version<10||this._colorSet){var b=null;if(this.serviceLayer.geometryType==
"esriGeometryPoint"){var b=new esri.symbol.SimpleMarkerSymbol(esri.symbol.SimpleMarkerSymbol.STYLE_CIRCLE,15,null,new dojo.Color(this.selectionColor)),c=new esri.symbol.SimpleMarkerSymbol(esri.symbol.SimpleMarkerSymbol.STYLE_CIRCLE,15,null,new dojo.Color(this.color));this.serviceLayer.setRenderer(new esri.renderer.SimpleRenderer(c))}else this.serviceLayer.geometryType=="esriGeometryPolyline"?(b=new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID,new dojo.Color(this.selectionColor),
1),c=new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID,new dojo.Color(this.color),1),this.serviceLayer.setRenderer(new esri.renderer.SimpleRenderer(c))):this.serviceLayer.geometryType=="esriGeometryPolygon"&&(b=new esri.symbol.SimpleFillSymbol(esri.symbol.SimpleFillSymbol.STYLE_SOLID,new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID,new dojo.Color([0,0,0]),1),new dojo.Color(this.selectionColor)),c=new esri.symbol.SimpleFillSymbol(esri.symbol.SimpleFillSymbol.STYLE_SOLID,
new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID,new dojo.Color([0,0,0]),1),new dojo.Color(this.color)),this.serviceLayer.setRenderer(new esri.renderer.SimpleRenderer(c)));this.serviceLayer.setSelectionSymbol(b)}b=this.serviceLayer.getEditCapabilities();this.canUpdate=b.canUpdate;this.canAdd=b.canCreate;this.canDelete=b.canDelete;this.canEdit=this.serviceLayer.isEditable();this.canAddAttachments=false;if(this.serviceLayer.capabilities)this.canAddAttachments=this.serviceLayer.capabilities.toLowerCase().indexOf("uploads")>=
0;this._initialFeatureCollection=dojo.toJson(this.serviceLayer.toJson());this._handleServiceLayerLoaded(a)}))},hasOriginRelationships:function(){if(this.serviceLayer&&this.serviceLayer.version>=10.1&&this.serviceLayer.relationships&&this.serviceLayer.relationships.length>0){var a;for(a=0;a<this.serviceLayer.relationships.length;a++)if(this.serviceLayer.relationships[a].role==="esriRelRoleOrigin")return true}return false},getRelatedFeatureLayer:function(a,b,c){var d=new dojo.Deferred;if(this.serviceLayer.version<
10.1)return a=Error("getRelatedFeatureLayer is only available for feature layer from ArcGIS 10.1 or greater."),geocortex.deferredReject(d,a),typeof c=="function"&&c(a),d;var e=this._getEsriRelation(a);if(!e)return a=Error("Relation not found: "+a),geocortex.deferredReject(d,a),typeof c=="function"&&c(a),d;a=this.serviceUrl.substring(0,this.serviceUrl.lastIndexOf("/")+1)+e.relatedTableId;a=new esri.layers.FeatureLayer(a,{mode:esri.layers.FeatureLayer.MODE_SELECTION,outFields:["*"]});dojo.connect(a,
"onLoad",dojo.hitch(this,function(a){geocortex.deferredResolve(d,a);typeof b=="function"&&b(a)}));dojo.connect(a,"onError",dojo.hitch(this,function(a){geocortex.deferredReject(d,a);typeof c=="function"&&c(a)}));return d},_getEsriRelation:function(a){var b;if(this.serviceLayer.relationships)for(b=0;b<this.serviceLayer.relationships.length;b++)if(this.serviceLayer.relationships[b].id==parseInt(a))return this.serviceLayer.relationships[b];return null},_getRelation:function(a){return this.layers&&this.layers.length>
0?this.layers[0]._getRelation(a):null}});dojo.provide("geocortex.essentials.Field");dojo.declare("geocortex.essentials.Field",null,{constructor:function(a){this.alias=a.alias;this.dataType=a.dataType;this.displayName=a.displayName;this.focusField=!!a.focusField;this.hyperlinkLabel=a.hyperlinkLabel;this.name=a.name;this.searchable=!!a.searchable;this.visible=!!a.visible},alias:null,dataType:null,displayName:null,focusField:false,hyperlinkLabel:null,name:null,searchable:false,visible:false});dojo.provide("geocortex.essentials.GeocodingEndpoint");
dojo.declare("geocortex.essentials.GeocodingEndpoint",geocortex.essentials.AsyncInitializable,{constructor:function(){this.properties=[];this.extensions=[]},bingProperties:null,displayName:null,extensions:null,id:null,properties:null,geocoderType:null,geocoderUrl:null,site:null,_configureObject:function(a){if(!a.hasOwnProperty("id")||!a.hasOwnProperty("displayName")||!a.hasOwnProperty("serviceType")||!a.hasOwnProperty("connectionString"))throw Error("Incorrect geocoding endpoint object returned from initialization");
this.id=a.id;this.displayName=a.displayName;this.geocoderType=a.serviceType;this._processConnectionString(a.connectionString);this.properties=geocortex._getProperties(a.properties);this.extensions=geocortex._getExtensions(a.extensions)},_processConnectionString:function(a){var b=geocortex.essentials.ServiceHelper.extractConnectionStringValue;if(this.geocoderType===geocortex.essentials.GeocodingEndpointType.BING_GEOCODER){this.bingProperties={};var c=b(a,"key");if(c&&c.length>0)this.bingProperties.bingMapsKey=
c;if((c=b(a,"culture"))&&c.length>0)this.bingProperties.culture=c}else if(this.geocoderType===geocortex.essentials.GeocodingEndpointType.ARCGIS_GEOCODER&&(a=b(a,"url"))&&a.length>0)this.geocoderUrl=a}});dojo.provide("geocortex.essentials.GeocodingEndpointType");dojo.declare("geocortex.essentials.GeocodingEndpointType",null,{});dojo.mixin(geocortex.essentials.GeocodingEndpointType,{ARCGIS_GEOCODER:"ArcGisGeocoder",BING_GEOCODER:"BingGeocoder"});dojo.provide("geocortex.essentials.GeometryEndpoint");
dojo.declare("geocortex.essentials.GeometryEndpoint",geocortex.essentials.AsyncInitializable,{constructor:function(){this.properties=[];this.extensions=[]},displayName:null,extensions:null,id:null,properties:null,geometryServiceType:null,geometryServiceUrl:null,site:null,_configureObject:function(a){if(geocortex.isUndefined(a.id)||geocortex.isUndefined(a.displayName)||geocortex.isUndefined(a.connectionString))throw Error("Incorrect geometry endpoint object returned from initialization");this.id=a.id;
this.displayName=a.displayName;this.geometryServiceType=a.geoprocessorType;this._processConnectionString(a.connectionString);this.properties=geocortex._getProperties(a.properties);this.extensions=geocortex._getExtensions(a.extensions)},_processConnectionString:function(a){var b=geocortex.essentials.ServiceHelper.extractConnectionStringValue;if(this.geometryServiceType===geocortex.essentials.GeometryEndpointType.ARCGIS_GEOMETRY&&(a=b(a,"url"))&&a.length>0)this.geometryUrl=a}});dojo.provide("geocortex.essentials.GeometryEndpointType");
dojo.declare("geocortex.essentials.GeometryEndpointType",null,{});dojo.mixin(geocortex.essentials.GeometryEndpointType,{ARCGIS_GEOMETRY:"ArcGisGeometry"});dojo.provide("geocortex.essentials.GeometryUtilities");dojo.declare("geocortex.essentials.GeometryUtilities",null,{});
dojo.mixin(geocortex.essentials.GeometryUtilities,{spatialRefsAreEqual:function(a,b,c){return a==null||b==null?c:a.wkid!==b.wkid?false:a.wkid!==0?true:a.wkt.toLowerCase()==b.wkt.toLowerCase()},envelopesAreEqual:function(a,b){return a==null||b==null?a==null&&b==null:this.spatialRefsAreEqual(a.spatialReference,b.spatialReference)&&a.xmin==b.xmin&&a.ymin==b.ymin&&a.xmax==b.xmax&&a.ymax==b.ymax},getExtent:function(a){for(var b=new esri.geometry.Extent(Number.MAX_VALUE,Number.MAX_VALUE,Number.MIN_VALUE,
Number.MIN_VALUE),c=0;c<a.length;++c){var d=a[c].getExtent();b.xmin=Math.min(d.xmin,b.xmin);b.ymin=Math.min(d.ymin,b.ymin);b.xmax=Math.min(d.xmax,b.xmax);b.xmax=Math.min(d.ymax,b.ymax)}return b},envelopeToPolygon:function(a){var b=new esri.geometry.Polygon(a.spatialReference);b.addRing([[a.xmin,a.ymin],[a.xmin,a.ymax],[a.xmax,a.ymax],[a.xmax,a.ymin],[a.xmin,a.ymin]]);return b},isValidGeometry:function(a){if(typeof a.Rings==="undefined")return true;if(a.rings.length==0||a.rings.length<3)return true;
if(this.isConvex(a)==true){for(var b=a.rings[0][0],c=a.rings[0][1],a=a.rings[0].slice(2,a.rings[0].length),d=0;d<a.length;++d){if(this.crossProduct(b,a[d],c)>0)return true;b=c;c=n}return false}else{for(c=b=0;c<a.rings.count;++c)for(var e=a.rings[c],f=0,d=0;d<e.length;++d)f=(d+1)%e.length,b+=e[d].x*-e[f].y,b-=-e[d].y*e[f].x;return b>0}},isConvex:function(a){for(var b=a.rings[0][0],c=a.rings[0][1],d=null,a=a.rings[0].slice(2,a.rings[0].length),e=0;e<a.length;++e){b=this.crossProduct(a[e],b,c);if(b>
0&&d===true||b<0&&d===false)return false;d=b>0;b=c;c=p}return true},pointInEnvelope:function(a,b){if(!this.spatialRefsAreEqual(a.spatialReference,b.spatialReference,true))throw Error("Mismatched spatial references.");return a.x<b.xmin||a.x>b.xmax?false:a.y<b.ymin||a.y>b.ymax?false:true},clipEnvelope:function(a,b){if(!this.spatialRefsAreEqual(point.spatialReference,c.spatialReference,true))throw Error("Mismatched spatial references.");var c=new esri.geometry.Extent(a.xmin,a.ymin,a.xmax,a.ymax);c.xmin=
a.xmin<b.xmin?b.xmin:a.xmin>b.xmax?b.xmax:a.xmin;c.xmin=a.ymin<b.ymin?b.ymin:a.ymin>b.ymax?b.ymax:a.ymin;c.xmin=a.xmax<b.xmin?b.xmin:a.xmax>b.xmax?b.xmax:a.xmax;c.xmin=a.ymax<b.ymin?b.ymin:a.ymax>b.ymax?b.ymax:a.ymax;return c},scaleEnvelope:function(a,b,c){return new esri.geometry.Extent(a.xmin*b,a.ymin*c,a.xmax*b,a.ymax*c,a.spatialReference)},scaleEnvelopeWithoutTranslation:function(a,b){if(a==null)return null;var c=a.getCenter();return new esri.geometry.Extent(c.x-a.getWidth()*(b/2),c.y-a.getHeight()*
(b/2),c.x+a.getWidth()*(b/2),c.y+a.getHeight()*(b/2),a.spatialReference)},computeDistance:function(a,b){var c=b.x-a.x,d=b.y-a.y;return Math.sqrt(c*c+d*d)},translateEnvelope:function(a,b,c){return new esri.geometry.Extent(a.xmin+b,a.ymin+c,a.xmax+b,a.ymax+c,a.spatialReference)},length:function(a){return Math.sqrt(a.x*a.x+a.y*a.y)},normalize:function(a){var b=this.length(a);return new esri.geometry.Point(a.x/b,a.y/b)},angle:function(a,b){if(!this.spatialRefsAreEqual(a.spatialReference,b.spatialReference,
true))throw Error("Mismatched spatial references");return Math.acos(this.dotProduct(a,b)/Math.sqrt(this.dotProduct(a,a)*this.dotProduct(b,b)))},crossProduct:function(a,b,c){if(!this.spatialRefsAreEqual(a.spatialReference,b.spatialReference,true))throw Error("Mismatched spatial references");c==null&&(c=new esri.geometry.Point(0,0));return(a.x-c.x)*(b.y-c.y)-(a.y-c.y)*(b.x-c.x)},dotProduct:function(a,b){if(!this.spatialRefsAreEqual(a.spatialReference,b.spatialReference,true))throw Error("Mismatched spatial references");
return a.x*b.x+a.y*b.y},polygonMidpoint:function(a){if(a.length==0)throw Error("Expected at least one point in polygonMidPoint.");for(var b=0,c=0,d=0;d<a.length;++d){var e=a[d];b+=e.x;c+=e.y}b/=e.count;c/=e.count;return new esri.geometry.Point(b,c,a[0].spatialReference)}});dojo.provide("geocortex.essentials.GeoprocessingEndpoint");
dojo.declare("geocortex.essentials.GeoprocessingEndpoint",geocortex.essentials.AsyncInitializable,{constructor:function(){this.properties=[];this.extensions=[]},displayName:null,extensions:null,id:null,properties:null,geoprocessorType:null,geoprocessorUrl:null,site:null,_configureObject:function(a){if(geocortex.isUndefined(a.id)||geocortex.isUndefined(a.displayName)||geocortex.isUndefined(a.connectionString))throw Error("Incorrect geoprocessing endpoint object returned from initialization");this.id=
a.id;this.displayName=a.displayName;this.geoprocessorType=a.geoprocessorType;this._processConnectionString(a.connectionString);this.properties=geocortex._getProperties(a.properties);this.extensions=geocortex._getExtensions(a.extensions)},_processConnectionString:function(a){var b=geocortex.essentials.ServiceHelper.extractConnectionStringValue;if(this.geoprocessorType===geocortex.essentials.GeoprocessingEndpointType.ARCGIS_GEOPROCESSOR&&(a=b(a,"url"))&&a.length>0)this.geoprocessorUrl=a}});dojo.provide("geocortex.essentials.GeoprocessingEndpointType");
dojo.declare("geocortex.essentials.GeoprocessingEndpointType",null,{});dojo.mixin(geocortex.essentials.GeoprocessingEndpointType,{ARCGIS_GEOPROCESSOR:"ArcGisGeoprocessor"});dojo.provide("geocortex.essentials.GeoRssLayerService");
dojo.declare("geocortex.essentials.GeoRssLayerService",geocortex.essentials.MapService,{constructor:function(){this.wgs84Sref=new esri.SpatialReference({wkid:4326});this.webMercatorSref=new esri.SpatialReference({wkid:102100})},color:null,feedUrl:null,feedImageUri:null,updateInterval:null,pictureSymbol:null,markerSymbol:null,geoRssLayer:null,getAttribute:geocortex.essentials.xmlUtils.getAttribute,getValue:geocortex.essentials.xmlUtils.getValue,getNodes:geocortex.essentials.xmlUtils.getNodes,getAllNodes:geocortex.essentials.xmlUtils.getAllNodes,
mapSpatialReference:null,webMercatorSref:null,wgs84Sref:null,geometryService:null,_colorSet:false,_configureObject:function(a,b){if(geocortex.isAnyUndefined([a]))throw Error("Incorrect map service object returned from initialization");this.feedImageUri=a.feedImageUri;this.updateInterval=a.updateInterval;this.geoRssLayer=new esri.layers.GraphicsLayer({opacity:a.opacity,id:a.id,visible:a.visible});if(a.color)this.color=a.color,this._colorSet=true,this.color.length>3&&(this.color[3]/=255);this.inherited(arguments)},
_createServiceLayer:function(){var a=null;if(this.essentialsMap)a=this.essentialsMap.site;this.feedImageUri?(this.feedImageUri=geocortex.essentials.RestHelper.processClientSideTokens(a,this.feedImageUri),this.pictureSymbol=new esri.symbol.PictureMarkerSymbol(this.feedImageUri,25,25)):this.markerSymbol=new esri.symbol.SimpleMarkerSymbol(esri.symbol.SimpleMarkerSymbol.STYLE_CIRCLE,15,esri.symbol.SimpleLineSymbol(),new dojo.Color(this.color));this.mapSpatialReference=this.essentialsMap.initialExtent.spatialReference;
this.feedUrl=this.serviceUrl;this._loadFeed();if(this.updateInterval&&!isNaN(this.updateInterval)){var b=this,c=setInterval(function(){b._loadFeed()},this.updateInterval*1E3);dojo.connect(window,"onunload",function(){clearInterval(c)})}this.serviceLayer=this.geoRssLayer},_loadFeed:function(){if(this.essentialsMap&&this.essentialsMap.site){var a=this.essentialsMap.site.getMap();this.serviceLayer&&this.serviceLayer.id&&a.removeLayer(this.serviceLayer)}esri.config.defaults.io.proxyUrl&&geocortex.request({url:this.serviceUrl,
content:{},handleAs:"xml",load:dojo.hitch(this,this._handleFeed),error:function(a){alert(a.message)}})},_handleFeed:function(a){var b=this._getFeedRoot(a),c=b.nodeName,d=this.getAttribute(b,"xmlns:georss"),d=d||this.getAttribute(b,"xmlns:geo"),e=this.getAttribute(b,"xmlns:gml"),f=this.getAttribute(b,"xml:base"),g=[],b=null;c==="feed"?b=this.getNodes("feed","entry",a):c==="rdf"?b=this.getNodes("rdf","item",a):c==="rss"&&(b=this.getNodes("channel","item",a));if(b){var j=this.pictureSymbol||this.markerSymbol;
b.forEach(dojo.hitch(this,function(a){var b,l,m,o;this.getAllNodes(a).forEach(dojo.hitch(this,function(a){if(a.nodeName==="title")b=a.firstChild.nodeValue;if(c==="feed"){if(a.nodeName==="summary")m=a.firstChild.nodeValue}else if(a.nodeName==="description")m=a.firstChild.nodeValue;a.nodeName==="link"&&(l=c==="feed"?(f||"")+this.getAttribute(a,"href"):(f||"")+a.firstChild.nodeValue);e==="http://www.opengis.net/gml"?a.nodeName==="georss:where"&&(o=this._getGMLGRSSPoint(a)):d==="http://www.georss.org/georss"?
a.nodeName==="georss:point"&&(o=this._getSimpleGRSSPoint(a)):d==="http://www.w3.org/2003/01/geo/wgs84_pos#"&&a.nodeName==="geo:lat"&&(o=this._getW3CGRSSPoint(a))}));a=new esri.Graphic(o,j,{title:b,content:m,link:l});g.push(a)}));this.mapSpatialReference&&this._projectShapes(g,this.mapSpatialReference)}},_projectShapes:function(a,b){try{if(a&&b){for(var c=false,d=this.webMercatorSref.wkid,e=this.wgs84Sref.wkid,f=0;f<a.length;f++){var g=a[f],j=null;if(g.geometry&&g.geometry.spatialReference.wkid!==
b.wkid)b.wkid===d&&g.geometry.spatialReference.wkid===e?j=esri.geometry.geographicToWebMercator(g.geometry):b.wkid===e&&g.geometry.spatialReference.wkid===d?j=esri.geometry.webMercatorToGeographic(g.geometry):(j=esri.geometry.geographicToWebMercator(g.geometry),c=true),g.geometry=j}if(c){var h=[];this.geometryServiceUrl=this.geometryServiceUrl||"http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/Geometry/GeometryServer";this.geometryService=new esri.tasks.GeometryService(this.geometryServiceUrl);
dojo.forEach(a,function(a){h.push(a.geometry)});this.geometryService.project(h,b,dojo.hitch(this,function(b){for(var c=0;c<b.length;c++)a[c].geometry=b[c];this._publishLayer(a)}),this._projectionError);return}}this._publishLayer(a)}catch(k){}},_publishLayer:function(a){dojo.forEach(a,dojo.hitch(this,function(a){this.geoRssLayer.add(a)}));dojo.publish("geoRssLayerLoaded",[{esriLayer:this.geoRssLayer}])},_projectionError:function(){},_getSimpleGRSSPoint:function(a){a=a.firstChild.nodeValue.split(" ");
return new esri.geometry.Point(a[1],a[0],this.wgs84Sref)},_getGMLGRSSPoint:function(a){a=this._getNonTextNodeChild(this._getNonTextNodeChild(a)).firstChild.nodeValue.split(" ");return new esri.geometry.Point(a[1],a[0],this.wgs84Sref)},_getNonTextNodeChild:function(a){for(var a=a.childNodes,b=0;b<a.length;b++)if(a[b].nodeType!==3)return a[b]},_getW3CGRSSPoint:function(a){var b=a.nextSibling;if(a.nextSibling.nodeName==="#text")b=a.nextSibling.nextSibling;return new esri.geometry.Point(b.firstChild.nodeValue,
a.firstChild.nodeValue,this.wgs84Sref)},_getFeedRoot:function(a){for(var a=a.childNodes,b=0;b<a.length;b++)if(a[b].nodeName.substring(0,3)!=="xml")return a[b]}});dojo.provide("geocortex.essentials.Layer");
dojo.declare("geocortex.essentials.Layer",geocortex.essentials.AsyncInitializable,{constructor:function(){this.dataLinks=[];this.properties=[];this.extensions=[];this.reports=[];this.subLayerIds=[];this.featureHyperlinks=[];this.fields=[];this.relationships=[]},configuredVisible:false,dataLinks:null,defaultVisibility:false,displayField:null,displayName:null,extensions:null,featureDescription:null,featureLongDescription:null,featureHyperlinks:null,featureLabel:null,featureFillColor:null,featureBorderColor:null,
featureType:"None",type:geocortex.essentials.LayerType.UNKNOWN,featureZoomScale:null,featureZoomFactor:null,fields:null,relationships:null,fullExtent:null,hasDataLinks:false,hasAttachments:false,hasReports:false,iconUri:null,id:null,identifiable:false,includeInLayerList:true,includeInLegend:true,isExpanded:false,mapService:null,maxScale:0,minScale:0,name:null,legendUrl:null,styleName:null,wmsLayerName:null,parentLayerId:null,primaryKeyField:null,properties:null,reports:null,searchable:false,showMapTips:false,
subLayerIds:null,_visible:false,getRelatedFeatureLayer:function(a,b,c){var d=new dojo.Deferred,e=this._getRelation(a);if(!e)return e=Error("Relation not found: "+a),geocortex.deferredReject(d,e),typeof c=="function"&&c(e),d;a=this.getLayerUrl();e=a.substring(0,a.lastIndexOf("/")+1)+e.relatedTableId;e=new esri.layers.FeatureLayer(e,{mode:esri.layers.FeatureLayer.MODE_SELECTION,outFields:["*"]});dojo.connect(e,"onLoad",dojo.hitch(this,function(a){geocortex.deferredResolve(d,a);typeof b=="function"&&
b(a)}));dojo.connect(e,"onError",dojo.hitch(this,function(a){geocortex.deferredReject(d,a);typeof c=="function"&&c(a)}));return d},areAllAncestorsVisible:function(){for(var a=this.mapService._layerKeys[this.parentLayerId];a!==null&&!geocortex.isUndefined(a);){if(!a.isVisible())return false;a=this.mapService._layerKeys[a.parentLayerId]}return true},getLayerUrl:function(){return this.mapService&&this.mapService.serviceUrl?this.mapService.serviceLayer&&this.mapService.mapServiceType===geocortex.essentials.MapServiceType.FEATURE?
this.mapService.serviceUrl:this.mapService.serviceUrl+"/"+this.id:null},findFieldByName:function(a){var b=null,c;if(this.fields)for(var d in this.fields)if((c=this.fields[d])&&c.name==a){b=c;break}return b},isVisible:function(){return this._visible},setVisibility:function(a,b){if(this.mapService){switch(this.mapService.mapServiceType){case geocortex.essentials.MapServiceType.DYNAMIC:case geocortex.essentials.MapServiceType.FEATURE:case geocortex.essentials.MapServiceType.WMS:case geocortex.essentials.MapServiceType.WMTS:case geocortex.essentials.MapServiceType.GEORSS:this._visible=
a;break;default:this._visible=true}this.mapService._setVisibility(this.id,this._visible,b)}},findReportById:function(a){if(this.reports)for(var b=0;b<this.reports.length;b++){var c=this.reports[b];if(c.id==a)return c}return null},withinScaleRange:function(a){if(this.maxScale==0&&this.minScale==Infinity||isNaN(this.maxScale)&&isNaN(this.minScale))return true;a==null&&(a=this.site.essentialsMap.calculateScale());return this.maxScale<a&&a<this.minScale},_configureDataLinks:function(a,b){for(var c in a)this.dataLinks[c]=
new geocortex.essentials.DataLink(this.url+"/datalinks/"+a[c].id),this.dataLinks[c].layer=this,this.dataLinks[c]._configureObject(a[c],b)},_configureObject:function(a,b){if(geocortex.isAnyUndefined(a,a.name,a.id,a.hasDataLinks))throw Error("Incorrect layer object returned from initialization");var c=geocortex.isUndefined;this.configuredVisible=a.visible;this.displayName=a.displayName;this.featureDescription=a.featureDescription;this.featureLongDescription=a.hasOwnProperty("featureLongDescription")?
a.featureLongDescription:a.featureDescription;this.featureLabel=a.featureLabel;this.featureType=c(a.featureType)?this.featureType:a.featureType;this.featureZoomScale=c(a.featureZoomScale)?this.featureZoomScale:a.featureZoomScale;this.featureZoomFactor=c(a.featureZoomFactor)?this.featureZoomFactor:a.featureZoomFactor;this.hasDataLinks=a.hasDataLinks;this.hasReports=a.hasReports;this.hasAttachments=a.hasAttachments;this.id=a.id;this.name=a.name;this.wmsLayerName=a.nativeID;this.parentLayerId=a.parentLayerId;
this.subLayerIds=a.subLayerIds;this._visible=a.visible;this.styleName=a.styleName;this.legendUrl=a.legendUrl;var d=a.fullExtent;if(d)this.fullExtent=new esri.geometry.Extent(d.xmin,d.ymin,d.xmax,d.ymax,d.spatialReference);d=null;if(this.mapService&&this.mapService.essentialsMap)d=this.mapService.essentialsMap.site;this.iconUri=geocortex.essentials.RestHelper.processClientSideTokens(d,a.iconUri);this.minScale=a.hasOwnProperty("minScale")&&!isNaN(a.minScale)&&a.minScale!=0?a.minScale:Infinity;this.maxScale=
a.hasOwnProperty("maxScale")&&!isNaN(a.maxScale)?a.maxScale:0;if(a.hasOwnProperty("identifiable"))this.identifiable=a.identifiable;if(a.hasOwnProperty("includeInLayerList"))this.includeInLayerList=a.includeInLayerList;if(a.hasOwnProperty("includeInLegend"))this.includeInLegend=a.includeInLegend;if(a.hasOwnProperty("searchable"))this.searchable=a.searchable;if(a.hasOwnProperty("showMapTips"))this.showMapTips=a.showMapTips;if(a.hasOwnProperty("featureBorderColor"))this.featureBorderColor=a.featureBorderColor;
if(a.hasOwnProperty("featureFillColor"))this.featureFillColor=a.featureFillColor;if(!c(a.type))this.type=this._convertLayerType(a.type);if(this.type==geocortex.essentials.LayerType.GROUP_LAYER&&a.hasOwnProperty("isExpanded"))this.isExpanded=a.isExpanded;var e;if(a.hasOwnProperty("featureHyperlinks"))for(e in a.featureHyperlinks)this.featureHyperlinks[e]=new geocortex.essentials.FeatureHyperlink(a.featureHyperlinks[e],this);if(a.hasOwnProperty("fields"))for(e in a.fields)this.fields[e]=new geocortex.essentials.Field(a.fields[e]);
if(a.hasOwnProperty("relationships"))for(e in a.relationships)a.relationships[e].id=parseInt(a.relationships[e].id),a.relationships[e].relatedTableId=parseInt(a.relationships[e].relatedTableId),this.relationships.push(a.relationships[e]);this.primaryKeyField=this.findFieldByName(a.primaryKeyField);this.displayField=this.findFieldByName(a.displayField);this._configureDataLinks(a.dataLinks,b);this._configureReports(a.reports,b);if(b)this.isInitialized=true;this.properties=geocortex._getProperties(a.properties);
this.extensions=geocortex._getExtensions(a.extensions)},_configureReports:function(a,b){for(var c in a)this.reports[c]=new geocortex.essentials.Report(this.url+"/reports/"+a[c].id),this.reports[c].layer=this,this.reports[c]._configureObject(a[c],b)},getObjectIdFieldName:function(){var a=null;if(this.primaryKeyField)a=this.primaryKeyField.name;return a},_convertLayerType:function(a){return a=="FeatureLayer"||a=="DynamicFeatureLayer"?geocortex.essentials.LayerType.FEATURE_LAYER:a=="GroupLayer"?geocortex.essentials.LayerType.GROUP_LAYER:
a=="RasterLayer"?geocortex.essentials.LayerType.RASTER_LAYER:a=="GeoRssLayer"?geocortex.essentials.LayerType.GEO_RSS_LAYER:geocortex.essentials.LayerType.UNKNOWN},_getRelation:function(a){var b;if(this.relationships)for(b=0;b<this.relationships.length;b++)if(this.relationships[b].id==parseInt(a))return this.relationships[b];return null}});dojo.provide("geocortex.essentials.Map");
dojo.declare("geocortex.essentials.Map",geocortex.essentials.AsyncInitializable,{constructor:function(){this.mapServices=[];this.supportedExportFormats=["BMP","JPEG","PNG","TIFF"];this._onExportComplete=function(){};this._onExportError=function(){}},fullExtent:null,privateEsriMap:null,initialExtent:null,mapServices:null,primaryMapService:null,site:null,supportedExportFormats:null,units:null,serviceLayersAdded:false,_onExportComplete:null,_onExportError:null,filteredLayers:function(){var a=[],b,c;
for(b=0;b<this.mapServices.length;b++){var d=this.mapServices[b];for(c=0;c<d.layers.length;c++)a.push(d.layers[c])}return a},loadServiceLayersInMap:function(a){if(a){this.privateEsriMap=a;if(this.initialExtent){if(this.initialExtent.spatialReference&&!a.spatialReference)a.spatialReference=this.initialExtent.spatialReference;a.setExtent(this.initialExtent)}for(var b in this.mapServices){var c=this.mapServices[b].serviceLayer;c&&(c.loaded?this._layerLoadedUpdate(a):dojo.connect(c,"onLoad",dojo.hitch(this,
"_layerLoadedUpdate",a)))}}},calculateScale:function(){return esri.geometry.getScale(this.site.getMap().extent,this.site.getMap().width,this.site.getMap().spatialReference.wkid)},_addServiceLayers:function(a){for(var b=this.mapServices.length-1;b>=0;b--)a.addLayer(this.mapServices[b].serviceLayer);if(this.site!==null&&dojo.isObject(this.site)&&dojo.isFunction(this.site.onServiceLayersLoaded))this.site.onServiceLayersLoaded(this.site)},_configureMapServices:function(a,b){var c,d,e;for(d in a){c=a[d];
e=this.url+"/mapservices/"+c.id;if(!geocortex.isUndefined(c.drawingBehavior)&&c.drawingBehavior==geocortex.essentials.DrawingBehavior.FEATURE_LAYER){if(!dojo.isObject(esri.layers.FeatureLayer))throw Error("This Javascript application must // dojo.require the esri.layers.FeatureLayer package in order to use a site with feature layers");this.mapServices[d]=new geocortex.essentials.FeatureLayerService(e)}else if(!geocortex.isUndefined(c.drawingBehavior)&&c.drawingBehavior==geocortex.essentials.DrawingBehavior.GeoRSS_LAYER){if(!dojo.isObject(esri.layers.GraphicsLayer))throw Error("This Javascript application must // dojo.require the esri.layers.GraphicsLayer package in order to use a site with GeoRSS layers");
this.mapServices[d]=new geocortex.essentials.GeoRssLayerService(c.connectionString)}else this.mapServices[d]=new geocortex.essentials.MapService(e);this.mapServices[d].essentialsMap=this;this.mapServices[d]._configureObject(c,b)}},_configureObject:function(a,b){if(geocortex.isAnyUndefined([a,a.mapServices]))throw Error("Incorrect map object returned from initialization");if(a.initialExtent)this.initialExtent=new esri.geometry.Extent(a.initialExtent);if(a.fullExtent)this.fullExtent=new esri.geometry.Extent(a.fullExtent);
if(a.units)this.units=new geocortex.essentials.DistanceUnit(a.units.name,a.units.type);this._configureMapServices(a.mapServices,b);if(b)this.isInitialized=true;this.primaryMapService=this.findMapServiceById(a.primaryMapServiceID)},findMapServiceById:function(a){for(var b in this.mapServices)if(this.mapServices[b].id==a)return this.mapServices[b];return null},exportMap:function(a,b,c){try{this._onExportComplete=b;this._onExportError=c;var d=this.url+"/export",b={},e=c=null;if(this.site)c=this.site._getEsriMap(),
e=this.site.essentialsMap;a&&a.toJson&&(b=a.toJson(c,e));b.symbols&&this._adjustTextSymbols(b.symbols);var f=geocortex.encodeJson(dojo.mixin({f:"json"},b));if(f.graphics&&f.symbols)f.graphics='{"layers":'+f.graphics+', "symbols":'+f.symbols+"}",f.symbols=null}catch(g){this._exportRestError(g);return}geocortex.request({url:d,content:f,load:dojo.hitch(this,this._exportRestComplete),error:dojo.hitch(this,this._exportRestError),callbackParamName:"CallBack"})},_adjustTextSymbols:function(a){for(var b in a)a[b].declaredClass===
"esri.symbol.TextSymbol"&&(a[b].yoffset+=parseInt(a[b].font.size,10)*1.2)},_exportRestComplete:function(a){var b=null;if(a){if(a.error)b=a.error}else b=Error(500,"Unexpected Error");geocortex.essentials.RestHelper.executeCallbacks(this,this._onExportComplete,this._onExportError,b,a)},_exportRestError:function(a){geocortex.essentials.RestHelper.executeCallbacks(this,this._onExportComplete,this._onExportError,a)},_layerLoadedUpdate:function(a){if(!this.serviceLayersAdded){for(var b in this.mapServices)if(!this.mapServices[b].serviceLayer.loaded)return;
this._addServiceLayers(a);this.serviceLayersAdded=true}}});dojo.provide("geocortex.essentials.NamedExtent");
dojo.declare("geocortex.essentials.NamedExtent",geocortex.essentials.AsyncInitializable,{constructor:function(){this.extensions=[];this.properties=[]},displayName:null,extensions:null,extent:null,id:null,properties:null,site:null,navigateTo:function(){if(this.site){var a=this.site._getEsriMap();a&&a.setExtent(this.extent)}},_configureObject:function(a){if(geocortex.isAnyUndefined([a,a.id,a.displayName,a.extent]))throw Error("Incorrect named extent object returned from initialization");this.id=a.id;
this.displayName=a.displayName;this.extent=new esri.geometry.Extent(a.extent);this.properties=geocortex._getProperties(a.properties);this.extensions=geocortex._getExtensions(a.extensions)}});dojo.provide("geocortex.essentials.PrintTemplate");
dojo.declare("geocortex.essentials.PrintTemplate",geocortex.essentials.AsyncInitializable,{constructor:function(){this.extensions=[];this.properties=[];this.supportedMapScales=[];this.supportedOutputFormats=[];this.supportedResolutions=[];this.textFields=[];this._onPrintComplete=function(){};this._onPrintError=function(){}},description:null,displayName:null,extensions:null,id:null,visible:null,maximumResolution:300,properties:null,site:null,supportedMapScales:null,supportedOutputFormats:null,supportedResolutions:null,
supportsEmailNotification:false,textFields:null,type:geocortex.essentials.ReportType.MAP_TEMPLATE_REPORT,_printing:false,isPrinting:function(){return this._printing},print:function(a,b,c){if(this.isPrinting())geocortex.essentials.RestHelper.executeCallbacks(this,b,c,Error(400,"Template already printing"));else{this._printing=true;try{this._onPrintComplete=b;this._onPrintError=c;var d=this.url+"/print",b={},e=c=null;if(this.site!==null)c=this.site._getEsriMap(),e=this.site.essentialsMap;a&&a.toJson&&
(b=a.toJson(c,e));b.symbols&&this._adjustTextSymbols(b.symbols);var f=geocortex.encodeJson(dojo.mixin({f:"json"},b));if(f.graphics&&f.symbols)f.graphics='{"layers":'+f.graphics+', "symbols":'+f.symbols+"}",f.symbols=null}catch(g){this._printRestError(g);return}geocortex.request({url:d,content:f,load:dojo.hitch(this,this._printRestComplete),error:dojo.hitch(this,this._printRestError),callbackParamName:"CallBack"})}},_onPrintComplete:null,_onPrintError:null,_adjustTextSymbols:function(a){for(var b in a)a[b].declaredClass===
"esri.symbol.TextSymbol"&&(a[b].yoffset+=parseInt(a[b].font.size,10)*1.2)},_configureObject:function(a,b){if(geocortex.isAnyUndefined([a,a.id,a.displayName]))throw Error("Incorrect print template object returned from initialization");var c=geocortex.isUndefined;this.description=c(a.description)?this.description:a.description;this.displayName=a.displayName;this.id=a.id;this.visible=c(a.visible)?true:a.visible;this.maximumResolution=c(a.maximumResolution)?this.maximumResolution:a.maximumResolution;
this.supportedMapScales=c(a.supportedScales)?this.supportedMapScales:a.supportedScales;this.supportedOutputFormats=c(a.supportedOutputFormats)?this.supportedOutputFormats:a.supportedOutputFormats;this.supportedResolutions=c(a.supportedResolutions)?this.supportedResolutions:a.supportedResolutions;this.supportsEmailNotification=!!a.supportsEmailNotification;this.textFields=c(a.textFields)?this.textFields:a.textFields;if(b)this.isInitialized=true;this.properties=geocortex._getProperties(a.properties);
this.extensions=geocortex._getExtensions(a.extensions)},_printRestComplete:function(a){this._printing=false;var b=null;if(a){if(a.error)b=a.error}else b=Error(500,"Unexpected Error");geocortex.essentials.RestHelper.executeCallbacks(this,this._onPrintComplete,this._onPrintError,b,a)},_printRestError:function(a){this._printing=false;geocortex.essentials.RestHelper.executeCallbacks(this,this._onPrintComplete,this._onPrintError,a)}});dojo.provide("geocortex.essentials.Report");
dojo.declare("geocortex.essentials.Report",geocortex.essentials.AsyncInitializable,{constructor:function(){this.extensions=[];this.properties=[];this.supportedMapScales=[];this.supportedOutputFormats=[];this.supportedResolutions=[];this.textFields=[];this._onRunReportComplete=function(){};this._onRunReportError=function(){}},description:null,displayName:null,extensions:null,id:null,visible:null,layer:null,properties:null,supportedMapScales:null,supportedOutputFormats:null,supportedResolutions:null,
textFields:null,_running:false,isRunning:function(){return this._running},run:function(a,b,c,d){if(this.isRunning())geocortex.essentials.RestHelper.executeCallbacks(this,c,d,Error(400,"Report already running"));else{this._running=true;try{this._onRunReportComplete=c;this._onRunReportError=d;var e=this.layer,f=this.url+"/run",c={},d={},g=null,j=null;if(e!==null&&e.mapService!==null&&e.mapService.essentialsMap!==null&&e.mapService.essentialsMap.site!==null)var h=e.mapService.essentialsMap.site,g=h._getEsriMap(),
j=h.essentialsMap;c=b.toJson(g,j);a!==null&&(d=geocortex.essentials.RestHelper._createRestParametersFromQuery(a));var k=geocortex.encodeJson(dojo.mixin({f:"json"},c,d))}catch(l){this._runRestError(l);return}geocortex.request({url:f,load:dojo.hitch(this,this._runRestComplete),content:k,error:dojo.hitch(this,this._runRestError),callbackParamName:"CallBack"})}},_onRunReportComplete:null,_onRunReportError:null,_configureObject:function(a,b){if(geocortex.isUndefined(a.id)||geocortex.isUndefined(a.displayName))throw Error("Incorrect report object returned from initialization");
var c=geocortex.isUndefined;this.id=a.id;this.visible=c(a.visible)?true:a.visible;this.supportedOutputFormats=a.supportedOutputFormats;this.supportedResolutions=a.supportedResolutions;this.supportedMapScales=a.supportedScales;this.textFields=a.textFields;this.description=a.description;this.displayName=a.displayName;if(b)this.isInitialized=true;this.properties=geocortex._getProperties(a.properties);this.extensions=geocortex._getExtensions(a.extensions)},_runRestComplete:function(a){this._running=false;
var b=null;if(a){if(a.error)b=a.error}else b=Error(500,"Unexpected Error");geocortex.essentials.RestHelper.executeCallbacks(this,this._onRunReportComplete,this._onRunReportError,b,a)},_runRestError:function(a){this._running=false;geocortex.essentials.RestHelper.executeCallbacks(this,this._onRunReportComplete,this._onRunReportError,a)}});dojo.provide("geocortex.essentials.ReportParameters");
dojo.declare("geocortex.essentials.ReportParameters",null,{constructor:function(){this.fields=[]},customExtent:null,extentType:"currentExtent",fields:null,mapGraphicsLayers:null,notificationEmailAddress:null,outputFormat:null,resolution:null,scale:null,targetSpatialReference:null,toJson:function(a,b){if(!a||!b)throw Error("Reporting parameter creation is missing a main map.");var c={},d,e,f;if(this.extentType==geocortex.essentials.ReportParameters.CURRENT_EXTENT&&a!==null)d=a.extent;else if(this.extentType==
geocortex.essentials.ReportParameters.FULL_EXTENT&&b!==null)d=b.fullExtent;else if(this.extentType==geocortex.essentials.ReportParameters.INITIAL_EXTENT&&b!==null)d=b.initialExtent;else if(this.extentType==geocortex.essentials.ReportParameters.CUSTOM_EXTENT&&this.customExtent!==null)d=this.customExtent;if(d){if(d.spatialReference&&(e=d.spatialReference.toJson()))if(e.wkid&&e.wkid>0)c.bboxSR=e.wkid;else if(e.wkt)c.bboxSR=e.wkt;c.bbox=d.xmin+","+d.ymin+","+d.xmax+","+d.ymax}if(this.targetSpatialReference&&
(e=this.targetSpatialReference.toJson()))if(e.wkid&&e.wkid>0)c.targetSR=e.wkid;else if(e.wkt)c.targetSR=e.wkt;if(this.notificationEmailAddress)c.emailAddress=this.notificationEmailAddress;if(this.imageHeight&&this.imageHeight>0)c.imageHeight=this.imageHeight;if(this.imageWidth&&this.imageWidth>0)c.imageWidth=this.imageWidth;if(a.timeExtent)c.time="",c.time+=a.timeExtent.startTime?a.timeExtent.startTime.getTime():"null",c.time+=",",c.time+=a.timeExtent.endTime?a.timeExtent.endTime.getTime():"null";
d=[];if(b!==null){var g=e="",j="";for(f in b.mapServices){var h=b.mapServices[f],k="",l=h.serviceLayer,m,o="";if(l)if(l.visible===true&&(g+=(g===""?"":";")+h.id+":"+l.opacity),h.mapServiceType===geocortex.essentials.MapServiceType.DYNAMIC){m=l.layerDefinitions;var q=0,r;for(r in m)q>0&&(o+=","),o+='"'+r+'":"'+m[r].replace(/\\/g,"\\\\").replace(/"/g,'\\"')+'"',q++;q>0&&(j.length>1&&(j+=","),j+='"'+h.id+'":{',j+=o,j+="}");l.visible===true&&l.visibleLayers&&(k=l.visibleLayers.toString())}else if(l.visible===
true)if(!h.layers||h.layers.length===0)k="*";else if(h.layers&&h.layers.length>0)for(var s in h.layers)m=h.layers[s],m.isVisible()&&m.areAllAncestorsVisible()&&(k+=(k.length===0?"":",")+m.id);m=h.id;m+=k.length===0?"(hide:*)":"(show:"+k+")";e+=(e.length===0?"":";")+m;if(h.isInstanceOf(geocortex.essentials.FeatureLayerService)){k={};k.id=h.id;if((m=l.getSelectionSymbol())&&m.color)m=m.color.toRgba(),k.selectionColor={r:m[0],g:m[1],b:m[2],a:m[3]};k.mode=h.queryMode;if(h=l.getDefinitionExpression())k.where=
h;if(l.renderer)k.renderer=l.renderer.toJson();k.selectedFeatures=[];if((h=l.getSelectedFeatures())&&h.length>0)if(l=l.objectIdField)for(var t in h)m=h[t],m.attributes&&(m=m.attributes[l])&&k.selectedFeatures.push(m);d.push(k)}}if(j.length>0)c.layerDefinitions="{"+j+"}";if(e.length>0)c.layers=e;if(g.length>0)c.opacity=g}if(d.length>0)c.featureLayerOptions=d;if(this.scale)c.scale=this.scale.scale;if(this.outputFormat)c.outputFormat=this.outputFormat;if(this.resolution)c.dpi=this.resolution.dpi;if(this.mapGraphicsLayers)c.graphics=
this.mapGraphicsLayers.layers,c.symbols=this.mapGraphicsLayers.symbols;for(f in this.fields)r=this.fields[f],c[r.id]=r.value;return c},populateMapGraphicsLayers:function(a){var b=[],c=[];this.mapGraphicsLayers={};this._extractGraphicInformation(a.graphics,b,c);for(var d in a.graphicsLayerIds){var e=a.getLayer(a.graphicsLayerIds[d]);e.visible&&e.declaredClass!=="esri.layers.FeatureLayer"&&this._extractGraphicInformation(e,b,c)}this.mapGraphicsLayers.layers=b;this.mapGraphicsLayers.symbols=c},_extractGraphicInformation:function(a,
b,c){for(var d in a.graphics){var e={},f=a.graphics[d],g;for(g in c)if(f.symbol&&c[g]==f.symbol){e.symbolID=""+g;f.symbol.id=e.symbolID;break}if(geocortex.isUndefined(e.symbolID))e.symbolID=""+c.length,f.symbol===null||geocortex.isUndefined(f.symbol)?c.push(a.renderer.getSymbol(f)):c.push(f.symbol),c[e.symbolID].id=e.symbolID;e.geometry=f.geometry;f=[];f.push(e);e={};e.elements=f;e.opacity=a.opacity;b.push(e)}}});
dojo.mixin(geocortex.essentials.ReportParameters,{CURRENT_EXTENT:"currentExtent",CUSTOM_EXTENT:"customExtent",FULL_EXTENT:"fullExtent",INITIAL_EXTENT:"initialExtent"});dojo.provide("geocortex.essentials.Resolution");dojo.declare("geocortex.essentials.Resolution",null,{constructor:function(a,b){if(a!==void 0)this.displayName=a;if(b!==void 0)this.dpi=b},displayName:null,dpi:null});dojo.provide("geocortex.essentials.RestEndpointResult");
dojo.declare("geocortex.essentials.RestEndpointResult",null,{constructor:function(a,b){this.error=b;if(this.resultObject=a)this.rawJson=geocortex.encodeJson(a)},error:null,rawJson:null,resultObject:null});dojo.provide("geocortex.essentials.RestHelper");dojo.declare("geocortex.essentials.RestHelper",null,{});
dojo.mixin(geocortex.essentials.RestHelper,{executeCallbacks:function(a,b,c,d,e){if(d!==null&&typeof c=="function")try{c(a,d)}catch(f){alert("REST Error: "+f)}try{b(e)}catch(g){}},processClientSideTokens:function(a,b){if(b===null||geocortex.isUndefined(b))return null;var c="";if(b!==""){var d="";if(a)d=a.url;var c=geocortex.essentials.RestHelper._replaceToken("SiteRestUrl",b,d),c=geocortex.essentials.RestHelper._replaceToken("VirtualDirectoryUrl",c,d+"/virtualdirectory"),e=window.location.href.substring(0,
window.location.href.lastIndexOf("/")),c=geocortex.essentials.RestHelper._replaceToken("HostUri",c,e),d=d.substring(0,d.lastIndexOf("/sites/"))+"/virtualdirectory",c=geocortex.essentials.RestHelper._replaceToken("RestVirtualDirectoryUrl",c,d)}return c},_replaceToken:function(a,b,c){var d="";b&&(d=b.replace("{"+a+"}",c));return d}});
geocortex.essentials.RestHelper._createRestParametersFromQuery=function(a){var b={};if(a)b=a.toJson(),b.spatialRel=geocortex.essentials.RestHelper._convertSpatialRelationshipToDotnet(b.spatialRel);return b};
geocortex.essentials.RestHelper._convertSpatialRelationshipToDotnet=function(a){switch(a){case esri.tasks.Query.SPATIAL_REL_CONTAINS:return"esriSpatialRelContains";case esri.tasks.Query.SPATIAL_REL_CROSSES:return"esriSpatialRelCrosses";case esri.tasks.Query.SPATIAL_REL_ENVELOPEINTERSECTS:return"esriSpatialRelEnvelopeIntersects";case esri.tasks.Query.SPATIAL_REL_INDEXINTERSECTS:return"esriSpatialRelIndexIntersects";case esri.tasks.Query.SPATIAL_REL_INTERSECTS:return"esriSpatialRelIntersects";case esri.tasks.Query.SPATIAL_REL_OVERLAPS:return"esriSpatialRelOverlaps";
case esri.tasks.Query.SPATIAL_REL_RELATION:return"esriSpatialRelRelation";case esri.tasks.Query.SPATIAL_REL_TOUCHES:return"esriSpatialRelTouches";case esri.tasks.Query.SPATIAL_REL_WITHIN:return"esriSpatialRelWithin"}return a};
geocortex.essentials.RestHelper._convertSpatialRelationshipFromDotnetIndex=function(a){switch(a){case 1:return esri.tasks.Query.SPATIAL_REL_CONTAINS;case 2:return esri.tasks.Query.SPATIAL_REL_CROSSES;case 3:return esri.tasks.Query.SPATIAL_REL_ENVELOPEINTERSECTS;case 4:return esri.tasks.Query.SPATIAL_REL_INDEXINTERSECTS;case 0:return esri.tasks.Query.SPATIAL_REL_INTERSECTS;case 5:return esri.tasks.Query.SPATIAL_REL_OVERLAPS;case 8:return esri.tasks.Query.SPATIAL_REL_RELATION;case 6:return esri.tasks.Query.SPATIAL_REL_TOUCHES;
case 7:return esri.tasks.Query.SPATIAL_REL_WITHIN}return a};dojo.provide("geocortex.essentials.RestHelperHTTPService");
dojo.declare("geocortex.essentials.RestHelperHTTPService",null,{constructor:function(a,b){if(!geocortex.isUndefined(a))this.requestObject=a;if(dojo.isFunction(this.requestObject.error))this._error=this.requestObject.error,this.requestObject.error=null;if(dojo.isFunction(this.requestObject.handle))this._handle=this.requestObject.handle;this.requestObject.handle=dojo.hitch(this,this._handleProxy);if(!geocortex.isUndefined(b))this.optionsObject=b;this._deferred=new dojo.Deferred},requestObject:null,
optionsObject:null,_handle:null,_error:null,_deferred:null,_handleProxy:function(a,b){this._isUnauthorizedResponse(a)===false&&dojo.isFunction(this._handle)&&this._handle(a,b)},_requestCallback:function(a){this._deferred.resolve(a)},_requestErrback:function(a){this._isUnauthorizedResponse(a)?this._handleUnauthenticated(a):(dojo.isFunction(this._error)&&this._error(a),this._deferred.reject(a))},_isUnauthorizedResponse:function(a){return a&&a.code===401?true:false},_handleUnauthenticated:function(a){if(a&&
a.tokenService){if(geocortex.hasProxy()===false)throw Error("No proxy page is configured - a proxy page is required to access secured Sites");var b=this.requestObject.url,c=a.tokenService,d=geocortex.essentials.RestHelperHTTPService._controlBlocks.find(this.requestObject.url);if(d===null||d.token!==null&&d.token!==""){var e=new dojo._Url(b),c=e.scheme+"://"+e.host+(e.port&&e.port!=="80"?":"+e.port:"")+c;d||(d=new geocortex.essentials.AuthenticationControlBlock);d.messageFromServer=a.message;d.token===
null?(d.tokenService=c,d.tokenRootUri=c.substring(0,c.lastIndexOf("/")),d.targetRootUri=b.substring(0,b.lastIndexOf("/")),d.pendingCalls.push(this),geocortex.essentials.RestHelperHTTPService._controlBlocks.add(d),this._gatherCredentials().then(dojo.hitch(this,function(a){d.username=a.username;d.password=a.password;this._requestToken(d)}))):(d.token=null,d.pendingCalls=[],d.pendingCalls.push(this),this._requestToken(d))}else{a=false;for(b=0;b<d.pendingCalls.length;b++)if(d.pendingCalls[b]===this){a=
true;break}a===false&&d.pendingCalls.push(this)}}else dojo.isFunction(this._error)&&this._error(a),this._deferred.reject(a)},_gatherCredentials:function(a){var b;b=geocortex.isUndefined(a)?new dojo.Deferred:a;if(!dijit.Dialog||!dijit.form||!dijit.form.TextBox||!dijit.form.Button)dojo.require("dijit.Dialog"),dojo.require("dijit.form.TextBox"),dojo.require("dijit.form.Button"),dojo.addOnLoad(dojo.hitch(this,function(){this._gatherCredentials(b)}));else{var c=geocortex.essentials.RestHelperHTTPService._controlBlocks.find(this.requestObject.url),
a=geocortex.config.authenticationDialogId,d;a?d=dijit.byId(a):a=geocortex.config.authenticationDialogId="geocortex_authenticationDialog_default";if(!d||!(d instanceof dijit.Dialog))d=new dijit.Dialog({title:"Authentication Required",id:a,content:this._createAuthDialogContent()});dojo.html.set(dojo.byId(a+"_message"),c.messageFromServer?c.messageFromServer:"");var c=dijit.byId(a+"_ok"),a=dijit.byId(a+"_cancel"),e,f,g;e=dojo.connect(c,"onClick",function(){dojo.forEach([e,f,g],dojo.disconnect);var a=
d.attr("value");b.resolve({username:a.username,password:a.password})});f=dojo.connect(a,"onClick",function(){dojo.forEach([e,f,g],dojo.disconnect);d.hide();b.cancel()});g=dojo.connect(d,"onCancel",function(){dojo.forEach([e,f,g],dojo.disconnect);b.cancel()});d.show()}return b},_createAuthDialogContent:function(){var a=geocortex.config.authenticationDialogId,b=new dijit.form.TextBox({name:"username",id:"gcx_auth_username"}),c=new dijit.form.TextBox({type:"password",name:"password",id:"gcx_auth_password"}),
d=new dijit.form.Button({label:"OK",type:"submit",id:a+"_ok"}),e=new dijit.form.Button({label:"Cancel",type:"button",id:a+"_cancel"}),f=dojo.create("div");dojo.create("div",{id:a+"_message"},f);var g=dojo.create("table",null,f),j=dojo.create("tr",null,g),h=dojo.create("tr",null,g),g=dojo.create("tr",null,g);dojo.place("<td><label for='gcx_auth_username'>Username: </label></td>",j);dojo.place("<td><label for='gcx_auth_password'>Password: </label></td>",h);j=dojo.create("td",null,j);h=dojo.create("td",
null,h);g=dojo.create("td",{colspan:"2",align:"center"},g);a=dojo.create("div",{id:a+"_actionbuttoncontainer"},g);b.placeAt(j);c.placeAt(h);d.placeAt(a);e.placeAt(a);return f},_requestToken:function(a){esri.request({url:a.tokenService,content:{username:a.username,password:a.password,lifespan:"20",f:"json"},timeout:geocortex.config.io.timeout,handleAs:"json"},{usePost:true}).then(dojo.hitch(this,this._onTokenRequestCompleted),dojo.hitch(this,this._onTokenRequestFault))},_onTokenRequestFault:function(a){if(this._isUnauthorizedResponse(a)){var b=
geocortex.essentials.RestHelperHTTPService._controlBlocks.find(this.requestObject.url);b.messageFromServer=a.message;this._gatherCredentials().then(dojo.hitch(this,function(a){b.username=a.username;b.password=a.password;this._requestToken(b)}))}else dojo.isFunction(this._error)&&this._error(a),this._deferred.errback(a)},_onTokenRequestCompleted:function(a){var b=geocortex.essentials.RestHelperHTTPService._controlBlocks.find(this.requestObject.url);if(a&&a.token){b.token=a.token;dojo.publish("geocortex_authenticationSucceeded",
[{username:b.username,token:b.token}]);for(a=b.pendingCalls.length-1;a>=0;a--){var c=b.pendingCalls[a];b.pendingCalls.pop();c.send()}}else geocortex.essentials.RestHelperHTTPService._controlBlocks.remove(b)},send:function(){if(this.requestObject!==null){var a=geocortex.essentials.RestHelperHTTPService._controlBlocks.find(this.requestObject.url);if(a!==null&&a.token!==null){if(!this.requestObject.content)this.requestObject.content={};if(this.requestObject.url.indexOf("token=")===-1)this.requestObject.url=
this.requestObject.url.indexOf("?")!==-1?this.requestObject.url+"&token="+encodeURIComponent(a.token):this.requestObject.url+"?token="+encodeURIComponent(a.token)}}else if(this.requestObject.url.indexOf("token=")!==-1)this.requestObject.url=this.requestObject.url.replace("token=","oldtkn=");esri.request(this.requestObject,this.optionsObject).then(dojo.hitch(this,this._requestCallback),dojo.hitch(this,this._requestErrback));return this._deferred.promise}});
dojo.mixin(geocortex.essentials.RestHelperHTTPService,{_controlBlocks:new geocortex.essentials.AuthenticationControlBlockStore,getAuthenticationControlBlockStore:function(){return _controlBlocks}});dojo.provide("geocortex.essentials.RestUtility");
dojo.declare("geocortex.essentials.RestUtility",null,{constructor:function(){},_activeEndpointRequest:false,_onRequestComplete:null,_onRequestError:null,getCustomRestEndpoint:function(a,b,c,d,e){this._activeEndpointRequest?_onEndpointRequestError(Error("An operation is already in progress.")):(this._activeEndpointRequest=true,this._onRequestComplete=c,this._onRequestError=d,geocortex.request({url:a,content:b,load:dojo.hitch(this,this._onEndpointRequestComplete),error:dojo.hitch(this,this._onEndpointRequestError),
callbackParamName:"CallBack"},e))},_onEndpointRequestComplete:function(a){this._activeEndpointRequest=false;try{if(!a)a={},a.error=Error(500,"Unexpected Error");a.error&&this._onRequestError&&this._onRequestError(a.error)}finally{this._onRequestComplete&&this._onRequestComplete(new geocortex.essentials.RestEndpointResult(a,a.error))}},_onEndpointRequestError:function(a){this._activeEndpointRequest=false;try{this._onRequestError&&this._onRequestError(a)}finally{this._onRequestComplete&&this._onRequestComplete(new geocortex.essentials.RestEndpointResult(null,
a))}}});dojo.provide("geocortex.essentials.Scale");dojo.declare("geocortex.essentials.Scale",null,{constructor:function(a,b){this.displayName=a;this.scale=b},displayName:null,scale:null});dojo.provide("geocortex.essentials.ServiceHelper");dojo.declare("geocortex.essentials.ServiceHelper",null,{});dojo.mixin(geocortex.essentials.ServiceHelper,{extractConnectionStringValue:function(a,b){if(a.length>0){var c=a.match("(^|;)[s]*"+b+"=([^;]*)");if(c!==null)return c[2]}return""}});dojo.provide("geocortex.essentials.Site");
dojo.declare("geocortex.essentials.Site",geocortex.essentials.AsyncInitializable,{constructor:function(a,b){this.url=a;this._esriMap=b;this.extensions=[];this.geocodingEndpoints=[];this.geometryEndpoints=[];this.geoprocessingEndpoints=[];this.namedExtents=[];this.printTemplates=[];this.properties=[];this.workflows=[];this.onLayerLoad=function(){};this.onLayerLoadError=function(){};this.onServiceLayersLoaded=function(){}},currentVersion:null,deepInitialize:false,displayName:null,updateInterval:null,
essentialsMap:null,extensions:null,geocodingEndpoints:null,geometryEndpoints:null,geoprocessingEndpoints:null,hasGeocodingEndpoints:false,hasGeometryEndpoints:false,hasGeoprocessingEndpoints:false,hasNamedExtents:false,hasNorthArrow:false,hasOverviewMap:false,hasPrintTemplates:false,hasViewers:false,hasVirtualDirectory:false,hasWorkflows:false,id:null,namedExtents:null,overviewMap:null,printTemplates:null,properties:null,url:null,workflows:null,findWorkflowById:function(a){if(this.workflows)for(var b in this.workflows)if(this.workflows[b].id==
a)return this.workflows[b];return null},findPrintTemplateById:function(a){if(this.printTemplates)for(var b in this.printTemplates)if(this.printTemplates[b].id==a)return this.printTemplates[b];return null},getFeatureServices:function(){var a=[];for(i=0;i<this.essentialsMap.mapServices.length;i++){var b=this.essentialsMap.mapServices[i];b.isInstanceOf(geocortex.essentials.FeatureLayerService)&&a.push(b)}return a},_esriMap:null,_geocodingEndpointsInitialized:false,_geometryEndpointsInitialized:false,
_geoprocessingEndpointsInitialized:false,_mapInitialized:false,_namedExtentsInitialized:false,_overviewMapInitialized:false,_printTemplatesInitialized:false,_workflowsInitialized:false,onLayerLoad:null,onLayerLoadError:null,onServiceLayersLoaded:null,initialize:function(){this._initialize()},getWorkflowById:function(a){return this.findWorkflowById(a)},getMap:function(){return this._esriMap},_initializedHandlerCalled:false,_tokenIntervalHandle:null,_getEsriMap:function(){return this._esriMap},_getVersion:function(){var a=
3;if(this.currentVersion){var b=this.currentVersion.split(".");b.length>=2&&(a=parseFloat(b[0]+"."+b[1]))}return a},_initAsyncCollection:function(a,b,c,d){if(a&&c&&d)for(var e in a)if(c[e]=new d(this.url+"/"+b+"/"+a[e].id),c[e].site=this,c[e]._configureObject(a[e]),this.deepInitialize===true&&d!==geocortex.essentials.Workflow)c[e].isInitialized=true;this._siteInitializeUpdate()},_initAsyncCollectionErrorHandler:function(a,b){a();this._initializationFailedHandler(b);this._siteInitializeUpdate()},_initGeocodingEndpointsHandler:function(a){this._geocodingEndpointsInitialized=
true;a&&this._initAsyncCollection(a.geocodingEndpoints,"geocoding",this.geocodingEndpoints,geocortex.essentials.GeocodingEndpoint)},_initGeometryEndpointsHandler:function(a){this._geometryEndpointsInitialized=true;a&&this._initAsyncCollection(a.geometryEndpoints,"geometry",this.geometryEndpoints,geocortex.essentials.GeometryEndpoint)},_initGeoprocessingEndpointsHandler:function(a){this._geoprocessingEndpointsInitialized=true;a&&this._initAsyncCollection(a.geoprocessingEndpoints,"geoprocessing",this.geoprocessingEndpoints,
geocortex.essentials.GeoprocessingEndpoint)},_initialize:function(){if(!this.isInitialized&&!this._initializing)this._initializedHandlerCalled=false,this._initializing=true,geocortex.request({url:this.url,content:{f:"json",deep:this.deepInitialize},load:dojo.hitch(this,this._verifySiteDependencies),error:dojo.hitch(this,this._initSiteErrorHandler),callbackParamName:"CallBack"})},_initMapHandler:function(a){this._mapInitialized=true;a!==null&&a.site!==null&&a.loadServiceLayersInMap(a.site._getEsriMap());
this._siteInitializeUpdate()},_initMapErrorHandler:function(a){this._mapInitialized=true;this._initializationFailedHandler(a);this._siteInitializeUpdate()},_initNamedExtentsHandler:function(a){this._namedExtentsInitialized=true;a&&this._initAsyncCollection(a.namedExtents,"namedextents",this.namedExtents,geocortex.essentials.NamedExtent)},_initOverviewMapHandler:function(){this._overviewMapInitialized=true;this._siteInitializeUpdate()},_initOverviewMapErrorHandler:function(a){this._overviewMapInitialized=
true;this._initializationFailedHandler(a);this._siteInitializeUpdate()},_initPrintTemplatesHandler:function(a){this._printTemplatesInitialized=true;a&&this._initAsyncCollection(a.printTemplates,"printtemplates",this.printTemplates,geocortex.essentials.PrintTemplate)},_getUpdatedServiceTokens:function(){geocortex.request({url:this.url+"/update",content:{f:"json"},load:dojo.hitch(this,this._processServiceTokensHandler),error:dojo.hitch(this,this._processServiceTokensErrorHandler),callbackParamName:"CallBack"})},
_processServiceTokensHandler:function(a){a&&a.mapServiceTokens&&this._updateServiceTokens(this.essentialsMap,a.mapServiceTokens);a&&a.overviewMapServiceTokens&&this._updateServiceTokens(this.overviewMap,a.overviewMapServiceTokens)},_processServiceTokensErrorHandler:function(a){throw a;},_updateServiceTokens:function(a,b){if(a&&b)for(var c in b){var d=a.findMapServiceById(b[c].id);d&&d._updateServiceToken(b[c].token)}},_initSiteHandler:function(a){var b=this;if(!a||geocortex.isUndefined(a.hasNamedExtents))throw Error("Incorrect site object returned from initialization");
this.hasGeocodingEndpoints=!!a.hasGeocodingEndpoints;this.hasGeometryEndpoints=!!a.hasGeometryEndpoints;this.hasGeoprocessingEndpoints=!!a.hasGeoprocessingEndpoints;this.hasNamedExtents=!!a.hasNamedExtents;this.hasNorthArrow=!!a.hasNorthArrow;this.hasOverviewMap=!!a.hasOverviewMap;this.hasPrintTemplates=!!a.hasPrintTemplates;this.hasViewers=!!a.hasViewers;this.hasVirtualDirectory=!!a.hasVirtualDirectory;this.hasWorkflows=!!a.hasWorkflows;this.displayName=a.displayName;this.id=a.id;this.currentVersion=
geocortex.isUndefined(a.currentVersion)?"3.0":a.currentVersion;if(a.hasOwnProperty("updateInterval")){if(this.updateInterval=parseInt(a.updateInterval),isNaN(this.updateInterval))this.updateInterval=0}else this.updateInterval=0;if(this.updateInterval>=60)this._tokenIntervalHandle=setInterval(function(){b._getUpdatedServiceTokens()},this.updateInterval*1E3);this.properties=geocortex._getProperties(a.properties);this.extensions=geocortex._getExtensions(a.extensions);this.essentialsMap=new geocortex.essentials.Map(this.url+
"/map");this.essentialsMap.site=this;dojo.connect(this.essentialsMap,"onInitialized",dojo.hitch(this,this._initMapHandler));dojo.connect(this.essentialsMap,"onInitializationFailed",dojo.hitch(this,this._initMapErrorHandler));if(this.hasOverviewMap)this.overviewMap=new geocortex.essentials.Map(this.url+"/overviewmap"),this.overviewMap.site=this,dojo.connect(this.overviewMap,"onInitialized",dojo.hitch(this,this._initOverviewMapHandler)),dojo.connect(this.overviewMap,"onInitializationFailed",dojo.hitch(this,
this._initOverviewMapErrorHandler));!this.deepInitialize||this._getVersion()<3.3||geocortex.isUndefined(a.map)?(this.essentialsMap.initialize(),this.hasOverviewMap&&this.overviewMap.initialize(),this.hasGeocodingEndpoints?geocortex.request({url:this.url+"/geocoding",content:{f:"json"},load:dojo.hitch(this,this._initGeocodingEndpointsHandler),error:dojo.hitch(this,this._initAsyncCollectionErrorHandler,dojo.hitch(this,function(){this._geocodingEndpointsInitialized=true})),callbackParamName:"CallBack"}):
this._geocodingEndpointsInitialized=true,this.hasGeometryEndpoints?geocortex.request({url:this.url+"/geometry",content:{f:"json"},load:dojo.hitch(this,this._initGeometryEndpointsHandler),error:dojo.hitch(this,this._initAsyncCollectionErrorHandler,dojo.hitch(this,function(){this._geometryEndpointsInitialized=true})),callbackParamName:"CallBack"}):this._geometryEndpointsInitialized=true,this.hasGeoprocessingEndpoints?geocortex.request({url:this.url+"/geoprocessing",content:{f:"json"},load:dojo.hitch(this,
this._initGeoprocessingEndpointsHandler),error:dojo.hitch(this,this._initAsyncCollectionErrorHandler,dojo.hitch(this,function(){this._geoprocessingEndpointsInitialized=true})),callbackParamName:"CallBack"}):this._geoprocessingEndpointsInitialized=true,this.hasNamedExtents?geocortex.request({url:this.url+"/namedextents",content:{f:"json"},load:dojo.hitch(this,this._initNamedExtentsHandler),error:dojo.hitch(this,this._initAsyncCollectionErrorHandler,dojo.hitch(this,function(){this._namedExtentsInitialized=
true})),callbackParamName:"CallBack"}):this._namedExtentsInitialized=true,this.hasPrintTemplates?geocortex.request({url:this.url+"/printtemplates",content:{f:"json"},load:dojo.hitch(this,this._initPrintTemplatesHandler),error:dojo.hitch(this,this._initAsyncCollectionErrorHandler,dojo.hitch(this,function(){this._printTemplatesInitialized=true})),callbackParamName:"CallBack"}):this._printTemplatesInitialized=true,this.hasWorkflows?geocortex.request({url:this.url+"/workflows",content:{f:"json"},load:dojo.hitch(this,
this._initWorkflowsHandler),error:dojo.hitch(this,this._initAsyncCollectionErrorHandler,dojo.hitch(this,function(){this._workflowsInitialized=true})),callbackParamName:"CallBack"}):this._workflowsInitialized=true):(this._initGeocodingEndpointsHandler(a),this._initGeometryEndpointsHandler(a),this._initGeoprocessingEndpointsHandler(a),this.essentialsMap.initialize(a.map),this._initNamedExtentsHandler(a),this.overviewMap.initialize(a.overviewMap),this._initPrintTemplatesHandler(a),this._initWorkflowsHandler(a));
this._siteInitializeUpdate()},_initSiteErrorHandler:function(a){this._workflowsInitialized=this._printTemplatesInitialized=this._namedExtentsInitialized=this._geoprocessingEndpointsInitialized=this._geometryEndpointsInitialized=this._geocodingEndpointsInitialized=true;this._initializationFailedHandler(a);this._siteInitializeUpdate()},_initWorkflowsHandler:function(a){this._workflowsInitialized=true;a&&this._initAsyncCollection(a.workflows,"workflows",this.workflows,geocortex.essentials.Workflow)},
_siteInitializeUpdate:function(){if(this._geocodingEndpointsInitialized&&this._geometryEndpointsInitialized&&this._geoprocessingEndpointsInitialized&&this._mapInitialized&&this._namedExtentsInitialized&&this._overviewMapInitialized&&this._printTemplatesInitialized&&this._workflowsInitialized&&!this._initializedHandlerCalled)this._initializedHandlerCalled=true,this._initializedHandler(this)},_verifySiteDependencies:function(a){a&&a.hasFeatureLayers?(dojo.require("esri.layers.FeatureLayer"),dojo.addOnLoad(dojo.hitch(this,
function(){this._initSiteHandler(a)}))):this._initSiteHandler(a)}});dojo.provide("geocortex.essentials.TextField");dojo.declare("geocortex.essentials.TextField",null,{constructor:function(a,b,c,d){this.id=a;this.displayName=b;this.value=c;this.multiline=d},displayName:null,id:null,multiline:false,value:null});dojo.provide("geocortex.essentials.Workflow");
dojo.declare("geocortex.essentials.Workflow",geocortex.essentials.AsyncInitializable,{constructor:function(){this.extensions=[];this.externalActivities=[];this.properties=[];this._inputs=[];this._outputs=[]},displayName:null,error:null,extensions:null,externalActivities:null,id:null,properties:null,site:null,_inputs:null,_outputs:null,getInputs:function(){return this._cloneArgumentInfoCollection(this._inputs)},getOutputsMetadata:function(){return this._cloneArgumentInfoCollection(this._outputs)},
_cloneArgumentInfoCollection:function(a){var b=null;if(a!==null)for(var b=[],c=0;c<a.length;c++)b.push(a[c]._internalClone());return b},_configureObject:function(a){if(geocortex.isUndefined(a.id)||geocortex.isUndefined(a.displayName))throw Error("Incorrect workflow object returned from initialization");var b,c,d;this.id=a.id;this.displayName=a.displayName;this.error=a.error;this._inputs=[];this._outputs=[];this.externalActivities=[];if(a.inputs!==null)for(b in a.inputs)c=a.inputs[b],d=new geocortex.workflow.ArgumentInfo,
d._configureObject(c),this._inputs[b]=d;if(a.outputs!==null)for(b in a.outputs)c=a.outputs[b],d=new geocortex.workflow.ArgumentInfo,d._configureObject(c),this._outputs[b]=d;if(a.externalActivities!==null)for(b in a.externalActivities)c=a.externalActivities[b],d=new geocortex.workflow.ExternalActivityInfo,d._configureObject(c),this.externalActivities[b]=d;this.properties=geocortex._getProperties(a.properties);this.extensions=geocortex._getExtensions(a.extensions)}});dojo.provide("geocortex.forms.DataItem");
dojo.declare("geocortex.forms.DataItem",null,{constructor:function(a,b,c){this.display=a;this.value=b;this.typeName=c},display:null,value:null,typeName:null,getValue:function(){var a=this.value;this.typeName!=null&&(a=geocortex.workflow.WorkflowControllerProxy._getObjectFromJsonWithType(a,this.typeName));this.value!=null&&typeof this.value.__type!="undefined"&&delete a.__type;return a}});dojo.provide("geocortex.forms.FormButton");
dojo.declare("geocortex.forms.FormButton",null,{constructor:function(a,b,c,d){this.label=new Observable(a);this.value=new Observable(b);this.isDefault=d?new Observable(d):new Observable(false);this.causesValidation=new Observable(c)},label:null,value:null,isDefault:null,causesValidation:null});dojo.provide("geocortex.forms.FormDefinition");
dojo.declare("geocortex.forms.FormDefinition",null,{constructor:function(a,b){this.knownTypes=[];this.inputData=b;this.version=this._version;this._controlMap={};this._cascadingMap={};var c=null;a&&(c=dojox.xml.parser.parse(a));if(c!=null){this._xmlDoc=c.documentElement;c=geocortex.forms.getElementText(this._xmlDoc,"Version");if(parseFloat(c)>this._version)throw Error(500,"Form version "+c+" is incompatible with current API version "+this._version);this.title=new Observable(geocortex.forms.getElementText(this._xmlDoc,
"Title"));this.maxWidth=new Observable(parseInt(geocortex.forms.getElementText(this._xmlDoc,"MaxWidth")));this.maxHeight=new Observable(parseInt(geocortex.forms.getElementText(this._xmlDoc,"MaxHeight")));var d=geocortex.forms.getElement(this._xmlDoc,"KnownTypes");if(d!=null)for(c=0;c<d.childNodes.length;c++)this.knownTypes.push(d.childNodes[c].firstChild.data);this.containerFormItem=new geocortex.forms.items.ContainerFormItem(geocortex.forms.getElement(this._xmlDoc,"ContainerFormItem"),this)}else this.containerFormItem=
new geocortex.forms.items.ContainerFormItem(null,this),this.containerFormItem.itemID=new Observable("Group1"),this.title=new Observable(""),this.maxWidth=new Observable(NaN),this.maxHeight=new Observable(NaN);for(var e in this._cascadingMap)if(this._cascadingMap.hasOwnProperty(e))for(c=0;c<this._cascadingMap[e].length;++c)d=this._cascadingMap[e][c],this._controlMap[e].cascadingEvent.subscribe(d.formItem,d.handler)},title:null,version:null,maxWidth:null,inputData:null,maxHeight:null,containerFormItem:null,
inputGeometry:null,knownTypes:null,_formManager:null,_version:1.1,_xmlDoc:null,_formContainer:null,_cascadingMap:null,_controlMap:null,addCascading:function(a,b,c){this._cascadingMap.hasOwnProperty(a)==false&&(this._cascadingMap[a]=[]);this._cascadingMap[a].push({formItem:b,handler:c})},map:function(a){this._controlMap[a.itemID.get()]=a},render:function(){},validate:function(){return this.containerFormItem.validate()},getResults:function(){return this.containerFormItem._getResults()},destroy:function(){this.containerFormItem._destroy()}});
dojo.provide("geocortex.forms.items.AutoCompleteBoxFormItem");
dojo.declare("geocortex.forms.items.AutoCompleteBoxFormItem",[geocortex.forms.items.LabelContainer,geocortex.forms.items.TextBoxFormItem,geocortex.forms.items.QueryTaskFormItem],{constructor:function(a){a?(this.minimumPrefixLength=new Observable(parseInt(geocortex.forms.getElementText(this._xmlDoc,"MinimumPrefixLength"))),this.minimumPopulateDelay=new Observable(parseInt(geocortex.forms.getElementText(this._xmlDoc,"MinimumPopulateDelay")))):(this.minimumPrefixLength=new Observable(3),this.minimumPopulateDelay=
new Observable(200))},minimumPrefixLength:null,minimumPopulateDelay:null});dojo.provide("geocortex.forms.items.CheckBoxFormItem");
dojo.declare("geocortex.forms.items.CheckBoxFormItem",geocortex.forms.items.FormItem,{constructor:function(a){a?(this.text=new Observable(geocortex.forms.getElementText(this._xmlDoc,"Text")),this.checked=new Observable(geocortex.forms._parseBoolean(geocortex.forms.getElementText(this._xmlDoc,"Checked"))),this.textLocation=new Observable(geocortex.forms.getElementText(this._xmlDoc,"TextLocation"))):(this.text=new Observable(""),this.checked=new Observable(false),this.textLocation=new Observable("Right"))},
text:null,checked:null,textLocation:null,getResult:function(){return new geocortex.forms.items.FormItemResult(this.argumentName.get(),this.checked.get())},_render:function(){return geocortex.forms.renderFormItem(this)},_destroy:function(){this.inherited("_destroy",arguments)}});dojo.provide("geocortex.forms.items.ComboBoxFormItem");
dojo.declare("geocortex.forms.items.ComboBoxFormItem",[geocortex.forms.items.LabelContainer,geocortex.forms.items.DataItemsFormItem,geocortex.forms.items.QueryTaskFormItem],{constructor:function(a){if(a&&(a=geocortex.forms.getElementText(this._xmlDoc,"SelectText")))this.selectText=new Observable(a);this.selected=new Observable("0");this.prepareForResults();a=this.queryCascadingID.get();String.isNullOrEmpty(a)&&this.performQuery("")},selectText:null,selected:null,triggerCascading:function(a){(this.selected==
null||!a)&&this.cascadingEvent.publish(null);var b=parseInt(this.selected.get()),c=null;b!=-1&&(c=this.getDataItem(b+1));c==null&&(c=a);c==null?this.cascadingEvent.publish(null):this.cascadingEvent.publish(c.value)},prepareForResults:function(){this.inherited(arguments);var a="";this.selectText&&(a=this.selectText.get());a=new geocortex.forms.DataItem(a,"",null);a.index=-1;this.dataItems.insertItem(0,a);this.selected.set("-1")},getResult:function(){if(this.selected==null||this.selected.get()==null)return new geocortex.forms.items.FormItemResult(this.argumentName.get(),
null);var a=parseInt(this.selected.get());if(a==-1)return null;a=this.getDataItem(a+1);return!a?new geocortex.forms.items.FormItemResult(this.argumentName.get(),null):new geocortex.forms.items.FormItemResult(this.argumentName.get(),a.getValue())},_addOption:function(a,b){this.dataItems.add(geocortex.forms.DataItem(a,b))},_render:function(){return geocortex.forms.renderFormItem(this)},_destroy:function(){this.inherited("_destroy",arguments)}});dojo.provide("geocortex.forms.items.ContainerFormItem");
dojo.declare("geocortex.forms.items.ContainerFormItem",geocortex.forms.items.FormItem,{constructor:function(a){this.formItems=new ObservableCollection;if(a){if(this.orientation=new Observable(geocortex.forms.getElementText(this._xmlDoc,"Orientation")),this.description=new Observable(geocortex.forms.getElementText(this._xmlDoc,"Description")),this.maxWidth=new Observable(parseInt(geocortex.forms.getElementText(this._xmlDoc,"MaxWidth"))),a=geocortex.forms.getElement(this._xmlDoc,"FormItems"),a!=null)for(var b=
0;b<a.childNodes.length;b++){var c=geocortex.forms.items._processFormItem(a.childNodes[b],this.formDefinition);c!=null&&this.formItems.addItem(c)}}else this.orientation=new Observable("Vertical"),this.description=new Observable(""),this.maxWidth=new Observable(NaN)},orientation:null,description:null,maxWidth:null,validate:function(){var a=[];if(this.formItems!=null)for(var b=0;b<this.formItems.getLength();++b)for(var c=this.formItems.getAt(b).validate(),d=0;d<c.length;++d)a.push(c[d]);return a},_getResults:function(){for(var a=
[],b=0;b<this.formItems.getLength();++b){var c=this.formItems.getAt(b);if(c.isInstanceOf(geocortex.forms.items.ContainerFormItem)){if(c=c._getResults(),c!=null)for(var d=0;d<c.length;++d)a.push(c[d])}else c=c.getResult(),c!=null&&a.push(c)}return a},_destroy:function(){for(;this.formItems.length>0;)this.formItems[this.formItems.length-1]._destroy(),this.formItems.pop()},_render:function(){return geocortex.forms.renderFormItem(this)}});dojo.provide("geocortex.forms.items.DatePickerFormItem");
dojo.declare("geocortex.forms.items.DatePickerFormItem",[geocortex.forms.items.LabelContainer,geocortex.forms.items.FormItem],{constructor:function(a){if(a){this.dateFormat=new Observable(geocortex.forms.getElementText(this._xmlDoc,"DateFormat"));this.includeTimePicker=new Observable(geocortex.forms.getElementText(this._xmlDoc,"IncludeTimePicker")==="true");a=null;if(this.includeTimePicker.get())this.timePickerItem=new geocortex.forms.items.TimePickerFormItem(geocortex.forms.getElement(this._xmlDoc,
"TimePickerItem")),a=this.timePickerItem.initialTime.get();var b=null,c=null;(b=geocortex.forms.getElementText(this._xmlDoc,"InitialDate"))&&b.indexOf("Z")<0&&(b+="Z");b=Date.parse(b);isNaN(b)?this.initialDate=new Observable(a):(b=new Date(b),c=new Date,c.setDate(b.getUTCDate()),c.setFullYear(b.getUTCFullYear()),c.setMonth(b.getUTCMonth()),a&&(c.setHours(a.getUTCHours()),c.setMinutes(a.getUTCMinutes()),c.setSeconds(a.getUTCSeconds())),this.initialDate=new Observable(c))}else this.dateFormat=new Observable("Long"),
this.initialDate=new Observable(null),this.includeTimePicker=new Observable(false);this.date=this.initialDate.get()?new Observable(this.initialDate.get()):new Observable(new Date);this._dateFormatStr=new Observable;this.dateFormat.bind(this,function(a){a==="Long"?this._dateFormatStr.set("DD MM dd, yy"):this._dateFormatStr.set("mm/dd/yy")});this.dateFormat.pulse()},date:null,initialDate:null,includeTimePicker:null,timePickerItem:null,dateFormat:null,_dateFormatStr:null,getResult:function(){return new geocortex.forms.items.FormItemResult(this.argumentName.get(),
this.date.get())},_render:function(){return geocortex.forms.renderFormItem(this)},_destroy:function(){this.inherited("_destroy",arguments)}});dojo.provide("geocortex.forms.items.FormItemResult");dojo.declare("geocortex.forms.items.FormItemResult",null,{constructor:function(a,b,c){this.argumentName=a;this.value=b;this.wasSet=c},argumentName:null,value:null,wasSet:false,isList:false});dojo.provide("geocortex.forms.items.GroupBoxFormItem");
dojo.declare("geocortex.forms.items.GroupBoxFormItem",geocortex.forms.items.ContainerFormItem,{constructor:function(a){this.header=a?new Observable(geocortex.forms.getElementText(this._xmlDoc,"Header")):new Observable(null)},header:null,_render:function(){return geocortex.forms.renderFormItem(this)}});dojo.provide("geocortex.forms.items.HyperlinkFormItem");
dojo.declare("geocortex.forms.items.HyperlinkFormItem",[geocortex.forms.items.FormItem],{constructor:function(a){a?(this.hyperlinkText=new Observable(geocortex.forms.getElementText(this._xmlDoc,"HyperlinkText")),this.target=new Observable(geocortex.forms.getElementText(this._xmlDoc,"Target")),this.uri=new Observable(geocortex.forms.getElementText(this._xmlDoc,"Uri"))):(this.hyperlinkText=new Observable("Hyperlink"),this.target=new Observable("_blank"),this.uri=new Observable(""));this.wasClicked=
new Observable(false)},hyperlinkText:null,target:null,uri:null,wasClicked:null,getResult:function(){return new geocortex.forms.items.FormItemResult(this.argumentName.get(),this.wasClicked.get(),this.wasClicked.get())},_render:function(){return geocortex.forms.renderFormItem(this)},_destroy:function(){this.inherited("_destroy",arguments)}});dojo.provide("geocortex.forms.items.ImageFormItem");
dojo.declare("geocortex.forms.items.ImageFormItem",[geocortex.forms.items.FormItem],{constructor:function(a){if(a){this.source=new Observable(geocortex.forms.getElementText(this._xmlDoc,"Source"));this.width=new Observable(geocortex.forms.getElementText(this._xmlDoc,"Width"));this.height=new Observable(geocortex.forms.getElementText(this._xmlDoc,"Height"));var a=this.width.get(),b=this.height.get();a&&b?parseInt(a)>parseInt(b)?this.height.set("auto"):this.width.set("auto"):(this.width=new Observable("auto"),
this.height=new Observable("auto"))}else this.source=new Observable(""),this.width=new Observable("auto"),this.height=new Observable("auto")},source:null,width:null,height:null,_render:function(){return geocortex.forms.renderFormItem(this)},_destroy:function(){this.inherited("_destroy",arguments)}});dojo.provide("geocortex.forms.items.LabelFormItem");
dojo.declare("geocortex.forms.items.LabelFormItem",geocortex.forms.items.FormItem,{constructor:function(a){a?(this.text=new Observable(geocortex.forms.getElementText(this._xmlDoc,"Text")),this.labelForItemID=new Observable(geocortex.forms.getElementText(this._xmlDoc,"LabelForItemID"))):(this.text=new Observable(null),this.labelForItemID=new Observable(null))},text:null,labelForItemID:null,_render:function(){return geocortex.forms.renderFormItem(this)}});dojo.provide("geocortex.forms.items.ListBoxFormItem");
dojo.declare("geocortex.forms.items.ListBoxFormItem",[geocortex.forms.items.LabelContainer,geocortex.forms.items.QueryTaskFormItem],{constructor:function(a){a?(this.maxHeight=new Observable(parseInt(geocortex.forms.getElementText(this._xmlDoc,"MaxHeight"))),this.selectionMode=new Observable(geocortex.forms.getElementText(this._xmlDoc,"SelectionMode"))):(this.label=new geocortex.forms.items.LabelFormItem(null,this.formDefinition),this.maxHeight=new Observable(NaN),this.selectionMode=new Observable("Single"));
this.selection=new ObservableCollection;a=this.queryCascadingID.get();String.isNullOrEmpty(a)&&this.performQuery("")},label:null,maxHeight:null,selectionMode:null,selection:null,triggerCascading:function(a){(this.selection==null||!a)&&this.cascadingEvent.publish(null);var b=parseInt(this.selection.getAt(0)),c=null;b!=-1&&(c=this.getDataItem(b));c==null&&(c=a);c==null?this.cascadingEvent.publish(null):this.cascadingEvent.publish(c.value)},getResult:function(){if(this.selectionMode.get().toLowerCase()==
"single"){var a=null;this.selection.getLength()>0&&(a=parseInt(this.selection.getAt(0)),a=(a=this.getDataItem(a))?a.getValue():null);return new geocortex.forms.items.FormItemResult(this.argumentName.get(),a,true)}else{for(var b=[],c=0;c<this.selection.getLength();++c)a=parseInt(this.selection.getAt(c)),(a=(a=this.getDataItem(a))?a.getValue():null)&&b.push(a);a=new geocortex.forms.items.FormItemResult(this.argumentName.get(),b,true);a.isList=true;return a}},_render:function(){return geocortex.forms.renderFormItem(this)},
_destroy:function(){this.inherited("_destroy",arguments)}});dojo.provide("geocortex.forms.items.RadioButtonFormItem");
dojo.declare("geocortex.forms.items.RadioButtonFormItem",geocortex.forms.items.FormItem,{constructor:function(a){a?(this.text=new Observable(geocortex.forms.getElementText(this._xmlDoc,"Text")),this.checked=new Observable(geocortex.forms._parseBoolean(geocortex.forms.getElementText(this._xmlDoc,"Checked"))),this.textLocation=new Observable(geocortex.forms.getElementText(this._xmlDoc,"TextLocation")),this.groupName=new Observable(geocortex.forms.getElementText(this._xmlDoc,"GroupName"))):(this.text=
new Observable(null),this.checked=new Observable(false),this.textLocation=new Observable("Right"),this.groupName=new Observable(null))},text:null,groupName:null,checked:null,textLocation:null,getResult:function(){var a=this.__getRadioValueClosure,a=a?a():false;return a=new geocortex.forms.items.FormItemResult(this.argumentName.get(),a)},_render:function(){return geocortex.forms.renderFormItem(this)},_destroy:function(){this.inherited("_destroy",arguments)}});dojo.provide("geocortex.forms.items.TextAreaFormItem");
dojo.declare("geocortex.forms.items.TextAreaFormItem",[geocortex.forms.items.LabelContainer,geocortex.forms.items.TextBoxFormItem],{constructor:function(a){this.textboxHeight=a?new Observable(parseInt(geocortex.forms.getElementText(this._xmlDoc,"TextboxHeight"))):new Observable(1)},textboxHeight:null});dojo.provide("geocortex.forms.items.TimePickerFormItem");
dojo.declare("geocortex.forms.items.TimePickerFormItem",[geocortex.forms.items.LabelContainer,geocortex.forms.items.FormItem],{constructor:function(a){if(a){var a=null,b=geocortex.forms.getElementText(this._xmlDoc,"InitialTime");b&&b.indexOf("Z")<0&&(b+="Z");b=Date.parse(b);isNaN(b)||(a=new Date(b));this.initialTime=new Observable(a);this.timeFormat=new Observable(geocortex.forms.getElementText(this._xmlDoc,"TimeFormat"))}else this.initialTime=new Observable(null),this.timeFormat=new Observable("ShortTime");
this.time=this.initialTime.get()?new Observable(this.initialTime.get()):new Observable(new Date);this._timeFormatStr=new Observable;this.timeFormat.bind(this,function(a){a==="LongTime"?this._timeFormatStr.set("hh:mm:ss tt"):this._timeFormatStr.set("hh:mm tt")});this.timeFormat.pulse()},initialTime:null,timeFormat:null,_timeFormatStr:null,getResult:function(){return new geocortex.forms.items.FormItemResult(this.argumentName.get(),this.time.get())},_render:function(){return geocortex.forms.renderFormItem(this)},
_destroy:function(){this.inherited("_destroy",arguments)}});dojo.provide("geocortex.forms.items.validation.NumericRangeValidationItem");
dojo.declare("geocortex.forms.items.validation.NumericRangeValidationItem",geocortex.forms.items.validation.ValidationItem,{constructor:function(a){this._xmlDoc=a;this.minimumValue=parseFloat(geocortex.forms.getElementText(this._xmlDoc,"MinimumValue"));this.maximumValue=parseFloat(geocortex.forms.getElementText(this._xmlDoc,"MaximumValue"))},minimumValue:null,maximumValue:null,validate:function(a){if(a===null||a===void 0||a==="")return new geocortex.forms.items.validation.ValidationResult(true,null);
a=parseFloat(a);return a==null||isNaN(a)||a<this.minimumValue||a>this.maximumValue?new geocortex.forms.items.validation.ValidationResult(false,this.message):new geocortex.forms.items.validation.ValidationResult(true,null)}});dojo.provide("geocortex.forms.items.validation.RegexValidationItem");
dojo.declare("geocortex.forms.items.validation.RegexValidationItem",geocortex.forms.items.validation.ValidationItem,{constructor:function(a){this._xmlDoc=a;this.expression=geocortex.forms.getElementText(this._xmlDoc,"Expression");this.ignoreCase=geocortex.forms._parseBoolean(geocortex.forms.getElementText(this._xmlDoc,"IgnoreCase"))},expression:null,ignoreCase:null,validate:function(a){if(a===null||a===void 0||a==="")return new geocortex.forms.items.validation.ValidationResult(true,null);var b="",
c=this.expression;this.ignoreCase&&(b+="i");this.expression=='^(?(")(".+?"@)|(([0-9a-zA-Z]((\\.(?!\\.))|[-!#\\$%&\'\\*\\+/=\\?\\^`\\{\\}\\|~\\w])*)(?<=[0-9a-zA-Z])@))(?(\\[)(\\[(\\d{1,3}\\.){3}\\d{1,3}\\])|(([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,6}))$'&&(c="^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$");var d=null;try{d=RegExp(c,b)}catch(e){}return d!=null&&!d.test(a)?new geocortex.forms.items.validation.ValidationResult(false,this.message):new geocortex.forms.items.validation.ValidationResult(true,
null)}});dojo.provide("geocortex.forms.items.validation.RequiredValidationItem");dojo.declare("geocortex.forms.items.validation.RequiredValidationItem",geocortex.forms.items.validation.ValidationItem,{constructor:function(a){this._xmlDoc=a},validate:function(a){var b=true,c=null;if(a===null||typeof a==="string"&&dojo.trim(a)===""||a.length!==void 0&&a.length<=0)b=false,c=this.message;return new geocortex.forms.items.validation.ValidationResult(b,c)}});dojo.provide("geocortex.forms.items.validation.ValidationResult");
dojo.declare("geocortex.forms.items.validation.ValidationResult",null,{constructor:function(a,b){this.isValid=a;this.errorMessage=b},isValid:null,errorMessage:null});dojo.provide("geocortex.workflow.MapActivityHandlers");dojo.declare("geocortex.workflow.MapActivityHandlers",null,{});geocortex.workflow.MapActivityHandlers._pickSupported=function(a,b){var c=0;if(!a||a.length<=0)return null;for(;c<a.length;c++)if(a[c]===b)return a[c];return a[0]};
geocortex.workflow.MapActivityHandlers.handleIntersectLayers=function(a){var b=[],c=[],d=[],e=[],f=null,g=f=null,j=null,j=null,h=false,g=null,k,l;k=-1;var m=a.getValue("InputLayers");if(m&&m.length>0)for(f=0;f<m.length;f++)k=m[f].lastIndexOf("\\\\"),k>=0&&(m[f]=m[f].substring(k+2));else a.dispatcher().handleError(Error("Intersect Layers: no input layers provided."),a.workflow);(f=a.getSite())||a.dispatcher().handleError(Error("Intersect Layers: no site available."),a.workflow);(f=f.essentialsMap)||
a.dispatcher().handleError(Error("Intersect Layers: no map available."),a.workflow);(!f.mapServices||f.mapServices.length<=0)&&a.dispatcher().handleError(Error("Intersect Layers: no map service is configured for the map."),a.workflow);for(k=0;k<f.mapServices.length;k++){g=f.mapServices[k];j=g.layers;l=h=0;for(g=[];h<j.length&&l<m.length;)j[h].name<m[l]?h++:(j[h].name>m[l]||(g.push(j[h]),h++),l++);for(l=0;l<g.length;l++){j=g[l];h=false;switch(j.type){case geocortex.essentials.LayerType.FEATURE_LAYER:c.push(j.name);
h=true;break;case geocortex.essentials.LayerType.GROUP_LAYER:d.push(j.name);h=true;break;case geocortex.essentials.LayerType.RASTER_LAYER:e.push(j.name),h=true}h&&b.push(j.name)}}a.setValue("OutputLayers",b);a.setValue("FeatureLayers",c);a.setValue("GroupLayers",d);a.setValue("RasterLayers",e);a.completeActivity()};
geocortex.workflow.MapActivityHandlers.handleExportMap=function(a){var b=a.getValue("TargetSpatialReference"),c=a.getValue("CustomExtent"),d=a.getValue("Resolution"),e=a.getValue("OutputFormat"),f=a.getValue("Scale"),g=a.getValue("ImageHeight"),j=a.getValue("ImageWidth"),h=null,k=null,l=h=null;(h=a.getSite())||a.dispatcher().handleError(Error("Export Map: no site available."),a.workflow);(k=h._esriMap)||a.dispatcher().handleError(Error("Export Map: no map available."),a.workflow);(h=h.essentialsMap)||
a.dispatcher().handleError(Error("Export Map: no map available."),a.workflow);l=new geocortex.essentials.ReportParameters;l.outputFormat=geocortex.workflow.MapActivityHandlers._pickSupported(h.supportedExportFormats,e?e.toUpperCase():null);if(d)l.resolution=new geocortex.essentials.Resolution("",d);if(f)l.scale=new geocortex.essentials.Scale("",f);l.imageHeight=g?g:k.height;l.imageWidth=j?j:k.width;if(c)l.customExtent=c;l.extentType=c?geocortex.essentials.ReportParameters.CUSTOM_EXTENT:geocortex.essentials.ReportParameters.CURRENT_EXTENT;
if(b)l.targetSpatialReference=b;k&&l.populateMapGraphicsLayers(k);h.exportMap(l,function(b){reportHref=b?b.href:null;a.setValue("ResultUrl",reportHref);a.completeActivity()},function(b,c){a.dispatcher().handleError(Error("Error exporting map '"+c.message+"'"),a.workflow)})};
geocortex.workflow.MapActivityHandlers.handlePrintMap=function(a){var b=a.getValue("TargetSpatialReference"),c=a.getValue("TextFields"),d=a.getValue("CustomExtent"),e=a.getValue("NotificationEmailAddress"),f=a.getValue("Resolution"),g=a.getValue("OutputFormat"),j=a.getValue("Scale"),h=a.getValue("PrintTemplateId"),k=null,l=null,m=k=null,o=null,q=null;(k=a.getSite())||a.dispatcher().handleError(Error("Print Map: no site available."),a.workflow);(m=k._esriMap)||a.dispatcher().handleError(Error("Print Map: no map available."),
a.workflow);(q=k.findPrintTemplateById(h))||a.dispatcher().handleError(Error("Print Map: unable to find print template '"+h+"'."),a.workflow);q.isPrinting()&&a.dispatcher().handleError(Error("Print Map: unable to perform print operation because print template '"+h+"' is busy."),a.workflow);o=new geocortex.essentials.ReportParameters;o.outputFormat=geocortex.workflow.MapActivityHandlers._pickSupported(q.supportedOutputFormats,null,g);if(f)o.resolution=new geocortex.essentials.Resolution("",f);if(j)o.scale=
new geocortex.essentials.Scale("",j);if(e)o.notificationEmailAddress=e;if(d)o.customExtent=d;o.extentType=d?geocortex.essentials.ReportParameters.CUSTOM_EXTENT:geocortex.essentials.ReportParameters.CURRENT_EXTENT;if(b)o.TargetSpatialReference=b;if(q.textFields&&q.textFields.length>0&&c)for(k=0;k<c.length;k++)if(c[k])for(l=0;l<q.textFields.length;l++)c[k].Key===q.textFields[l].displayName&&(b=new geocortex.essentials.TextField(q.textFields[l].id,"",c[k].Value),o.fields.push(b));m&&o.populateMapGraphicsLayers(m);
q.print(o,function(b){reportHref=b?b.href:null;a.setValue("ResultUrl",reportHref);a.completeActivity()},function(b,c){a.dispatcher().handleError(Error("Error printing map '"+c.message+"'"),a.workflow)})};
